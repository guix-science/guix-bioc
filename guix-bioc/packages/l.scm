(define-module (guix-bioc packages l)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix build-system r)
  #:use-module ((guix licenses)
                #:prefix license:)
  #:use-module (gnu packages statistics)
  #:use-module (gnu packages bioconductor)
  #:use-module (gnu packages cran)
  #:use-module (gnu packages web)
  #:use-module (guix-cran packages l)
  #:use-module (guix-cran packages m)
  #:use-module (guix-cran packages c)
  #:use-module (guix-cran packages g)
  #:use-module (guix-cran packages i)
  #:use-module (guix-cran packages a)
  #:use-module (guix-cran packages b)
  #:use-module (guix-cran packages s)
  #:use-module (guix-bioc packages z)
  #:use-module (guix-bioc packages y)
  #:use-module (guix-bioc packages x)
  #:use-module (guix-bioc packages w)
  #:use-module (guix-bioc packages v)
  #:use-module (guix-bioc packages u)
  #:use-module (guix-bioc packages t)
  #:use-module (guix-bioc packages s)
  #:use-module (guix-bioc packages r)
  #:use-module (guix-bioc packages q)
  #:use-module (guix-bioc packages p)
  #:use-module (guix-bioc packages o)
  #:use-module (guix-bioc packages n)
  #:use-module (guix-bioc packages m)
  #:use-module (guix-bioc packages k)
  #:use-module (guix-bioc packages j)
  #:use-module (guix-bioc packages i)
  #:use-module (guix-bioc packages h)
  #:use-module (guix-bioc packages g)
  #:use-module (guix-bioc packages f)
  #:use-module (guix-bioc packages e)
  #:use-module (guix-bioc packages d)
  #:use-module (guix-bioc packages c)
  #:use-module (guix-bioc packages b)
  #:use-module (guix-bioc packages a))

(define-public r-lymphoseqdb
  (package
    (name "r-lymphoseqdb")
    (version "0.99.2")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LymphoSeqDB" version
                              'annotation))
       (sha256
        (base32 "1cdyn2imjh4zr23szndc4vwyiacxs1jsp14gil2dyq9aifa25qr7"))))
    (properties `((upstream-name . "LymphoSeqDB")))
    (build-system r-build-system)
    (home-page "https://bioconductor.org/packages/LymphoSeqDB")
    (synopsis "LymphoSeq annotation databases")
    (description
     "This package provides annotation databases that support the package
@code{LymphoSeq}.")
    (license license:artistic2.0)))

(define-public r-lymphoseq
  (package
    (name "r-lymphoseq")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LymphoSeq" version))
       (sha256
        (base32 "18g6s1fd274qrrn20w02hqav5ff53g5c61v1ygv12z370n835g42"))))
    (properties `((upstream-name . "LymphoSeq")))
    (build-system r-build-system)
    (propagated-inputs (list r-venndiagram
                             r-upsetr
                             r-stringdist
                             r-reshape
                             r-rcolorbrewer
                             r-plyr
                             r-phangorn
                             r-msa
                             r-lymphoseqdb
                             r-ineq
                             r-ggtree
                             r-ggplot2
                             r-dplyr
                             r-data-table
                             r-circlize
                             r-biostrings))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LymphoSeq")
    (synopsis "Analyze high-throughput sequencing of T and B cell receptors")
    (description
     "This R package analyzes high-throughput sequencing of T and B cell receptor
complementarity determining region 3 (CDR3) sequences generated by Adaptive
Biotechnologies @code{ImmunoSEQ} assay.  Its input comes from tab-separated
value (.tsv) files exported from the @code{ImmunoSEQ} analyzer.")
    (license license:artistic2.0)))

(define-public r-lydata
  (package
    (name "r-lydata")
    (version "1.28.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lydata" version
                              'experiment))
       (sha256
        (base32 "0gwaiq16q1kfx533hymqnh6zk9nimljdbidvzb23bykj99kmsiqr"))))
    (properties `((upstream-name . "lydata")))
    (build-system r-build-system)
    (home-page "https://bioconductor.org/packages/lydata")
    (synopsis "Example Dataset for crossmeta Package")
    (description
     "Raw data downloaded from GEO for the compound LY294002.  Raw data is from
multiple platforms from Affymetrix and Illumina.  This data is used to
illustrate the cross-platform meta-analysis of microarray data using the
crossmeta package.")
    (license license:expat)))

(define-public r-lungexpression
  (package
    (name "r-lungexpression")
    (version "0.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lungExpression" version
                              'experiment))
       (sha256
        (base32 "1kzf8lsl9sh0ikn9zx5sfj5z7ld94xldhmj7awvgp0bsbqlra2qc"))))
    (properties `((upstream-name . "lungExpression")))
    (build-system r-build-system)
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/lungExpression")
    (synopsis
     "ExpressionSets for Parmigiani et al., 2004 Clinical Cancer Research paper")
    (description
     "Data from three large lung cancer studies provided as @code{ExpressionSets}")
    (license license:gpl2+)))

(define-public r-lungcancerlines
  (package
    (name "r-lungcancerlines")
    (version "0.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LungCancerLines" version
                              'experiment))
       (sha256
        (base32 "0yr7l7964nkwlz6s9hsdab2sihrngk9wqakrn4pm5h8m15f8ls46"))))
    (properties `((upstream-name . "LungCancerLines")))
    (build-system r-build-system)
    (propagated-inputs (list r-rsamtools))
    (home-page "https://bioconductor.org/packages/LungCancerLines")
    (synopsis "Reads from Two Lung Cancer Cell Lines")
    (description
     "Reads from an RNA-seq experiment between two lung cancer cell lines: H1993 (met)
and H2073 (primary).  The reads are stored as Fastq files and are meant for use
with the TP53Genome object in the @code{gmapR} package.")
    (license license:artistic2.0)))

(define-public r-lungcanceracvssccgeo
  (package
    (name "r-lungcanceracvssccgeo")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LungCancerACvsSCCGEO" version
                              'experiment))
       (sha256
        (base32 "1d0zfx6sqwanyh67996v008sjkscskm5z24n9siklc9w416nqa63"))))
    (properties `((upstream-name . "LungCancerACvsSCCGEO")))
    (build-system r-build-system)
    (home-page "http://bioinformaticsprb.med.wayne.edu/")
    (synopsis
     "lung cancer dataset that can be used with maPredictDSC package for developing outcome prediction models from Affymetrix CEL files.")
    (description
     "This package contains 30 Affymetrix CEL files for 7 Adenocarcinoma (AC) and 8
Squamous cell carcinoma (SCC) lung cancer samples taken at random from 3 GEO
datasets (GSE10245, GSE18842 and GSE2109) and other 15 samples from a dataset
produced by the organizers of the IMPROVER Diagnostic Signature Challenge
available from GEO (GSE43580).")
    (license license:gpl2)))

(define-public r-lumiratidmapping
  (package
    (name "r-lumiratidmapping")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiRatIDMapping" version
                              'annotation))
       (sha256
        (base32 "1d30c3xkxcl8qk68ab7nf8k13m4yb2aqiavhi917yfic1mcbi9gh"))))
    (properties `((upstream-name . "lumiRatIDMapping")))
    (build-system r-build-system)
    (propagated-inputs (list r-lumi r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiRatIDMapping")
    (synopsis "Illumina Identifier mapping for Rat")
    (description
     "This package includes mappings information between different types of Illumina
IDs of Illumina Rat chips and @code{nuIDs}.  It also includes mappings of all
@code{nuIDs} included in Illumina Rat chips to @code{RefSeq} IDs with mapping
qualities information.")
    (license (license:fsdg-compatible "The Artistic License, Version 2.0"))))

(define-public r-lumiratall-db
  (package
    (name "r-lumiratall-db")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiRatAll.db" version
                              'annotation))
       (sha256
        (base32 "1yh0q8aw33xsn4phj04v0mhjn8xh3z06jrg7yfi9qz1c985z1gw6"))))
    (properties `((upstream-name . "lumiRatAll.db")))
    (build-system r-build-system)
    (propagated-inputs (list r-org-rn-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiRatAll.db")
    (synopsis
     "Illumina Rat Illumina expression annotation data (chip lumiRatAll)")
    (description
     "Illumina Rat Illumina expression annotation data (chip @code{lumiRatAll})
assembled using data from public repositories")
    (license license:artistic2.0)))

(define-public r-lumimouseidmapping
  (package
    (name "r-lumimouseidmapping")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiMouseIDMapping" version
                              'annotation))
       (sha256
        (base32 "18mc7vwp2p53ns2paa4glj570shmbq9lk318g3p9nl09mxyadim9"))))
    (properties `((upstream-name . "lumiMouseIDMapping")))
    (build-system r-build-system)
    (propagated-inputs (list r-lumi r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiMouseIDMapping")
    (synopsis "Illumina Identifier mapping for Mouse")
    (description
     "This package includes mappings information between different types of Illumina
IDs of Illumina Mouse chips and @code{nuIDs}.  It also includes mappings of all
@code{nuIDs} included in Illumina Mouse chips to @code{RefSeq} IDs with mapping
qualities information.")
    (license (license:fsdg-compatible "The Artistic License, Version 2.0"))))

(define-public r-lumimouseall-db
  (package
    (name "r-lumimouseall-db")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiMouseAll.db" version
                              'annotation))
       (sha256
        (base32 "00iawk8wb1hnvmy898nl9hc85rfzzwi34lpnv2d37rw4wdn57z33"))))
    (properties `((upstream-name . "lumiMouseAll.db")))
    (build-system r-build-system)
    (propagated-inputs (list r-org-mm-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiMouseAll.db")
    (synopsis
     "Illumina Mouse Illumina expression annotation data (chip lumiMouseAll)")
    (description
     "Illumina Mouse Illumina expression annotation data (chip @code{lumiMouseAll})
assembled using data from public repositories")
    (license license:artistic2.0)))

(define-public r-lumihumanidmapping
  (package
    (name "r-lumihumanidmapping")
    (version "1.10.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiHumanIDMapping" version
                              'annotation))
       (sha256
        (base32 "0j29cd01z840jg4zq0yczjsqnya1vpx6hajqdq96msiy4i5fj534"))))
    (properties `((upstream-name . "lumiHumanIDMapping")))
    (build-system r-build-system)
    (propagated-inputs (list r-lumi r-dbi r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiHumanIDMapping")
    (synopsis "Illumina Identifier mapping for Human")
    (description
     "This package includes mappings information between different types of Illumina
IDs of Illumina Human chips and @code{nuIDs}.  It also includes mappings of all
@code{nuIDs} included in Illumina Human chips to @code{RefSeq} IDs with mapping
qualities information.")
    (license (license:fsdg-compatible "The Artistic License, Version 2.0"))))

(define-public r-lumihumanall-db
  (package
    (name "r-lumihumanall-db")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiHumanAll.db" version
                              'annotation))
       (sha256
        (base32 "0kn2m31b4q8r1lm4iwda9i62la4akj0c35pi3khbfvkmdrvbvhd2"))))
    (properties `((upstream-name . "lumiHumanAll.db")))
    (build-system r-build-system)
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/lumiHumanAll.db")
    (synopsis
     "Illumina Human Illumina expression annotation data (chip lumiHumanAll)")
    (description
     "Illumina Human Illumina expression annotation data (chip @code{lumiHumanAll})
assembled using data from public repositories")
    (license license:artistic2.0)))

(define-public r-lumibarnes
  (package
    (name "r-lumibarnes")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lumiBarnes" version
                              'experiment))
       (sha256
        (base32 "1c27s7ajkmygfmd2g6dpsamwcm87xlxgr31wyn6g1rb7zw2zdpy2"))))
    (properties `((upstream-name . "lumiBarnes")))
    (build-system r-build-system)
    (propagated-inputs (list r-lumi r-biobase))
    (home-page "https://bioconductor.org/packages/lumiBarnes")
    (synopsis "Barnes Benchmark Illumina Tissues Titration Data")
    (description
     "The Barnes benchmark dataset can be used to evaluate the algorithms for Illumina
microarrays.  It measured a titration series of two human tissues, blood and
placenta, and includes six samples with the titration ratio of blood and
placenta as 100:0, 95:5, 75:25, 50:50, 25:75 and 0:100.  The samples were
hybridized on @code{HumanRef-8} @code{BeadChip} (Illumina, Inc) in duplicate.
The data is loaded as an @code{LumiBatch} Object (see documents in the lumi
package).")
    (license license:lgpl2.0+)))

(define-public r-lrcelltypemarkers
  (package
    (name "r-lrcelltypemarkers")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LRcellTypeMarkers" version
                              'experiment))
       (sha256
        (base32 "1wad78cpgf9pl8hl4issb0k1m0dlrk0bradkdz5b5a5pamlwh82c"))))
    (properties `((upstream-name . "LRcellTypeMarkers")))
    (build-system r-build-system)
    (arguments
     (list
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LRcellTypeMarkers")
    (synopsis "Marker gene information for LRcell R Bioconductor package")
    (description
     "This is an external @code{ExperimentData} package for LRcell.  This data package
contains the gene enrichment scores calculated from @code{scRNA-seq} dataset
which indicates the gene enrichment of each cell type in certain brain region.
LRcell package is used to identify specific sub-cell types that drives the
changes observed in a bulk RNA-seq differential gene expression experiment.  For
more details, please visit: https://github.com/marvinquiet/LRcell.")
    (license license:expat)))

(define-public r-lrcell
  (package
    (name "r-lrcell")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LRcell" version))
       (sha256
        (base32 "19p5vwsr1hq6p02g6alysm7maalrlpg8lg8r76ffsbh1wqj776fp"))))
    (properties `((upstream-name . "LRcell")))
    (build-system r-build-system)
    (arguments
     (list
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-magrittr
                             r-ggrepel
                             r-ggplot2
                             r-experimenthub
                             r-dplyr
                             r-biocparallel
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LRcell")
    (synopsis
     "Differential cell type change analysis using Logistic/linear Regression")
    (description
     "The goal of LRcell is to identify specific sub-cell types that drives the
changes observed in a bulk RNA-seq differential gene expression experiment.  To
achieve this, LRcell utilizes sets of cell marker genes acquired from
single-cell RNA-sequencing (@code{scRNA-seq}) as indicators for various cell
types in the tissue of interest.  Next, for each cell type, using its marker
genes as indicators, we apply Logistic Regression on the complete set of genes
with differential expression p-values to calculate a cell-type significance
p-value.  Finally, these p-values are compared to predict which one(s) are
likely to be responsible for the differential gene expression pattern observed
in the bulk RNA-seq experiments.  LRcell is inspired by the
LRpath[@@sartor2009lrpath] algorithm developed by Sartor et al., originally
designed for pathway/gene set enrichment analysis.  LRcell contains three major
components: LRcell analysis, plot generation and marker gene selection.  All
modules in this package are written in R. This package also provides marker
genes in the Prefrontal Cortex (@code{pFC}) human brain region, human PBMC and
nine mouse brain regions (Frontal Cortex, Cerebellum, Globus Pallidus,
Hippocampus, Entopeduncular, Posterior Cortex, Striatum, Substantia Nigra and
Thalamus).")
    (license license:expat)))

(define-public r-lrbasedbi
  (package
    (name "r-lrbasedbi")
    (version "2.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LRBaseDbi" version))
       (sha256
        (base32 "144661h85i69nvn6iv9gp8ck0grir431g0alakmr7p957xiplnd3"))))
    (properties `((upstream-name . "LRBaseDbi")))
    (build-system r-build-system)
    (propagated-inputs (list r-rsqlite r-dbi r-biobase r-annotationdbi))
    (native-inputs (list))
    (home-page "https://bioconductor.org/packages/LRBaseDbi")
    (synopsis "DBI to construct LRBase-related package")
    (description "Interface to construct LRBase package (LRBase.XXX.eg.db).")
    (license license:artistic2.0)))

(define-public r-lpnet
  (package
    (name "r-lpnet")
    (version "2.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lpNet" version))
       (sha256
        (base32 "1wf2n7k4rdj17dinq8kcm0add9n5xbd6zyvngfwgfr25x5mqg1dn"))))
    (properties `((upstream-name . "lpNet")))
    (build-system r-build-system)
    (propagated-inputs (list r-lpsolve))
    (home-page "https://bioconductor.org/packages/lpNet")
    (synopsis "Linear Programming Model for Network Inference")
    (description
     "@code{lpNet} aims at infering biological networks, in particular signaling and
gene networks.  For that it takes perturbation data, either steady-state or
time-series, as input and generates an LP model which allows the inference of
signaling networks.  For parameter identification either leave-one-out
cross-validation or stratified n-fold cross-validation can be used.")
    (license (license:fsdg-compatible "Artistic License 2.0"))))

(define-public r-lpeadj
  (package
    (name "r-lpeadj")
    (version "1.62.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LPEadj" version))
       (sha256
        (base32 "17m5lclr2rwb2z0i230gsxkccysmpcvsp4kxjpdjhvnikfm46ssp"))))
    (properties `((upstream-name . "LPEadj")))
    (build-system r-build-system)
    (propagated-inputs (list r-lpe))
    (home-page "https://bioconductor.org/packages/LPEadj")
    (synopsis
     "correction of the local pooled error (LPE) method to replace the asymptotic variance adjustment with an unbiased adjustment based on sample size.")
    (description
     "Two options are added to the LPE algorithm.  The original LPE method sets all
variances below the max variance in the ordered distribution of variances to the
maximum variance.  in LPEadj this option is turned off by default.  The second
option is to use a variance adjustment based on sample size rather than pi/2.
By default the LPEadj uses the sample size based variance adjustment.")
    (license license:lgpl2.0+)))

(define-public r-lpe
  (package
    (name "r-lpe")
    (version "1.76.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LPE" version))
       (sha256
        (base32 "0ihsyamx3zk0830bs2bfpl4ich30cs6hmr7q2l6x6b5ycgsvbdq9"))))
    (properties `((upstream-name . "LPE")))
    (build-system r-build-system)
    (home-page "http://www.r-project.org")
    (synopsis
     "Methods for analyzing microarray data using Local Pooled Error (LPE) method")
    (description
     "This LPE library is used to do significance analysis of microarray data with
small number of replicates.  It uses resampling based FDR adjustment, and gives
less conservative results than traditional BH or BY procedures.  Data accepted
is raw data in txt format from MAS4, MAS5 or @code{dChip}.  Data can also be
supplied after normalization.  LPE library is primarily used for analyzing data
between two conditions.  To use it for paired data, see LPEP library.  For using
LPE in multiple conditions, use HEM library.")
    (license license:lgpl2.0+)))

(define-public r-lowmacaannotation
  (package
    (name "r-lowmacaannotation")
    (version "0.99.3")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LowMACAAnnotation" version
                              'annotation))
       (sha256
        (base32 "0ri301ci54s8wwkah1jccy5h44xg8yjk08j5b15qmdsm25hli4wm"))))
    (properties `((upstream-name . "LowMACAAnnotation")))
    (build-system r-build-system)
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LowMACAAnnotation")
    (synopsis "LowMACAAnnotation")
    (description
     "This package provides a package containing the data to run @code{LowMACA}
package.")
    (license license:gpl3)))

(define-public r-loomexperiment
  (package
    (name "r-loomexperiment")
    (version "1.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LoomExperiment" version))
       (sha256
        (base32 "0mwc5f15s5lw36jdjz3pzm0d5bck0hbsalbcyy1zyq0pqa2lyl7k"))))
    (properties `((upstream-name . "LoomExperiment")))
    (build-system r-build-system)
    (propagated-inputs (list r-summarizedexperiment
                             r-stringr
                             r-singlecellexperiment
                             r-s4vectors
                             r-rhdf5
                             r-matrix
                             r-hdf5array
                             r-genomicranges
                             r-delayedarray
                             r-biocio))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LoomExperiment")
    (synopsis "LoomExperiment container")
    (description
     "The @code{LoomExperiment} package provide a means to easily convert the
Bioconductor \"Experiment\" classes to loom files and vice versa.")
    (license license:artistic2.0)))

(define-public r-lola
  (package
    (name "r-lola")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LOLA" version))
       (sha256
        (base32 "0w3c1bywch6629h8dbjvi24mrpxkwbaj5vaxrvyvx7a31k04zjqc"))))
    (properties `((upstream-name . "LOLA")))
    (build-system r-build-system)
    (arguments
     (list
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-s4vectors
                             r-reshape2
                             r-iranges
                             r-genomicranges
                             r-data-table
                             r-biocgenerics))
    (native-inputs (list r-knitr esbuild))
    (home-page "http://code.databio.org/LOLA")
    (synopsis "Locus overlap analysis for enrichment of genomic ranges")
    (description
     "This package provides functions for testing overlap of sets of genomic regions
with public and custom region set (genomic ranges) databases.  This makes it
possible to do automated enrichment analysis for genomic region sets, thus
facilitating interpretation of functional genomics and epigenomics data.")
    (license license:gpl3)))

(define-public r-logicfs
  (package
    (name "r-logicfs")
    (version "2.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "logicFS" version))
       (sha256
        (base32 "138w02qhmshd72ljh0mq7y6rg9yk818b74milmawvil4fx9k2dvq"))))
    (properties `((upstream-name . "logicFS")))
    (build-system r-build-system)
    (propagated-inputs (list r-survival r-mcbiopi r-logicreg))
    (home-page "https://bioconductor.org/packages/logicFS")
    (synopsis "Identification of SNP Interactions")
    (description
     "Identification of interactions between binary variables using Logic Regression.
Can, e.g., be used to find interesting SNP interactions.  Contains also a
bagging version of logic regression for classification.")
    (license license:lgpl2.0+)))

(define-public r-loci2path
  (package
    (name "r-loci2path")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "loci2path" version))
       (sha256
        (base32 "0im1s5wngnvkza62fh1qpp64fq5p4y556c1251v26230kppdmkas"))))
    (properties `((upstream-name . "loci2path")))
    (build-system r-build-system)
    (propagated-inputs (list r-wordcloud
                             r-s4vectors
                             r-rcolorbrewer
                             r-pheatmap
                             r-genomicranges
                             r-data-table
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/StanleyXu/loci2path")
    (synopsis
     "Loci2path: regulatory annotation of genomic intervals based on tissue-specific expression QTLs")
    (description
     "loci2path performs statistics-rigorous enrichment analysis of @code{eQTLs} in
genomic regions of interest.  Using @code{eQTL} collections provided by the
Genotype-Tissue Expression (GTEx) project and pathway collections from
M@code{SigDB}.")
    (license license:artistic2.0)))

(define-public r-lobstahs
  (package
    (name "r-lobstahs")
    (version "1.28.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LOBSTAHS" version))
       (sha256
        (base32 "0gbyd341hjsvkl9axb8mpyyaaks8kl5s10k1kx1hzgrfhcrm0s6d"))))
    (properties `((upstream-name . "LOBSTAHS")))
    (build-system r-build-system)
    (propagated-inputs (list r-xcms r-camera))
    (native-inputs (list r-knitr))
    (home-page "http://bioconductor.org/packages/LOBSTAHS")
    (synopsis
     "Lipid and Oxylipin Biomarker Screening through Adduct Hierarchy Sequences")
    (description
     "LOBSTAHS is a multifunction package for screening, annotation, and putative
identification of mass spectral features in large, HPLC-MS lipid datasets.  In
silico data for a wide range of lipids, oxidized lipids, and oxylipins can be
generated from user-supplied structural criteria with a database generation
function.  LOBSTAHS then applies these databases to assign putative compound
identities to features in any high-mass accuracy dataset that has been processed
using xcms and CAMERA. Users can then apply a series of orthogonal screening
criteria based on adduct ion formation patterns, chromatographic retention time,
and other properties, to evaluate and assign confidence scores to this list of
preliminary assignments.  During the screening routine, LOBSTAHS rejects
assignments that do not meet the specified criteria, identifies potential
isomers and isobars, and assigns a variety of annotation codes to assist the
user in evaluating the accuracy of each assignment.")
    (license (license:fsdg-compatible "GPL (>= 3) + file LICENSE"))))

(define-public r-lmdme
  (package
    (name "r-lmdme")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lmdme" version))
       (sha256
        (base32 "1k0ilpy29kn2v7md0ayylg8az3dj8jrjgb0jv1vbx28abfqri02s"))))
    (properties `((upstream-name . "lmdme")))
    (build-system r-build-system)
    (propagated-inputs (list r-stemhypoxia r-pls r-limma))
    (home-page "http://www.bdmg.com.ar/?page_id=38")
    (synopsis
     "Linear Model decomposition for Designed Multivariate Experiments")
    (description
     "linear ANOVA decomposition of Multivariate Designed Experiments implementation
based on limma @code{lmFit}.  Features: i)Flexible formula type interface, ii)
Fast limma based implementation, iii) p-values for each estimated coefficient
levels in each factor, iv) F values for factor effects and v) plotting functions
for PCA and PLS.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-listeretalbsseq
  (package
    (name "r-listeretalbsseq")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ListerEtAlBSseq" version
                              'experiment))
       (sha256
        (base32 "15v80d554pai4584dhy3nzwva38b9r6997br7xqysj7v8x2f4392"))))
    (properties `((upstream-name . "ListerEtAlBSseq")))
    (build-system r-build-system)
    (propagated-inputs (list r-methylpipe))
    (home-page "https://bioconductor.org/packages/ListerEtAlBSseq")
    (synopsis
     "BS-seq data of H1 and IMR90 cell line excerpted from Lister et al. 2009")
    (description
     "Base resolution bisulfite sequencing data of Human DNA methylomes")
    (license (license:fsdg-compatible "Artistic 2.0"))))

(define-public r-lisaclust
  (package
    (name "r-lisaclust")
    (version "1.10.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lisaClust" version))
       (sha256
        (base32 "1cmqvslb0f46b01d40zh3f7m95f4szhs44wwhiv0n9ppibx13mgk"))))
    (properties `((upstream-name . "lisaClust")))
    (build-system r-build-system)
    (propagated-inputs (list r-tidyr
                             r-summarizedexperiment
                             r-spicyr
                             r-spatstat-random
                             r-spatstat-geom
                             r-spatstat-explore
                             r-spatialexperiment
                             r-singlecellexperiment
                             r-s4vectors
                             r-purrr
                             r-pheatmap
                             r-ggplot2
                             r-dplyr
                             r-data-table
                             r-concaveman
                             r-class
                             r-biocparallel
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://ellispatrick.github.io/lisaClust/")
    (synopsis
     "lisaClust: Clustering of Local Indicators of Spatial Association")
    (description
     "@code{lisaClust} provides a series of functions to identify and visualise
regions of tissue where spatial associations between cell-types is similar.
This package can be used to provide a high-level summary of cell-type
colocalization in multiplexed imaging data that has been segmented at a
single-cell resolution.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-liquidassociation
  (package
    (name "r-liquidassociation")
    (version "1.56.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LiquidAssociation" version))
       (sha256
        (base32 "00k20l2cw54wzji18jdf9716xpza0h1pdh7n8d0v3krvlmiiz3zb"))))
    (properties `((upstream-name . "LiquidAssociation")))
    (build-system r-build-system)
    (propagated-inputs (list r-yeastcc r-org-sc-sgd-db r-geepack r-biobase))
    (home-page "https://bioconductor.org/packages/LiquidAssociation")
    (synopsis "LiquidAssociation")
    (description
     "The package contains functions for calculate direct and model-based estimators
for liquid association.  It also provides functions for testing the existence of
liquid association given a gene triplet data.")
    (license license:gpl3+)))

(define-public r-lipidr
  (package
    (name "r-lipidr")
    (version "2.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lipidr" version))
       (sha256
        (base32 "1jrs44553d3d7sljgkxpwnaqv1ym6j9rhwv6i764744pmijhbmbh"))))
    (properties `((upstream-name . "lipidr")))
    (build-system r-build-system)
    (propagated-inputs (list r-tidyr
                             r-summarizedexperiment
                             r-s4vectors
                             r-ropls
                             r-rlang
                             r-magrittr
                             r-limma
                             r-imputelcmd
                             r-ggplot2
                             r-forcats
                             r-fgsea
                             r-dplyr
                             r-data-table))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/ahmohamed/lipidr")
    (synopsis "Data Mining and Analysis of Lipidomics Datasets")
    (description
     "lipidr an easy-to-use R package implementing a complete workflow for downstream
analysis of targeted and untargeted lipidomics data.  lipidomics results can be
imported into lipidr as a numerical matrix or a Skyline export, allowing
integration into current analysis frameworks.  Data mining of lipidomics
datasets is enabled through integration with Metabolomics Workbench API. lipidr
allows data inspection, normalization, univariate and multivariate analysis,
displaying informative visualizations.  lipidr also implements a novel Lipid Set
Enrichment Analysis (LSEA), harnessing molecular information such as lipid
class, total chain length and unsaturation.")
    (license license:expat)))

(define-public r-lionessr
  (package
    (name "r-lionessr")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lionessR" version))
       (sha256
        (base32 "0pm4jn5jzv38d6cfxn1cjw03wm47il308jr01labfw2ya2ris24z"))))
    (properties `((upstream-name . "lionessR")))
    (build-system r-build-system)
    (propagated-inputs (list r-summarizedexperiment r-s4vectors))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/mararie/lionessR")
    (synopsis "Modeling networks for individual samples using LIONESS")
    (description
     "LIONESS, or Linear Interpolation to Obtain Network Estimates for Single Samples,
can be used to reconstruct single-sample networks
(https://arxiv.org/abs/1505.06440).  This code implements the LIONESS equation
in the lioness function in R to reconstruct single-sample networks.  The default
network reconstruction method we use is based on Pearson correlation.  However,
@code{lionessR} can run on any network reconstruction algorithms that returns a
complete, weighted adjacency matrix. @code{lionessR} works for both unipartite
and bipartite networks.")
    (license license:expat)))

(define-public r-lintind
  (package
    (name "r-lintind")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LinTInd" version))
       (sha256
        (base32 "0bk7l81x8rm13ps8n1jvd20fnl9si1139r61vzb5z0l3h3v1m9da"))))
    (properties `((upstream-name . "LinTInd")))
    (build-system r-build-system)
    (propagated-inputs (list r-stringr
                             r-stringdist
                             r-s4vectors
                             r-rlist
                             r-reshape2
                             r-purrr
                             r-pheatmap
                             r-networkd3
                             r-iranges
                             r-ggtree
                             r-ggplot2
                             r-ggnewscale
                             r-dplyr
                             r-data-tree
                             r-cowplot
                             r-biostrings
                             r-biocgenerics
                             r-ape))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LinTInd")
    (synopsis "Lineage tracing by indels")
    (description
     "When we combine gene-editing technology and sequencing technology, we need to
reconstruct a lineage tree from alleles generated and calculate the similarity
between each pair of groups. @code{FindIndel}() and @code{IndelForm}() function
will help you align each read to reference sequence and generate scar form
strings respectively. @code{IndelIdents}() function will help you to define a
scar form for each cell or read. @code{IndelPlot}() function will help you to
visualize the distribution of deletion and insertion. @code{TagProcess}()
function will help you to extract indels for each cell or read. @code{TagDist}()
function will help you to calculate the similarity between each pair of groups
across the indwells they contain. @code{BuildTree}() function will help you to
reconstruct a tree. @code{PlotTree}() function will help you to visualize the
tree.")
    (license license:expat)))

(define-public r-linkhd
  (package
    (name "r-linkhd")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LinkHD" version))
       (sha256
        (base32 "1ic1vymbp2cxxq0xkh1szw8ldc197599511azc7k6h4d42rbw74f"))))
    (properties `((upstream-name . "LinkHD")))
    (build-system r-build-system)
    (propagated-inputs (list r-vegan
                             r-scales
                             r-rio
                             r-reshape2
                             r-multiassayexperiment
                             r-gridextra
                             r-ggpubr
                             r-ggplot2
                             r-emmeans
                             r-data-table
                             r-cluster))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LinkHD")
    (synopsis
     "LinkHD: a versatile framework to explore and integrate heterogeneous data")
    (description
     "Here we present Link-HD, an approach to integrate heterogeneous datasets, as a
generalization of STATIS-ACT (“Structuration des Tableaux A Trois Indices de la
Statistique–Analyse Conjointe de Tableaux”), a family of methods to join and
compare information from multiple subspaces.  However, STATIS-ACT has some
drawbacks since it only allows continuous data and it is unable to establish
relationships between samples and features.  In order to tackle these
constraints, we incorporate multiple distance options and a linear regression
based Biplot model in order to stablish relationships between observations and
variable and perform variable selection.")
    (license license:gpl3)))

(define-public r-lineagespot
  (package
    (name "r-lineagespot")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lineagespot" version))
       (sha256
        (base32 "0yvw47ha9g1sywici5dkyb90d2sw0ypcddn1x2gls6y45l2wh1i6"))))
    (properties `((upstream-name . "lineagespot")))
    (build-system r-build-system)
    (propagated-inputs (list r-variantannotation
                             r-summarizedexperiment
                             r-stringr
                             r-matrixgenerics
                             r-httr
                             r-data-table))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/BiodataAnalysisGroup/lineagespot")
    (synopsis
     "Detection of SARS-CoV-2 lineages in wastewater samples using next-generation sequencing")
    (description
     "Lineagespot is a framework written in R, and aims to identify SARS-@code{CoV-2}
related mutations based on a single (or a list) of variant(s) file(s) (i.e.,
variant calling format).  The method can facilitate the detection of
SARS-@code{CoV-2} lineages in wastewater samples using next generation
sequencing, and attempts to infer the potential distribution of the
SARS-@code{CoV-2} lineages.")
    (license license:expat)))

(define-public r-lineagepulse
  (package
    (name "r-lineagepulse")
    (version "1.21.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LineagePulse" version))
       (sha256
        (base32 "09x1i7slysqf3dpjzck6rgfzhyswaj0kk8i047yscg8fcaksbmqg"))))
    (properties `((upstream-name . "LineagePulse")))
    (build-system r-build-system)
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-rcolorbrewer
                             r-matrix
                             r-knitr
                             r-gplots
                             r-ggplot2
                             r-complexheatmap
                             r-circlize
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/LineagePulse")
    (synopsis
     "Differential expression analysis and model fitting for single-cell RNA-seq data")
    (description
     "@code{LineagePulse} is a differential expression and expression model fitting
package tailored to single-cell RNA-seq data (@code{scRNA-seq}).
@code{LineagePulse} accounts for batch effects, drop-out and variable sequencing
depth.  One can use @code{LineagePulse} to perform longitudinal differential
expression analysis across pseudotime as a continuous coordinate or between
discrete groups of cells (e.g. pre-defined clusters or experimental conditions).
 Expression model fits can be directly extracted from @code{LineagePulse}.")
    (license license:artistic2.0)))

(define-public r-limmagui
  (package
    (name "r-limmagui")
    (version "1.78.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "limmaGUI" version))
       (sha256
        (base32 "1psx743jn36hw1np6k613wajs17rhnyny4rs0cp297z3wgv2ra86"))))
    (properties `((upstream-name . "limmaGUI")))
    (build-system r-build-system)
    (propagated-inputs (list r-xtable r-tkrplot r-r2html r-limma))
    (home-page "http://bioinf.wehi.edu.au/limmaGUI/")
    (synopsis "GUI for limma Package With Two Color Microarrays")
    (description
     "This package provides a Graphical User Interface for differential expression
analysis of two-color microarray data using the limma package.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-liebermanaidenhic2009
  (package
    (name "r-liebermanaidenhic2009")
    (version "0.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LiebermanAidenHiC2009" version
                              'experiment))
       (sha256
        (base32 "06qifvjaxjz51p2vkfdzxjbj5040772y3gzc0qpzsh5fapprkxv9"))))
    (properties `((upstream-name . "LiebermanAidenHiC2009")))
    (build-system r-build-system)
    (propagated-inputs (list r-kernsmooth r-iranges))
    (home-page "https://bioconductor.org/packages/LiebermanAidenHiC2009")
    (synopsis
     "Selected data from the HiC paper of E. Lieberman-Aiden et al. in Science (2009)")
    (description
     "This package provides data that were presented in the article \"Comprehensive
mapping of long-range interactions reveals folding principles of the human
genome\", Science 2009 Oct 9;326(5950):289-93.  PMID: 19815776")
    (license license:lgpl2.0+)))

(define-public r-levi
  (package
    (name "r-levi")
    (version "1.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "levi" version))
       (sha256
        (base32 "0p5hmj0jskwag9ay1b3njf25ajns2317dkv2l9z56xqlgnr4lycz"))))
    (properties `((upstream-name . "levi")))
    (build-system r-build-system)
    (propagated-inputs (list r-xml2
                             r-testthat
                             r-shinyjs
                             r-shinydashboard
                             r-shiny
                             r-rmarkdown
                             r-reshape2
                             r-rcpp
                             r-rcolorbrewer
                             r-knitr
                             r-igraph
                             r-httr
                             r-ggplot2
                             r-dt
                             r-dplyr
                             r-colorspace))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/levi")
    (synopsis "Landscape Expression Visualization Interface")
    (description
     "The tool integrates data from biological networks with transcriptomes,
displaying a heatmap with surface curves to evidence the altered regions.")
    (license license:gpl2+)))

(define-public r-leukemiaseset
  (package
    (name "r-leukemiaseset")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "leukemiasEset" version
                              'experiment))
       (sha256
        (base32 "1srwn3sy929hskka9gfnqpjrh8xy0pz76ihq4amq8wbdawh1zv8b"))))
    (properties `((upstream-name . "leukemiasEset")))
    (build-system r-build-system)
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/leukemiasEset")
    (synopsis "Leukemia's microarray gene expression data (expressionSet)")
    (description
     "Expressionset containing gene expresion data from 60 bone marrow samples of
patients with one of the four main types of leukemia (ALL, AML, CLL, CML) or
non-leukemia.")
    (license license:gpl2+)))

(define-public r-les
  (package
    (name "r-les")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "les" version))
       (sha256
        (base32 "00xay71lzqh59bzpm5y7y6i8p39m5dag0qzpd51jkbkbwhdg95f6"))))
    (properties `((upstream-name . "les")))
    (build-system r-build-system)
    (propagated-inputs (list r-rcolorbrewer r-gplots r-fdrtool r-boot))
    (home-page "https://bioconductor.org/packages/les")
    (synopsis "Identifying Differential Effects in Tiling Microarray Data")
    (description
     "The les package estimates Loci of Enhanced Significance (LES) in tiling
microarray data.  These are regions of regulation such as found in differential
transcription, C@code{HiP-chip}, or DNA modification analysis.  The package
provides a universal framework suitable for identifying differential effects in
tiling microarray data sets, and is independent of the underlying statistics at
the level of single probes.")
    (license license:gpl3)))

(define-public r-lemur
  (package
    (name "r-lemur")
    (version "1.0.5")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lemur" version))
       (sha256
        (base32 "1079s7m749fsg37wmwq57i7hf7ba8mz64m404sybajal8k0p4j20"))))
    (properties `((upstream-name . "lemur")))
    (build-system r-build-system)
    (propagated-inputs (list r-vctrs
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-s4vectors
                             r-rlang
                             r-rcpparmadillo
                             r-rcpp
                             r-matrixstats
                             r-matrixgenerics
                             r-matrix
                             r-limma
                             r-irlba
                             r-hdf5array
                             r-harmony
                             r-glmgampoi
                             r-delayedmatrixstats
                             r-biocneighbors
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/const-ae/lemur")
    (synopsis "Latent Embedding Multivariate Regression")
    (description
     "Fit a latent embedding multivariate regression (LEMUR) model to multi-condition
single-cell data.  The model provides a parametric description of single-cell
data measured with complex experimental designs.  The parametric model is used
to (1) align conditions, (2) predict log fold changes between conditions for all
cells, and (3) identify cell neighborhoods with consistent log fold changes.
For those neighborhoods, a pseudobulked differential expression test is
conducted to assess which genes are significantly changed.")
    (license license:expat)))

(define-public r-leebamviews
  (package
    (name "r-leebamviews")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "leeBamViews" version
                              'experiment))
       (sha256
        (base32 "0j7q5slcb59z6vf2z123h9ld0gaazsiih7an603id1bqjprkd74b"))))
    (properties `((upstream-name . "leeBamViews")))
    (build-system r-build-system)
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-iranges
                             r-genomicranges
                             r-genomicalignments
                             r-bsgenome
                             r-biobase))
    (home-page "https://bioconductor.org/packages/leeBamViews")
    (synopsis
     "leeBamViews -- multiple yeast RNAseq samples excerpted from Lee 2009")
    (description
     "data from PMID 19096707; prototype for managing multiple NGS samples")
    (license (license:fsdg-compatible "Artistic 2.0"))))

(define-public r-ledpred
  (package
    (name "r-ledpred")
    (version "1.36.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LedPred" version))
       (sha256
        (base32 "1nfsqz03xaychi6qf4cdjqb28253hdnswl6wvc3jgnjilh8xc8mm"))))
    (properties `((upstream-name . "LedPred")))
    (build-system r-build-system)
    (propagated-inputs (list r-testthat
                             r-rocr
                             r-rcurl
                             r-plyr
                             r-plot3d
                             r-jsonlite
                             r-irr
                             r-ggplot2
                             r-e1071
                             r-akima))
    (home-page "https://bioconductor.org/packages/LedPred")
    (synopsis "Learning from DNA to Predict Enhancers")
    (description
     "This package aims at creating a predictive model of regulatory sequences used to
score unknown sequences based on the content of DNA motifs, next-generation
sequencing (NGS) peaks and signals and other numerical scores of the sequences
using supervised classification.  The package contains a workflow based on the
support vector machine (SVM) algorithm that maps features to sequences, optimize
SVM parameters and feature number and creates a model that can be stored and
used to score the regulatory potential of unknown sequences.")
    (license (list license:expat
                   (license:fsdg-compatible "file://LICENSE")))))

(define-public r-lbe
  (package
    (name "r-lbe")
    (version "1.70.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LBE" version))
       (sha256
        (base32 "0fvjgrxdkw6nnrbgk554cgmmlz33gia15pmsmwkv98phrwhhv6cr"))))
    (properties `((upstream-name . "LBE")))
    (build-system r-build-system)
    (home-page "https://bioconductor.org/packages/LBE")
    (synopsis "Estimation of the false discovery rate")
    (description
     "LBE is an efficient procedure for estimating the proportion of true null
hypotheses, the false discovery rate (and so the q-values) in the framework of
estimating procedures based on the marginal distribution of the p-values without
assumption for the alternative hypothesis.")
    (license license:gpl2)))

(define-public r-lapointe-db
  (package
    (name "r-lapointe-db")
    (version "3.2.3")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LAPOINTE.db" version
                              'annotation))
       (sha256
        (base32 "0960gy5p4ybs5zs6251cgc3nk5a9gsh1nh23gkbkr3gc8jddinfm"))))
    (properties `((upstream-name . "LAPOINTE.db")))
    (build-system r-build-system)
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/LAPOINTE.db")
    (synopsis "package containing metadata for LAPOINTE arrays")
    (description
     "This package provides a package containing metadata for LAPOINTE arrays
assembled using data from public repositories")
    (license license:artistic2.0)))

(define-public r-lapmix
  (package
    (name "r-lapmix")
    (version "1.68.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "lapmix" version))
       (sha256
        (base32 "1kw4jqjfkpk2rhdxgypmamkmzl9w5csasncw4kbw1vjzbjzihfyl"))))
    (properties `((upstream-name . "lapmix")))
    (build-system r-build-system)
    (propagated-inputs (list r-biobase))
    (home-page "http://www.r-project.org")
    (synopsis "Laplace Mixture Model in Microarray Experiments")
    (description
     "Laplace mixture modelling of microarray experiments.  A hierarchical Bayesian
approach is used, and the hyperparameters are estimated using empirical Bayes.
The main purpose is to identify differentially expressed genes.")
    (license license:gpl2+)))

(define-public r-lace
  (package
    (name "r-lace")
    (version "2.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "LACE" version))
       (sha256
        (base32 "0q563ysm6rs6708gnc1qpdz9m9265wamf068pgp162mvjbg7jxs9"))))
    (properties `((upstream-name . "LACE")))
    (build-system r-build-system)
    (arguments
     (list
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-tidyr
                             r-svglite
                             r-summarizedexperiment
                             r-stringr
                             r-stringi
                             r-sortable
                             r-shinyvalidate
                             r-shinythemes
                             r-shinyjs
                             r-shinyfiles
                             r-shinydashboard
                             r-shinybs
                             r-shiny
                             r-rfast
                             r-readr
                             r-rcolorbrewer
                             r-purrr
                             r-matrix
                             r-logr
                             r-jsonlite
                             r-igraph
                             r-htmlwidgets
                             r-htmltools
                             r-ggplot2
                             r-fs
                             r-foreach
                             r-forcats
                             r-dt
                             r-dplyr
                             r-doparallel
                             r-data-tree
                             r-data-table
                             r-curl
                             r-configr
                             r-callr
                             r-bsplus
                             r-biomart))
    (native-inputs (list r-knitr esbuild))
    (home-page "https://github.com/BIMIB-DISCo/LACE")
    (synopsis "Longitudinal Analysis of Cancer Evolution (LACE)")
    (description
     "LACE is an algorithmic framework that processes single-cell somatic mutation
profiles from cancer samples collected at different time points and in distinct
experimental settings, to produce longitudinal models of cancer evolution.  The
approach solves a Boolean Matrix Factorization problem with phylogenetic
constraints, by maximizing a weighed likelihood function computed on multiple
time points.")
    (license (license:fsdg-compatible "file://LICENSE"))))

