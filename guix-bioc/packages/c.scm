(define-module (guix-bioc packages c)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix build-system r)
  #:use-module ((guix licenses)
                #:prefix license:)
  #:use-module (gnu packages statistics)
  #:use-module (guix-cran packages a)
  #:use-module (gnu packages cran)
  #:use-module (gnu packages bioconductor)
  #:use-module (guix-cran packages s)
  #:use-module (guix-cran packages t)
  #:use-module (guix-cran packages m)
  #:use-module (guix-cran packages e)
  #:use-module (guix-cran packages r)
  #:use-module (guix-cran packages c)
  #:use-module (guix-cran packages d)
  #:use-module (guix-cran packages b)
  #:use-module (guix-cran packages h)
  #:use-module (guix-cran packages w)
  #:use-module (guix-cran packages p)
  #:use-module (gnu packages web)
  #:use-module (gnu packages gcc)
  #:use-module (guix-cran packages g)
  #:use-module (gnu packages haskell-xyz)
  #:use-module (guix-cran packages n)
  #:use-module (gnu packages bioinformatics)
  #:use-module (gnu packages tls)
  #:use-module (gnu packages xml)
  #:use-module (gnu packages compression)
  #:use-module (guix-cran packages f)
  #:use-module (guix-cran packages k)
  #:use-module (guix-bioc packages z)
  #:use-module (guix-bioc packages y)
  #:use-module (guix-bioc packages x)
  #:use-module (guix-bioc packages w)
  #:use-module (guix-bioc packages v)
  #:use-module (guix-bioc packages u)
  #:use-module (guix-bioc packages t)
  #:use-module (guix-bioc packages s)
  #:use-module (guix-bioc packages r)
  #:use-module (guix-bioc packages q)
  #:use-module (guix-bioc packages p)
  #:use-module (guix-bioc packages o)
  #:use-module (guix-bioc packages n)
  #:use-module (guix-bioc packages m)
  #:use-module (guix-bioc packages l)
  #:use-module (guix-bioc packages k)
  #:use-module (guix-bioc packages j)
  #:use-module (guix-bioc packages i)
  #:use-module (guix-bioc packages h)
  #:use-module (guix-bioc packages g)
  #:use-module (guix-bioc packages f)
  #:use-module (guix-bioc packages e)
  #:use-module (guix-bioc packages d)
  #:use-module (guix-bioc packages b)
  #:use-module (guix-bioc packages a))

(define-public r-cytoviewer
  (package
    (name "r-cytoviewer")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cytoviewer" version))
       (sha256
        (base32 "11pn93r5sdzkd31jbyaajsmjx825yvhliadbzbnpw9v56l3gndxb"))))
    (properties `((upstream-name . "cytoviewer")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-viridis
                             r-svgpanzoom
                             r-svglite
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-shinydashboard
                             r-shinycssloaders
                             r-shiny
                             r-s4vectors
                             r-rcolorbrewer
                             r-ebimage
                             r-cytomapper
                             r-colourpicker
                             r-archive))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/BodenmillerGroup/cytoviewer")
    (synopsis "An interactive multi-channel image viewer for R")
    (description
     "This R package supports interactive visualization of multi-channel images and
segmentation masks generated by imaging mass cytometry and other highly
multiplexed imaging techniques using shiny.  The cytoviewer interface is divided
into image-level (Composite and Channels) and cell-level visualization (Masks).
It allows users to overlay individual images with segmentation masks, integrates
well with @code{SingleCellExperiment} and @code{SpatialExperiment} objects for
metadata visualization and supports image downloads.")
    (license license:gpl3)))

(define-public r-cytopipelinegui
  (package
    (name "r-cytopipelinegui")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoPipelineGUI" version))
       (sha256
        (base32 "03zcr3393kyws8p1wqd13bwyphz1z4r507s6jwcd7q6nz03v1vqh"))))
    (properties `((upstream-name . "CytoPipelineGUI")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-shiny r-plotly r-ggplot2 r-flowcore
                             r-cytopipeline))
    (native-inputs (list r-knitr))
    (home-page "https://uclouvain-cbio.github.io/CytoPipelineGUI")
    (synopsis
     "GUI's for visualization of flow cytometry data analysis pipelines")
    (description
     "This package is the companion of the `@code{CytoPipeline`} package.  It provides
GUI's (shiny apps) for the visualization of flow cytometry data analysis
pipelines that are run with `@code{CytoPipeline`}.  Two shiny applications are
provided, i.e.  an interactive flow frame assessment and comparison tool and an
interactive scale transformations visualization and adjustment tool.")
    (license license:gpl3)))

(define-public r-cytopipeline
  (package
    (name "r-cytopipeline")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoPipeline" version))
       (sha256
        (base32 "0ja1w7xhqga1kkabx714jli21xwnq3i7bi3h41gbpcy60g65y32l"))))
    (properties `((upstream-name . "CytoPipeline")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-withr
                             r-scales
                             r-rlang
                             r-peacoqc
                             r-jsonlite
                             r-ggplot2
                             r-ggcyto
                             r-flowcore
                             r-flowai
                             r-diagram
                             r-biocparallel
                             r-biocfilecache))
    (native-inputs (list r-knitr))
    (home-page "https://uclouvain-cbio.github.io/CytoPipeline")
    (synopsis
     "Automation and visualization of flow cytometry data analysis pipelines")
    (description
     "This package provides support for automation and visualization of flow cytometry
data analysis pipelines.  In the current state, the package focuses on the
preprocessing and quality control part.  The framework is based on two main S4
classes, i.e. @code{CytoPipeline} and @code{CytoProcessingStep}.  The pipeline
steps are linked to corresponding R functions - that are either provided in the
@code{CytoPipeline} package itself, or exported from a third party package, or
coded by the user her/himself.  The processing steps need to be specified
centrally and explicitly using either a json input file or through step by step
creation of a @code{CytoPipeline} object with dedicated methods.  After having
run the pipeline, obtained results at all steps can be retrieved and visualized
thanks to file caching (the running facility uses a @code{BiocFileCache}
implementation).  The package provides also specific visualization tools like
pipeline workflow summary display, and 1D/2D comparison plots of obtained
@code{flowFrames} at various steps of the pipeline.")
    (license license:gpl3)))

(define-public r-cytomethic
  (package
    (name "r-cytomethic")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoMethIC" version
                              'experiment))
       (sha256
        (base32 "1dmkqd3hk1nfd07j0bq4ljdrbh72kcjlb1xddazpfvsf3wm7ijkq"))))
    (properties `((upstream-name . "CytoMethIC")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-tibble
                             r-sesamedata
                             r-sesame
                             r-experimenthub
                             r-biocparallel
                             r-biocmanager))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/zhou-lab/CytoMethIC")
    (synopsis "DNA methylation-based classification and regression")
    (description
     "This package provides DNA methylation-based prediction of cancer type, molecular
signature and clinical outcomes.  It provides convenience functions for missing
value imputation, probe ID conversion, model interpretation and visualization.
The package links to our models on @code{ExperimentHub}.  The package currently
supports HM450, EPIC and EPICv2.")
    (license license:artistic2.0)))

(define-public r-cytomem
  (package
    (name "r-cytomem")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cytoMEM" version))
       (sha256
        (base32 "149ifhc28s844xyaa53yrcqp8yvfkbkddj3dxipc7xpyxkxi1ggp"))))
    (properties `((upstream-name . "cytoMEM")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-matrixstats r-gplots r-flowcore))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/cytolab/cytoMEM")
    (synopsis "Marker Enrichment Modeling (MEM)")
    (description
     "MEM, Marker Enrichment Modeling, automatically generates and displays
quantitative labels for cell populations that have been identified from
single-cell data.  The input for MEM is a dataset that has pre-clustered or
pre-gated populations with cells in rows and features in columns.  Labels convey
a list of measured features and the features levels of relative enrichment on
each population.  MEM can be applied to a wide variety of data types and can
compare between MEM labels from flow cytometry, mass cytometry, single cell
RNA-seq, and spectral flow cytometry using RMSD.")
    (license license:gpl3)))

(define-public r-cytomds
  (package
    (name "r-cytomds")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoMDS" version))
       (sha256
        (base32 "014hfak9la8fgdq42id62qjbq3byvdgxg90a4c0hj7m2b07s4r5l"))))
    (properties `((upstream-name . "CytoMDS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-withr
                             r-transport
                             r-smacof
                             r-rlang
                             r-reshape2
                             r-pracma
                             r-patchwork
                             r-ggrepel
                             r-ggplot2
                             r-ggforce
                             r-flowcore
                             r-cytopipeline
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://uclouvain-cbio.github.io/CytoMDS")
    (synopsis "Low Dimensions projection of cytometry samples")
    (description
     "This package implements a low dimensional visualization of a set of cytometry
samples, in order to visually assess the distances between them.  This, in turn,
can greatly help the user to identify quality issues like batch effects or
outlier samples, and/or check the presence of potential sample clusters that
might align with the exeprimental design.  The @code{CytoMDS} algorithm
combines, on the one hand, the concept of Earth Mover's Distance (EMD), a.k.a.
Wasserstein metric and, on the other hand, the Multi Dimensional Scaling (MDS)
algorithm for the low dimensional projection.  Also, the package provides some
diagnostic tools for both checking the quality of the MDS projection, as well as
tools to help with the interpretation of the axes of the projection.")
    (license license:gpl3)))

(define-public r-cytomapper
  (package
    (name "r-cytomapper")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cytomapper" version))
       (sha256
        (base32 "0yadjkam643a99synnl2vx7nyfhc6x98qyhf972v5c3f8qj8jy08"))))
    (properties `((upstream-name . "cytomapper")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-viridis
                             r-svgpanzoom
                             r-svglite
                             r-summarizedexperiment
                             r-spatialexperiment
                             r-singlecellexperiment
                             r-shinydashboard
                             r-shiny
                             r-s4vectors
                             r-rhdf5
                             r-rcolorbrewer
                             r-raster
                             r-nnls
                             r-matrixstats
                             r-hdf5array
                             r-ggplot2
                             r-ggbeeswarm
                             r-ebimage
                             r-delayedarray
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/BodenmillerGroup/cytomapper")
    (synopsis "Visualization of highly multiplexed imaging data in R")
    (description
     "Highly multiplexed imaging acquires the single-cell expression of selected
proteins in a spatially-resolved fashion.  These measurements can be visualised
across multiple length-scales.  First, pixel-level intensities represent the
spatial distributions of feature expression with highest resolution.  Second,
after segmentation, expression values or cell-level metadata (e.g. cell-type
information) can be visualised on segmented cell areas.  This package contains
functions for the visualisation of multiplexed read-outs and cell-level
information obtained by multiplexed imaging technologies.  The main functions of
this package allow 1.  the visualisation of pixel-level information across
multiple channels, 2.  the display of cell-level information (expression and/or
metadata) on segmentation masks and 3.  gating and visualisation of single
cells.")
    (license license:gpl2+)))

(define-public r-cytokernel
  (package
    (name "r-cytokernel")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cytoKernel" version))
       (sha256
        (base32 "0l1yxnjg3hvaya77vk5gl9sx9bpbb68ydapj7mpk5fqnflkw4f9s"))))
    (properties `((upstream-name . "cytoKernel")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-s4vectors
                             r-rlang
                             r-rcpp
                             r-magrittr
                             r-dplyr
                             r-data-table
                             r-complexheatmap
                             r-circlize
                             r-biocparallel
                             r-ashr))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cytoKernel")
    (synopsis "Differential expression using kernel-based score test")
    (description
     "@code{cytoKernel} implements a kernel-based score test to identify
differentially expressed features in high-dimensional biological experiments.
This approach can be applied across many different high-dimensional biological
data including gene expression data and dimensionally reduced cytometry-based
marker expression data.  In this R package, we implement functions that compute
the feature-wise p values and their corresponding adjusted p values.
Additionally, it also computes the feature-wise shrunk effect sizes and their
corresponding shrunken effect size.  Further, it calculates the percent of
differentially expressed features and plots user-friendly heatmap of the top
differentially expressed features on the rows and samples on the columns.")
    (license license:gpl3)))

(define-public r-cytoglmm
  (package
    (name "r-cytoglmm")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoGLMM" version))
       (sha256
        (base32 "1sdiz3mcl66gyrj0hs99w0vnmlgzz6jz1m9cib1x3bjfr11kr4ri"))))
    (properties `((upstream-name . "CytoGLMM")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-strucchange
                             r-stringr
                             r-rlang
                             r-rcolorbrewer
                             r-pheatmap
                             r-mbest
                             r-matrix
                             r-mass
                             r-magrittr
                             r-logging
                             r-ggrepel
                             r-ggplot2
                             r-flexmix
                             r-factoextra
                             r-dplyr
                             r-doparallel
                             r-cowplot
                             r-caret
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://christofseiler.github.io/CytoGLMM")
    (synopsis
     "Conditional Differential Analysis for Flow and Mass Cytometry Experiments")
    (description
     "The @code{CytoGLMM} R package implements two multiple regression strategies: A
bootstrapped generalized linear model (GLM) and a generalized linear mixed model
(GLMM).  Most current data analysis tools compare expressions across many
computationally discovered cell types. @code{CytoGLMM} focuses on just one cell
type.  Our narrower field of application allows us to define a more specific
statistical model with easier to control statistical guarantees.  As a result,
@code{CytoGLMM} finds differential proteins in flow and mass cytometry data
while reducing biases arising from marker correlations and safeguarding against
false discoveries induced by patient heterogeneity.")
    (license license:lgpl3)))

(define-public r-cytofqc
  (package
    (name "r-cytofqc")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cytofQC" version))
       (sha256
        (base32 "026v0j1jig4gm4gv3b382cvc2k69i811y9rqyk9cp3xrgmx5qld5"))))
    (properties `((upstream-name . "cytofQC")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-ssc
                             r-singlecellexperiment
                             r-s4vectors
                             r-rmarkdown
                             r-randomforest
                             r-matrixstats
                             r-hrbrthemes
                             r-ggplot2
                             r-gbm
                             r-flowcore
                             r-eztune
                             r-e1071
                             r-catalyst))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jillbo1000/cytofQC")
    (synopsis
     "Labels normalized cells for CyTOF data and assigns probabilities for each label")
    (description
     "@code{cytofQC} is a package for initial cleaning of @code{CyTOF} data.  It uses
a semi-supervised approach for labeling cells with their most likely data type
(bead, doublet, debris, dead) and the probability that they belong to each label
type.  This package does not remove data from the dataset, but provides labels
and information to aid the data user in cleaning their data.  Our algorithm is
able to distinguish between doublets and large cells.")
    (license license:artistic2.0)))

(define-public r-cytodx
  (package
    (name "r-cytodx")
    (version "1.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CytoDx" version))
       (sha256
        (base32 "03yihxbai0y02k0d1nlr37snvgaficrqlw1ylnl938mzcqza28f6"))))
    (properties `((upstream-name . "CytoDx")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rpart-plot
                             r-rpart
                             r-glmnet
                             r-flowcore
                             r-dplyr
                             r-doparallel))
    (native-inputs (list r-rmarkdown r-knitr))
    (home-page "https://bioconductor.org/packages/CytoDx")
    (synopsis
     "Robust prediction of clinical outcomes using cytometry data without cell gating")
    (description
     "This package provides functions that predict clinical outcomes using single cell
data (such as flow cytometry data, RNA single cell sequencing data) without the
requirement of cell gating or clustering.")
    (license license:gpl2)))

(define-public r-cypress
  (package
    (name "r-cypress")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cypress" version))
       (sha256
        (base32 "1cqhm5nir8bcpb6jnd41wy4aw72lcwhv37q50jahla9n841p2gq6"))))
    (properties `((upstream-name . "cypress")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-toast
                             r-tibble
                             r-tca
                             r-summarizedexperiment
                             r-sirt
                             r-rlang
                             r-rcolorbrewer
                             r-proper
                             r-preprocesscore
                             r-mvtnorm
                             r-mass
                             r-edger
                             r-e1071
                             r-dplyr
                             r-deseq2
                             r-checkmate
                             r-biocparallel
                             r-abind))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/renlyly/cypress")
    (synopsis "Cell-Type-Specific Power Assessment")
    (description
     "CYPRESS is a cell-type-specific power tool.  This package aims to perform power
analysis for the cell-type-specific data.  It calculates FDR, FDC, and power,
under various study design parameters, including but not limited to sample size,
and effect size.  It takes the input of a @code{SummarizeExperimental(SE})
object with observed mixture data (feature by sample matrix), and the cell-type
mixture proportions (sample by cell-type matrix).  It can solve the cell-type
mixture proportions from the reference free panel from TOAST and conduct tests
to identify cell-type-specific differential expression (@code{csDE}) genes.")
    (license (list license:gpl2 license:gpl3))))

(define-public r-cyp450cdf
  (package
    (name "r-cyp450cdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cyp450cdf" version
                              'annotation))
       (sha256
        (base32 "1mbqn9940sxc0ksvykdk3i4jvnkv9q91igwn1rwmv2z18hz18qf0"))))
    (properties `((upstream-name . "cyp450cdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/cyp450cdf")
    (synopsis "cyp450cdf")
    (description
     "This package provides a package containing an environment representing the
CYP450.CDF file.")
    (license license:lgpl2.0+)))

(define-public r-cydar
  (package
    (name "r-cydar")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cydar" version))
       (sha256
        (base32 "0xbf5dibvdb7h4y0anwi0574ypv4is9x62k7lnmq4jhvg6fjxmnv"))))
    (properties `((upstream-name . "cydar")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-viridis
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-shiny
                             r-s4vectors
                             r-rcpp
                             r-flowcore
                             r-biocparallel
                             r-biocneighbors
                             r-biocgenerics
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cydar")
    (synopsis "Using Mass Cytometry for Differential Abundance Analyses")
    (description
     "Identifies differentially abundant populations between samples and groups in
mass cytometry data.  Provides methods for counting cells into hyperspheres,
controlling the spatial false discovery rate, and visualizing changes in
abundance in the high-dimensional marker space.")
    (license license:gpl3)))

(define-public r-cycle
  (package
    (name "r-cycle")
    (version "1.60.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cycle" version))
       (sha256
        (base32 "1f70fi3acbm403j0fh7c6n42ppn2ibhi1avzvj9brylagmrrzjzb"))))
    (properties `((upstream-name . "cycle")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-mfuzz r-biobase))
    (home-page "http://cycle.sysbiolab.eu")
    (synopsis
     "Significance of periodic expression pattern in time-series data")
    (description
     "Package for assessing the statistical significance of periodic expression based
on Fourier analysis and comparison with data generated by different background
models.")
    (license license:gpl2)))

(define-public r-cyanofilter
  (package
    (name "r-cyanofilter")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cyanoFilter" version))
       (sha256
        (base32 "1mlfwk1rfhxj6ky6vg62ahhxycj31jlsb8hqnkzh9i3xcvr2lgv2"))))
    (properties `((upstream-name . "cyanoFilter")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-mrfdepth
                             r-ggplot2
                             r-ggally
                             r-flowdensity
                             r-flowcore
                             r-flowclust
                             r-cytometree
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/fomotis/cyanoFilter")
    (synopsis
     "Phytoplankton Population Identification using Cell Pigmentation and/or Complexity")
    (description
     "An approach to filter out and/or identify phytoplankton cells from all particles
measured via flow cytometry pigment and cell complexity information.  It does
this using a sequence of one-dimensional gates on pre-defined channels measuring
certain pigmentation and complexity.  The package is especially tuned for
cyanobacteria, but will work fine for phytoplankton communities where there is
at least one cell characteristic that differentiates every phytoplankton in the
community.")
    (license license:expat)))

(define-public r-customprodb
  (package
    (name "r-customprodb")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "customProDB" version))
       (sha256
        (base32 "15q4mia5xh5s6kccaqj6wankp9bm5vzc0nwlbiy5s1qi9pj9x2hw"))))
    (properties `((upstream-name . "customProDB")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation
                             r-txdbmaker
                             r-stringr
                             r-s4vectors
                             r-rtracklayer
                             r-rsqlite
                             r-rsamtools
                             r-rcurl
                             r-plyr
                             r-iranges
                             r-genomicranges
                             r-genomicfeatures
                             r-genomicalignments
                             r-genomeinfodb
                             r-dbi
                             r-biostrings
                             r-biomart
                             r-annotationdbi
                             r-ahocorasicktrie))
    (home-page "https://bioconductor.org/packages/customProDB")
    (synopsis
     "Generate customized protein database from NGS data, with a focus on RNA-Seq data, for proteomics search")
    (description
     "Database search is the most widely used approach for peptide and protein
identification in mass spectrometry-based proteomics studies.  Our previous
study showed that sample-specific protein databases derived from RNA-Seq data
can better approximate the real protein pools in the samples and thus improve
protein identification.  More importantly, single nucleotide variations, short
insertion and deletions and novel junctions identified from RNA-Seq data make
protein database more complete and sample-specific.  Here, we report an R
package @code{customProDB} that enables the easy generation of customized
databases from RNA-Seq data for proteomics search.  This work bridges genomics
and proteomics studies and facilitates cross-omics data integration.")
    (license license:artistic2.0)))

(define-public r-customcmpdb
  (package
    (name "r-customcmpdb")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "customCMPdb" version))
       (sha256
        (base32 "14fsg60j8kcqq13qm0k5vbqgr6kvz1055f0pv7pzmssih4v610yb"))))
    (properties `((upstream-name . "customCMPdb")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xml
                             r-rsqlite
                             r-rappdirs
                             r-chemminer
                             r-biocfilecache
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/yduan004/customCMPdb/")
    (synopsis "Customize and Query Compound Annotation Database")
    (description
     "This package serves as a query interface for important community collections of
small molecules, while also allowing users to include custom compound
collections.")
    (license license:artistic2.0)))

(define-public r-curatedtbdata
  (package
    (name "r-curatedtbdata")
    (version "2.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedTBData" version
                              'experiment))
       (sha256
        (base32 "01s69cdd67l589r9vzl8qgkb00a5y8gqy8ijz73bw2nj2bsmrymr"))))
    (properties `((upstream-name . "curatedTBData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-rlang r-multiassayexperiment r-experimenthub
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/compbiomed/curatedTBData")
    (synopsis "Curation of existing tuberculosis transcriptomic studies")
    (description
     "The @code{curatedTBData} is an R package that provides standardized, curated
tuberculosis(TB) transcriptomic studies.  The initial release of the package
contains 49 studies.  The @code{curatedTBData} package allows users to access
tuberculosis trancriptomic efficiently and to make efficient comparison for
different TB gene signatures across multiple datasets.")
    (license license:expat)))

(define-public r-curatedpcadata
  (package
    (name "r-curatedpcadata")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedPCaData" version
                              'experiment))
       (sha256
        (base32 "0l6wdc1h7pzap5zfpc11dl1y3jdfr75iq7ly3927bqq94nkp6wcq"))))
    (properties `((upstream-name . "curatedPCaData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-s4vectors
                             r-rlang
                             r-reshape2
                             r-raggedexperiment
                             r-multiassayexperiment
                             r-experimenthub
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/Syksy/curatedPCaData")
    (synopsis "Curated Prostate Cancer Data")
    (description
     "The package @code{curatedPCaData} offers a selection of annotated prostate
cancer datasets featuring multiple omics, manually curated metadata, and derived
downstream variables.  The studies are offered as @code{MultiAssayExperiment}
(MAE) objects via @code{ExperimentHub}, and comprise of clinical characteristics
tied to gene expression, copy number alteration and somatic mutation data.
Further, downstream features computed from these multi-omics data are offered.
Multiple vignettes help grasp characteristics of the various studies and provide
example exploratory and meta-analysis of leveraging the multiple studies
provided here-in.")
    (license (license:fsdg-compatible "CC BY 4.0"))))

(define-public r-curatedovariandata
  (package
    (name "r-curatedovariandata")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedOvarianData" version
                              'experiment))
       (sha256
        (base32 "0dl0v1v1imk5gy0glzllx32x19p4akma3scccwq0c6shdp3988v9"))))
    (properties `((upstream-name . "curatedOvarianData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biocgenerics r-biobase))
    (home-page "http://bcb.dfci.harvard.edu/ovariancancer")
    (synopsis "Clinically Annotated Data for the Ovarian Cancer Transcriptome")
    (description
     "The @code{curatedOvarianData} package provides data for gene expression analysis
in patients with ovarian cancer.")
    (license license:artistic2.0)))

(define-public r-curatedmetagenomicdata
  (package
    (name "r-curatedmetagenomicdata")
    (version "3.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedMetagenomicData" version
                              'experiment))
       (sha256
        (base32 "1zpjkijhig7yg7asmnmb6ivvah9pbiifnfglrs7g9zb23wi2iymm"))))
    (properties `((upstream-name . "curatedMetagenomicData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-treesummarizedexperiment
                             r-tidyselect
                             r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-stringr
                             r-s4vectors
                             r-rlang
                             r-purrr
                             r-mia
                             r-magrittr
                             r-experimenthub
                             r-dplyr
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/waldronlab/curatedMetagenomicData")
    (synopsis "Curated Metagenomic Data of the Human Microbiome")
    (description
     "The @code{curatedMetagenomicData} package provides standardized, curated human
microbiome data for novel analyses.  It includes gene families, marker
abundance, marker presence, pathway abundance, pathway coverage, and relative
abundance for samples collected from different body sites.  The bacterial,
fungal, and archaeal taxonomic abundances for each sample were calculated with
@code{MetaPhlAn3}, and metabolic functional potential was calculated with
HUM@code{AnN3}.  The manually curated sample metadata and standardized
metagenomic data are available as (Tree)@code{SummarizedExperiment} objects.")
    (license license:artistic2.0)))

(define-public r-curatedbreastdata
  (package
    (name "r-curatedbreastdata")
    (version "2.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedBreastData" version
                              'experiment))
       (sha256
        (base32 "1c5mw9yy27mqp0zk1llirzmk95j7k7fl3jr98is15l5a6f6rwh0x"))))
    (properties `((upstream-name . "curatedBreastData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xml r-impute r-ggplot2 r-biocstyle r-biobase))
    (home-page "https://bioconductor.org/packages/curatedBreastData")
    (synopsis
     "Curated breast cancer gene expression data with survival and treatment information")
    (description
     "Curated human breast cancer tissue S4 @code{ExpresionSet} datasets from over 16
clinical trials comprising over 2,000 patients.  All datasets contain at least
one type of outcomes variable and treatment information (minimum level: whether
they had chemotherapy and whether they had hormonal therapy).  Includes code to
post-process these datasets.")
    (license license:gpl2+)))

(define-public r-curatedbladderdata
  (package
    (name "r-curatedbladderdata")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedBladderData" version
                              'experiment))
       (sha256
        (base32 "0s6wb14c2dyrd2pl9sq6dzylcg5500sbcki25qfyf9g7dgpabj6h"))))
    (properties `((upstream-name . "curatedBladderData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-affy))
    (home-page "https://github.com/lima1/curatedBladderData")
    (synopsis "Bladder Cancer Gene Expression Analysis")
    (description
     "The @code{curatedBladderData} package provides relevant functions and data for
gene expression analysis in patients with bladder cancer.")
    (license license:artistic2.0)))

(define-public r-curatedatlasqueryr
  (package
    (name "r-curatedatlasqueryr")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CuratedAtlasQueryR" version))
       (sha256
        (base32 "1bm06ykfzjxrrzs8rcs73r1812c6ckah2cy744lc8pdsl3xnha39"))))
    (properties `((upstream-name . "CuratedAtlasQueryR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tibble
                             r-summarizedexperiment
                             r-stringr
                             r-singlecellexperiment
                             r-seuratobject
                             r-seurat
                             r-s4vectors
                             r-rlang
                             r-purrr
                             r-httr
                             r-hdf5array
                             r-glue
                             r-duckdb
                             r-dplyr
                             r-dbplyr
                             r-dbi
                             r-cli
                             r-biocgenerics
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/stemangiola/CuratedAtlasQueryR")
    (synopsis "Queries the Human Cell Atlas")
    (description
     "This package provides access to a copy of the Human Cell Atlas, but with
harmonised metadata.  This allows for uniform querying across numerous datasets
within the Atlas using common fields such as cell type, tissue type, and patient
ethnicity.  Usage involves first querying the metadata table for cells of
interest, and then downloading the corresponding cells into a
@code{SingleCellExperiment} object.")
    (license license:gpl3)))

(define-public r-curatedadiporna
  (package
    (name "r-curatedadiporna")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedAdipoRNA" version
                              'experiment))
       (sha256
        (base32 "0k48x18z6pdrphknjz0v210fg8143a1dj2qiznrc421rznwy60lc"))))
    (properties `((upstream-name . "curatedAdipoRNA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/MahShaaban/curatedAdipoRNA")
    (synopsis
     "Curated RNA-Seq Dataset of MDI-induced Differentiated Adipocytes (3T3-L1)")
    (description
     "This package provides a curated dataset of RNA-Seq samples.  The samples are
MDI-induced pre-phagocytes (3T3-L1) at different time points/stage of
differentiation.  The package document the data collection, pre-processing and
processing.  In addition to the documentation, the package contains the scripts
that was used to generated the data.")
    (license license:gpl3)))

(define-public r-curatedadipochip
  (package
    (name "r-curatedadipochip")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedAdipoChIP" version
                              'experiment))
       (sha256
        (base32 "1dy3sswxs0w8dhdw5zx38mbd32ich3v283sijina1yb0gdah66i1"))))
    (properties `((upstream-name . "curatedAdipoChIP")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-summarizedexperiment r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/MahShaaban/curatedAdipoChIP")
    (synopsis
     "Curated ChIP-Seq Dataset of MDI-induced Differentiated Adipocytes (3T3-L1)")
    (description
     "This package provides a curated dataset of publicly available
@code{ChIP-sequencing} of transcription factors, chromatin remodelers and
histone modifications in the 3T3-L1 pre-adipocyte cell line.  The package
document the data collection, pre-processing and processing of the data.  In
addition to the documentation, the package contains the scripts that was used to
generated the data.")
    (license license:gpl3)))

(define-public r-curatedadipoarray
  (package
    (name "r-curatedadipoarray")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "curatedAdipoArray" version
                              'experiment))
       (sha256
        (base32 "0rzsaf48vfkf9kx6m1fbd900qc5hwhflz2yz84yxip4yic617hx7"))))
    (properties `((upstream-name . "curatedAdipoArray")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/MahShaaban/curatedAdipoArray")
    (synopsis
     "Curated Microarrays Dataset of MDI-induced Differentiated Adipocytes (3T3-L1) Under Genetic and Pharmacological Perturbations")
    (description
     "This package provides a curated dataset of Microarrays samples.  The samples are
MDI- induced pre-adipocytes (3T3-L1) at different time points/stage of
differentiation under different types of genetic (knockdown/overexpression) and
pharmacological (drug treatment) perturbations.  The package documents the data
collection and processing.  In addition to the documentation, the package
contains the scripts that was used to generated the data.")
    (license (license:fsdg-compatible "GPL-3 + file LICENSE"))))

(define-public r-ctsv
  (package
    (name "r-ctsv")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CTSV" version))
       (sha256
        (base32 "1i5zlcjyxs8y8wfhn9jfxgkfbz0r05if7hshvacx33c64drpj8jc"))))
    (properties `((upstream-name . "CTSV")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-spatialexperiment
                             r-qvalue
                             r-pscl
                             r-knitr
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jingeyu/CTSV")
    (synopsis
     "Identification of cell-type-specific spatially variable genes accounting for excess zeros")
    (description
     "The R package CTSV implements the CTSV approach developed by Jinge Yu and
Xiangyu Luo that detects cell-type-specific spatially variable genes accounting
for excess zeros.  CTSV directly models sparse raw count data through a
zero-inflated negative binomial regression model, incorporates cell-type
proportions, and performs hypothesis testing based on R package pscl.  The
package outputs p-values and q-values for genes in each cell type, and CTSV is
scalable to datasets with tens of thousands of genes measured on hundreds of
spots.  CTSV can be installed in Windows, Linux, and Mac OS.")
    (license license:gpl3)))

(define-public r-ctsge
  (package
    (name "r-ctsge")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ctsGE" version))
       (sha256
        (base32 "0n8v12cijvna1078abfbbdqp5wpdi8blac7k7xzn3wql1p3z3awv"))))
    (properties `((upstream-name . "ctsGE")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-shiny
                             r-reshape2
                             r-limma
                             r-ggplot2
                             r-ccapp))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/michalsharabi/ctsGE")
    (synopsis "Clustering of Time Series Gene Expression data")
    (description
     "Methodology for supervised clustering of potentially many predictor variables,
such as genes etc., in time series datasets Provides functions that help the
user assigning genes to predefined set of model profiles.")
    (license license:gpl2)))

(define-public r-ctrap
  (package
    (name "r-ctrap")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cTRAP" version))
       (sha256
        (base32 "0rnmhz04vm141imi8dxn3fl6mf6gy0mk2jn0wi8qidrn0qmyjbz4"))))
    (properties `((upstream-name . "cTRAP")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tibble
                             r-shinycssloaders
                             r-shiny
                             r-scales
                             r-rlang
                             r-rhdf5
                             r-reshape2
                             r-readxl
                             r-r-utils
                             r-qs
                             r-purrr
                             r-pbapply
                             r-limma
                             r-httr
                             r-htmltools
                             r-highcharter
                             r-ggrepel
                             r-ggplot2
                             r-fgsea
                             r-fastmatch
                             r-dt
                             r-dplyr
                             r-data-table
                             r-cowplot
                             r-binr
                             r-annotationhub
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://nuno-agostinho.github.io/cTRAP")
    (synopsis
     "Identification of candidate causal perturbations from differential gene expression data")
    (description
     "Compare differential gene expression results with those from known cellular
perturbations (such as gene knock-down, overexpression or small molecules)
derived from the Connectivity Map.  Such analyses allow not only to infer the
molecular causes of the observed difference in gene expression but also to
identify small molecules that could drive or revert specific transcriptomic
alterations.")
    (license license:expat)))

(define-public r-ctexplorer
  (package
    (name "r-ctexplorer")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CTexploreR" version))
       (sha256
        (base32 "1k5c7zp5ks53n46gzay1dpax7018082mn70blzxy7vhdmwigisjl"))))
    (properties `((upstream-name . "CTexploreR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-rlang
                             r-matrixgenerics
                             r-iranges
                             r-ggrepel
                             r-ggplot2
                             r-genomicranges
                             r-dplyr
                             r-ctdata
                             r-complexheatmap
                             r-circlize
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/UCLouvain-CBIO/CTexploreR")
    (synopsis "Explores Cancer Testis Genes")
    (description
     "The C@code{TexploreR} package re-defines the list of Cancer Testis/Germline (CT)
genes.  It is based on publicly available RNAseq databases (GTEx, CCLE and TCGA)
and summarises CT genes main characteristics.  Several visualisation functions
allow to explore their expression in different types of tissues and cancer
cells, or to inspect the methylation status of their promoters in normal
tissues.")
    (license license:artistic2.0)))

(define-public r-ctdquerier
  (package
    (name "r-ctdquerier")
    (version "2.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CTDquerier" version))
       (sha256
        (base32 "0kgnvsw13hmnkjy7ka23p6n5ixnyxim994q200jxcbnp7as0fh0b"))))
    (properties `((upstream-name . "CTDquerier")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-stringdist
                             r-s4vectors
                             r-rcurl
                             r-igraph
                             r-gridextra
                             r-ggplot2
                             r-biocfilecache))
    (native-inputs (list r-rmarkdown))
    (home-page "https://bioconductor.org/packages/CTDquerier")
    (synopsis
     "Package for CTDbase data query, visualization and downstream analysis")
    (description
     "Package to retrieve and visualize data from the Comparative Toxicogenomics
Database (http://ctdbase.org/).  The downloaded data is formated as
@code{DataFrames} for further downstream analyses.")
    (license license:expat)))

(define-public r-ctdata
  (package
    (name "r-ctdata")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CTdata" version))
       (sha256
        (base32 "1wyxhwhix4cpj02y0pvqa7l6lfqffwvsnk8sy36xp9fazxp962dy"))))
    (properties `((upstream-name . "CTdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CTdata")
    (synopsis "Data companion to CTexploreR")
    (description
     "Data from publicly available databases (GTEx, CCLE, TCGA and ENCODE) that go
with C@code{TexploreR} in order to re-define a comprehensive and thoroughly
curated list of CT genes and their main characteristics.")
    (license license:artistic2.0)))

(define-public r-ctcf
  (package
    (name "r-ctcf")
    (version "0.99.11")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CTCF" version
                              'annotation))
       (sha256
        (base32 "0vgl0v0rz0xk00w850yj0vv9jishkci9ndxlwvgjbixpas2viqna"))))
    (properties `((upstream-name . "CTCF")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/dozmorovlab/CTCF")
    (synopsis "Genomic coordinates of CTCF binding sites, with orientation")
    (description
     "Genomic coordinates of CTCF binding sites, with strand orientation
(directionality of binding).  Position weight matrices (PWMs) from JASPAR,
HOCOMOCO, CIS-BP, CTCFBSDB, @code{SwissRegulon}, Jolma 2013, were used to
uniformly predict CTCF binding sites using FIMO (default settings) on human
(hg18, hg19, hg38, T2T) and mouse (mm9, mm10, mm39) genome assemblies.  Extra
columns include motif/PWM name (e.g., MA0139.1), score, p-value, q-value, and
the motif sequence.  It is recommended to filter FIMO-predicted sites by 1e-6
p-value threshold instead of using the default 1e-4 threshold.  Experimentally
obtained CTCF-bound cis-regulatory elements from ENCODE SCREEN and predicted
CTCF sites from CTCFBSDB are also included.  Selected data are lifted over from
a different genome assembly as we demonstrated @code{liftOver} is a viable
option to obtain CTCF coordinates in different genome assemblies.  CTCF sites
obtained using JASPAR's MA0139.1 PWM and filtered at 1e-6 p-value threshold are
recommended.")
    (license license:expat)))

(define-public r-cssq
  (package
    (name "r-cssq")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CSSQ" version))
       (sha256
        (base32 "049lh3qypngcgz0a1yvmddighfyc81fm76amvmf4b9zgirdgf16p"))))
    (properties `((upstream-name . "CSSQ")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-s4vectors
                             r-rtracklayer
                             r-rsamtools
                             r-iranges
                             r-ggplot2
                             r-genomicranges
                             r-genomicfeatures
                             r-genomicalignments))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CSSQ")
    (synopsis "Chip-seq Signal Quantifier Pipeline")
    (description
     "This package is desgined to perform statistical analysis to identify
statistically significant differentially bound regions between multiple groups
of @code{ChIP-seq} dataset.")
    (license license:artistic2.0)))

(define-public r-csdr
  (package
    (name "r-csdr")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "csdR" version))
       (sha256
        (base32 "0r51n7vlddgg1rxxrpm9pfhq5nm4467933crvzln5dz9qsx34vs6"))))
    (properties `((upstream-name . "csdR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-wgcna r-rhpcblasctl r-rcpp r-matrixstats r-glue))
    (native-inputs (list r-knitr))
    (home-page "https://almaaslab.github.io/csdR")
    (synopsis "Differential gene co-expression")
    (description
     "This package contains functionality to run differential gene co-expression
across two different conditions.  The algorithm is inspired by Voigt et al.
2017 and finds Conserved, Specific and Differentiated genes (hence the name
CSD).  This package include efficient and variance calculation by bootstrapping
and Welford's algorithm.")
    (license license:gpl3)))

(define-public r-csaw
  (package
    (name "r-csaw")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "csaw" version))
       (sha256
        (base32 "02ajgkpwz5s7i72swnlix1djmnv8zmp7yl2ppwq4m60rs23d06wg"))))
    (properties `((upstream-name . "csaw")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-zlibbioc
                             r-summarizedexperiment
                             r-s4vectors
                             r-rsamtools
                             r-rhtslib
                             r-rcpp
                             r-metapod
                             r-matrix
                             r-limma
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-edger
                             r-biocparallel
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/csaw")
    (synopsis "ChIP-Seq Analysis with Windows")
    (description
     "Detection of differentially bound regions in @code{ChIP-seq} data with sliding
windows, with methods for normalization and proper FDR control.")
    (license license:gpl3)))

(define-public r-csar
  (package
    (name "r-csar")
    (version "1.58.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CSAR" version))
       (sha256
        (base32 "1baqklp2pa7nam2vcjanpy4hip9dgmx9bxi1czdb92rrjgr6vk2l"))))
    (properties `((upstream-name . "CSAR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors r-iranges r-genomicranges
                             r-genomeinfodb))
    (home-page "https://bioconductor.org/packages/CSAR")
    (synopsis "Statistical tools for the analysis of ChIP-seq data")
    (description
     "Statistical tools for @code{ChIP-seq} data analysis.  The package includes the
statistical method described in Kaufmann et al. (2009) P@code{LoS} Biology:
7(4):e1000090.  Briefly, Taking the average DNA fragment size subjected to
sequencing into account, the software calculates genomic single-nucleotide
read-enrichment values.  After normalization, sample and control are compared
using a test based on the Poisson distribution.  Test statistic thresholds to
control the false discovery rate are obtained through random permutation.")
    (license license:artistic2.0)))

(define-public r-crlmm
  (package
    (name "r-crlmm")
    (version "1.64.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crlmm" version))
       (sha256
        (base32 "0fc87gn7k7i60sy5acg6dfs8bxamnch9riaxmzwpp7l20g5v6hd5"))))
    (properties `((upstream-name . "crlmm")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vgam
                             r-rcppeigen
                             r-preprocesscore
                             r-oligoclasses
                             r-mvtnorm
                             r-matrixstats
                             r-limma
                             r-lattice
                             r-illuminaio
                             r-foreach
                             r-ff
                             r-ellipse
                             r-biocgenerics
                             r-biobase
                             r-beanplot
                             r-affyio))
    (home-page "https://bioconductor.org/packages/crlmm")
    (synopsis
     "Genotype Calling (CRLMM) and Copy Number Analysis tool for Affymetrix SNP 5.0 and 6.0 and Illumina arrays")
    (description
     "Faster implementation of CRLMM specific to SNP 5.0 and 6.0 arrays, as well as a
copy number tool specific to 5.0, 6.0, and Illumina platforms.")
    (license license:artistic2.0)))

(define-public r-crisprviz
  (package
    (name "r-crisprviz")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprViz" version))
       (sha256
        (base32 "08rsn3cf1r5w8k58slxv73gg1dgclf3i0yywp06l53yv9i5mf3id"))))
    (properties `((upstream-name . "crisprViz")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-txdbmaker
                             r-s4vectors
                             r-iranges
                             r-gviz
                             r-genomicranges
                             r-genomicfeatures
                             r-genomeinfodb
                             r-crisprdesign
                             r-crisprbase
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprViz")
    (synopsis "Visualization Functions for CRISPR gRNAs")
    (description
     "This package provides functionalities to visualize and contextualize CRISPR
guide RNAs (@code{gRNAs}) on genomic tracks across nucleases and applications.
Works in conjunction with the @code{crisprBase} and @code{crisprDesign}
Bioconductor packages.  Plots are produced using the Gviz framework.")
    (license license:expat)))

(define-public r-crisprverse
  (package
    (name "r-crisprverse")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprVerse" version))
       (sha256
        (base32 "188ilq0c8cgn70g2sahymdpfm1kdy89ayzlr6471aw05nlrfsh1i"))))
    (properties `((upstream-name . "crisprVerse")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rlang
                             r-crisprviz
                             r-crisprscoredata
                             r-crisprscore
                             r-crisprdesign
                             r-crisprbowtie
                             r-crisprbase
                             r-cli
                             r-biocmanager))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprVerse")
    (synopsis
     "Easily install and load the crisprVerse ecosystem for CRISPR gRNA design")
    (description
     "The @code{crisprVerse} is a modular ecosystem of R packages developed for the
design and manipulation of CRISPR guide RNAs (@code{gRNAs}).  All packages share
a common language and design principles.  This package is designed to make it
easy to install and load the @code{crisprVerse} packages in a single step.  To
learn more about the @code{crisprVerse}, visit
<https://www.github.com/@code{crisprVerse>}.")
    (license license:expat)))

(define-public r-crisprvariants
  (package
    (name "r-crisprvariants")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CrispRVariants" version))
       (sha256
        (base32 "15dx4bzvn2b44lbjyb4h2g76kqychsqhmv5vrb8pn97fg6pmfsgy"))))
    (properties `((upstream-name . "CrispRVariants")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-reshape2
                             r-iranges
                             r-gridextra
                             r-ggplot2
                             r-genomicranges
                             r-genomicalignments
                             r-genomeinfodb
                             r-biostrings
                             r-biocparallel
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CrispRVariants")
    (synopsis
     "Tools for counting and visualising mutations in a target location")
    (description
     "@code{CrispRVariants} provides tools for analysing the results of a CRISPR-Cas9
mutagenesis sequencing experiment, or other sequencing experiments where
variants within a given region are of interest.  These tools allow users to
localize variant allele combinations with respect to any genomic location (e.g.
the Cas9 cut site), plot allele combinations and calculate mutation rates with
flexible filtering of unrelated variants.")
    (license license:gpl2)))

(define-public r-crisprshiny
  (package
    (name "r-crisprshiny")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprShiny" version))
       (sha256
        (base32 "0qpawfgqvckvf9b0qi14ci9mcjmx8hwb4sn6k348da5hyvh0q1gp"))))
    (properties `((upstream-name . "crisprShiny")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-waiter
                             r-shinyjs
                             r-shinybs
                             r-shiny
                             r-s4vectors
                             r-pwalign
                             r-htmlwidgets
                             r-genomeinfodb
                             r-dt
                             r-crisprviz
                             r-crisprscore
                             r-crisprdesign
                             r-crisprbase
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprShiny")
    (synopsis "Exploring curated CRISPR gRNAs via Shiny")
    (description
     "This package provides means to interactively visualize guide RNAs (@code{gRNAs})
in @code{GuideSet} objects via Shiny application.  This GUI can be
self-contained or as a module within a larger Shiny app.  The content of the app
reflects the annotations present in the passed @code{GuideSet} object, and
includes intuitive tools to examine, filter, and export @code{gRNAs}, thereby
making @code{gRNA} design more user-friendly.")
    (license license:expat)))

(define-public r-crisprseek
  (package
    (name "r-crisprseek")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CRISPRseek" version))
       (sha256
        (base32 "1p5983v1w4rj2i5ch2g3ygzxqssqvgv222anf3060s9zsyiycm9a"))))
    (properties `((upstream-name . "CRISPRseek")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xvector
                             r-seqinr
                             r-s4vectors
                             r-rhdf5
                             r-reticulate
                             r-mltools
                             r-keras
                             r-iranges
                             r-hash
                             r-genomicranges
                             r-genomeinfodb
                             r-dplyr
                             r-delayedarray
                             r-data-table
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics))
    (home-page "https://bioconductor.org/packages/CRISPRseek")
    (synopsis
     "Design of target-specific guide RNAs in CRISPR-Cas9, genome-editing systems")
    (description
     "The package includes functions to find potential guide RNAs for the CRISPR
editing system including Base Editors and the Prime Editor for input target
sequences, optionally filter guide RNAs without restriction enzyme cut site, or
without paired guide RNAs, genome-wide search for off-targets, score, rank,
fetch flank sequence and indicate whether the target and off-targets are located
in exon region or not.  Potential guide RNAs are annotated with total score of
the top5 and @code{topN} off-targets, detailed @code{topN} mismatch sites,
restriction enzyme cut sites, and paired guide RNAs.  The package also output
indels and their frequencies for Cas9 targeted sites.")
    (license license:gpl2+)))

(define-public r-crisprscoredata
  (package
    (name "r-crisprscoredata")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprScoreData" version
                              'experiment))
       (sha256
        (base32 "1107c7fa5pjjjf4q6jf9xv1sbwdx9q1p2dalfwbjr9z2fhp6waw8"))))
    (properties `((upstream-name . "crisprScoreData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprScoreData/issues")
    (synopsis "Pre-trained models for the crisprScore package")
    (description
     "This package provides an interface to access pre-trained models for on-target
and off-target @code{gRNA} activity prediction algorithms implemented in the
@code{crisprScore} package.  Pre-trained model data are stored in the
@code{ExperimentHub} database.  Users should consider using the
@code{crisprScore} package directly to use and load the pre-trained models.")
    (license license:expat)))

(define-public r-crisprscore
  (package
    (name "r-crisprscore")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprScore" version))
       (sha256
        (base32 "1gwklmhxvazsm79gy21zk54zj13qxvv6kq27rfxz35rddys69ljk"))))
    (properties `((upstream-name . "crisprScore")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xvector
                             r-stringr
                             r-reticulate
                             r-randomforest
                             r-iranges
                             r-crisprscoredata
                             r-biostrings
                             r-biocgenerics
                             r-basilisk-utils
                             r-basilisk))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprScore/issues")
    (synopsis "On-Target and Off-Target Scoring Algorithms for CRISPR gRNAs")
    (description
     "This package provides R wrappers of several on-target and off-target scoring
methods for CRISPR guide RNAs (@code{gRNAs}).  The following nucleases are
supported: @code{SpCas9}, @code{AsCas12a}, @code{enAsCas12a}, and
@code{RfxCas13d} (@code{CasRx}).  The available on-target cutting efficiency
scoring methods are @code{RuleSet1}, Azimuth, @code{DeepHF}, @code{DeepCpf1},
@code{enPAM+GB}, and CRISPRscan.  Both the CFD and MIT scoring methods are
available for off-target specificity prediction.  The package also provides a
Lindel-derived score to predict the probability of a @code{gRNA} to produce
indels inducing a frameshift for the Cas9 nuclease.  Note that @code{DeepHF},
@code{DeepCpf1} and @code{enPAM+GB} are not available on Windows machines.")
    (license license:expat)))

(define-public r-crisprdesign
  (package
    (name "r-crisprdesign")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprDesign" version))
       (sha256
        (base32 "01qzfpjvsc478zax5hvl1ffjw6wjj6qdja076pqf2y3ax5z34c9y"))))
    (properties `((upstream-name . "crisprDesign")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation
                             r-txdbmaker
                             r-s4vectors
                             r-rtracklayer
                             r-matrixgenerics
                             r-matrix
                             r-iranges
                             r-genomicranges
                             r-genomicfeatures
                             r-genomeinfodb
                             r-crisprscore
                             r-crisprbowtie
                             r-crisprbase
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprDesign")
    (synopsis
     "Comprehensive design of CRISPR gRNAs for nucleases and base editors")
    (description
     "This package provides a comprehensive suite of functions to design and annotate
CRISPR guide RNA (@code{gRNAs}) sequences.  This includes on- and off-target
search, on-target efficiency scoring, off-target scoring, full gene and TSS
contextual annotations, and SNP annotation (human only).  It currently support
five types of CRISPR modalities (modes of perturbations): CRISPR knockout,
CRISPR activation, CRISPR inhibition, CRISPR base editing, and CRISPR knockdown.
 All types of CRISPR nucleases are supported, including DNA- and RNA-target
nucleases such as Cas9, Cas12a, and Cas13d.  All types of base editors are also
supported. @code{gRNA} design can be performed on reference genomes,
transcriptomes, and custom DNA and RNA sequences.  Both unpaired and paired
@code{gRNA} designs are enabled.")
    (license license:expat)))

(define-public r-crisprbwa
  (package
    (name "r-crisprbwa")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprBwa" version))
       (sha256
        (base32 "0891ll8zjydb1cf37msy6d49fbs28fp7ba33m6ljix1m021rsk1v"))))
    (properties `((upstream-name . "crisprBwa")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-readr
                             r-rbwa
                             r-genomeinfodb
                             r-crisprbase
                             r-bsgenome
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprBwa")
    (synopsis "BWA-based alignment of CRISPR gRNA spacer sequences")
    (description
     "This package provides a user-friendly interface to map on-targets and
off-targets of CRISPR @code{gRNA} spacer sequences using bwa.  The alignment is
fast, and can be performed using either commonly-used or custom CRISPR
nucleases.  The alignment can work with any reference or custom genomes.
Currently not supported on Windows machines.")
    (license license:expat)))

(define-public r-crisprbowtie
  (package
    (name "r-crisprbowtie")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprBowtie" version))
       (sha256
        (base32 "0li9m4r3xwp3djyrqx0x7x1mai1x638djimnqzfnicc9d404z66c"))))
    (properties `((upstream-name . "crisprBowtie")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-readr
                             r-rbowtie
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-crisprbase
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprBowtie")
    (synopsis "Bowtie-based alignment of CRISPR gRNA spacer sequences")
    (description
     "This package provides a user-friendly interface to map on-targets and
off-targets of CRISPR @code{gRNA} spacer sequences using bowtie.  The alignment
is fast, and can be performed using either commonly-used or custom CRISPR
nucleases.  The alignment can work with any reference or custom genomes.  Both
DNA- and RNA-targeting nucleases are supported.")
    (license license:expat)))

(define-public r-crisprbase
  (package
    (name "r-crisprbase")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "crisprBase" version))
       (sha256
        (base32 "0azk53vdrwhkb3ipybgz5g5x31wjiz1w0x6k0rx4gwir8wjq60g3"))))
    (properties `((upstream-name . "crisprBase")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-s4vectors
                             r-iranges
                             r-genomicranges
                             r-biostrings
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/crisprVerse/crisprBase")
    (synopsis "Base functions and classes for CRISPR gRNA design")
    (description
     "This package provides S4 classes for general nucleases, CRISPR nucleases, CRISPR
nickases, and base editors.Several CRISPR-specific genome arithmetic functions
are implemented to help extract genomic coordinates of spacer and protospacer
sequences.  Commonly-used CRISPR nuclease objects are provided that can be
readily used in other packages.  Both DNA- and RNA-targeting nucleases are
supported.")
    (license license:expat)))

(define-public r-crisprball
  (package
    (name "r-crisprball")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CRISPRball" version))
       (sha256
        (base32 "04gma48r31sirl33r74xfh884gpx06aydm1vdqissmsli0kqnxd3"))))
    (properties `((upstream-name . "CRISPRball")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-shinywidgets
                             r-shinyjs
                             r-shinyjqui
                             r-shinycssloaders
                             r-shinybs
                             r-shiny
                             r-plotly
                             r-pcatools
                             r-matrixstats
                             r-mageckflute
                             r-interactivecomplexheatmap
                             r-htmlwidgets
                             r-ggplot2
                             r-dt
                             r-dittoseq
                             r-complexheatmap
                             r-colourpicker
                             r-circlize))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/j-andrews7/CRISPRball")
    (synopsis
     "Shiny Application for Interactive CRISPR Screen Visualization, Exploration, Comparison, and Filtering")
    (description
     "This package provides a Shiny application for visualization, exploration,
comparison, and filtering of CRISPR screens analyzed with MA@code{GeCK} RRA or
MLE. Features include interactive plots with on-click labeling, full
customization of plot aesthetics, data upload and/or download, and much more.
Quickly and easily explore your CRISPR screen results and generate
publication-quality figures in seconds.")
    (license license:expat)))

(define-public r-crimage
  (package
    (name "r-crimage")
    (version "1.54.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CRImage" version))
       (sha256
        (base32 "08gh04dslr08dw5cb954v0p9p65g88yqdrlbwz4qyysva4yali0f"))))
    (properties `((upstream-name . "CRImage")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-sgeostat
                             r-mass
                             r-foreach
                             r-ebimage
                             r-e1071
                             r-dnacopy
                             r-acgh))
    (home-page "https://bioconductor.org/packages/CRImage")
    (synopsis
     "CRImage a package to classify cells and calculate tumour cellularity")
    (description
     "CRImage provides functionality to process and analyze images, in particular to
classify cells in biological images.  Furthermore, in the context of tumor
images, it provides functionality to calculate tumour cellularity.")
    (license license:artistic2.0)))

(define-public r-crcl18
  (package
    (name "r-crcl18")
    (version "1.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CRCL18" version
                              'experiment))
       (sha256
        (base32 "03a0haskz3jpccgbb4r9jzgzrrxabprwh3h3j1r5mpjasq7yrwdv"))))
    (properties `((upstream-name . "CRCL18")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/CRCL18")
    (synopsis "CRC cell line dataset")
    (description
     "colorectal cancer @code{mRNA} and @code{miRNA} on 18 cell lines.")
    (license license:gpl2)))

(define-public r-cqn
  (package
    (name "r-cqn")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cqn" version))
       (sha256
        (base32 "1iqpfav92psi1v6yz0q1kl1pjpyf4fwf2b6iviggykz54kachva9"))))
    (properties `((upstream-name . "cqn")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-quantreg r-nor1mix r-mclust))
    (home-page "https://bioconductor.org/packages/cqn")
    (synopsis "Conditional quantile normalization")
    (description
     "This package provides a normalization tool for RNA-Seq data, implementing the
conditional quantile normalization method.")
    (license license:artistic2.0)))

(define-public r-cpvsnp
  (package
    (name "r-cpvsnp")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cpvSNP" version))
       (sha256
        (base32 "0qqakgpj35jzqpslh5b53f3jhq3gdhvdwfwfgsla84lprmjy2fla"))))
    (properties `((upstream-name . "cpvSNP")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-plyr
                             r-gseabase
                             r-ggplot2
                             r-genomicfeatures
                             r-corpcor
                             r-biocparallel))
    (home-page "https://bioconductor.org/packages/cpvSNP")
    (synopsis
     "Gene set analysis methods for SNP association p-values that lie in genes in given gene sets")
    (description
     "Gene set analysis methods exist to combine SNP-level association p-values into
gene sets, calculating a single association p-value for each gene set.  This
package implements two such methods that require only the calculated SNP
p-values, the gene set(s) of interest, and a correlation matrix (if desired).
One method (GLOSSI) requires independent SNPs and the other (VEGAS) can take
into account correlation (LD) among the SNPs.  Built-in plotting functions are
available to help users visualize results.")
    (license license:artistic2.0)))

(define-public r-covrna
  (package
    (name "r-covrna")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "covRNA" version))
       (sha256
        (base32 "1lspmjr1ih985wakhi3bsq94zmpzvzk0cxh2msvqb4cdx39s4mii"))))
    (properties `((upstream-name . "covRNA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genefilter r-biobase r-ade4))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/covRNA")
    (synopsis "Multivariate Analysis of Transcriptomic Data")
    (description
     "This package provides the analysis methods fourthcorner and RLQ analysis for
large-scale transcriptomic data.")
    (license license:gpl2+)))

(define-public r-coveb
  (package
    (name "r-coveb")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "covEB" version))
       (sha256
        (base32 "02yxd4amnahgib8dgkn3pydjmbgd9lz53ydcib3ls6qfbxd3pk8q"))))
    (properties `((upstream-name . "covEB")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-mvtnorm
                             r-matrix
                             r-laplacesdemon
                             r-igraph
                             r-gsl
                             r-biobase))
    (home-page "https://bioconductor.org/packages/covEB")
    (synopsis "Empirical Bayes estimate of block diagonal covariance matrices")
    (description
     "Using bayesian methods to estimate correlation matrices assuming that they can
be written and estimated as block diagonal matrices.  These block diagonal
matrices are determined using shrinkage parameters that values below this
parameter to zero.")
    (license license:gpl3)))

(define-public r-countsimqc
  (package
    (name "r-countsimqc")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "countsimQC" version))
       (sha256
        (base32 "1abbp6hdbmxf7j005anl2l63g8kyxv3l87ds5k7m3r7rx87j5y51"))))
    (properties `((upstream-name . "countsimQC")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-summarizedexperiment
                             r-rmarkdown
                             r-randtests
                             r-ragg
                             r-ggplot2
                             r-genomeinfodbdata
                             r-genefilter
                             r-edger
                             r-dt
                             r-dplyr
                             r-deseq2
                             r-catools))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/csoneson/countsimQC")
    (synopsis "Compare Characteristic Features of Count Data Sets")
    (description
     "@code{countsimQC} provides functionality to create a comprehensive report
comparing a broad range of characteristics across a collection of count
matrices.  One important use case is the comparison of one or more synthetic
count matrices to a real count matrix, possibly the one underlying the
simulations.  However, any collection of count matrices can be compared.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-cottonprobe
  (package
    (name "r-cottonprobe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cottonprobe" version
                              'annotation))
       (sha256
        (base32 "04mfjd3a7ikif4pv46s6h9dj2s912w8ihg4yyiii7s3jlmvy62ah"))))
    (properties `((upstream-name . "cottonprobe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/cottonprobe")
    (synopsis "Probe sequence data for microarrays of type cotton")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was Cotton\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-cottoncdf
  (package
    (name "r-cottoncdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cottoncdf" version
                              'annotation))
       (sha256
        (base32 "0xfwwla941fbxddykgizpar8dh8q459src7kc5wyrsd3swp3zyp5"))))
    (properties `((upstream-name . "cottoncdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/cottoncdf")
    (synopsis "cottoncdf")
    (description
     "This package provides a package containing an environment representing the
Cotton.cdf file.")
    (license license:lgpl2.0+)))

(define-public r-cotan
  (package
    (name "r-cotan")
    (version "2.6.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COTAN" version))
       (sha256
        (base32 "1gd7zvv05m6lxgscl0ng4vhfrj3iip5wh96qvp5m4frhy618757x"))))
    (properties `((upstream-name . "COTAN")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-zeallot
                             r-withr
                             r-umap
                             r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-stringr
                             r-singlecellexperiment
                             r-seurat
                             r-scales
                             r-s4vectors
                             r-rlang
                             r-rfast
                             r-rcolorbrewer
                             r-plyr
                             r-pcatools
                             r-parallelly
                             r-paralleldist
                             r-matrix
                             r-ggthemes
                             r-ggrepel
                             r-ggplot2
                             r-dplyr
                             r-dendextend
                             r-complexheatmap
                             r-circlize
                             r-biocsingular
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/seriph78/COTAN")
    (synopsis "COexpression Tables ANalysis")
    (description
     "Statistical and computational method to analyze the co-expression of gene pairs
at single cell level.  It provides the foundation for single-cell gene
interactome analysis.  The basic idea is studying the zero UMI counts
distribution instead of focusing on positive counts; this is done with a
generalized contingency tables framework.  COTAN can effectively assess the
correlated or anti-correlated expression of gene pairs.  It provides a numerical
index related to the correlation and an approximate p-value for the associated
independence test.  COTAN can also evaluate whether single genes are
differentially expressed, scoring them with a newly defined global
differentiation index.  Moreover, this approach provides ways to plot and
cluster genes according to their co-expression pattern with other genes,
effectively helping the study of gene interactions and becoming a new tool to
identify cell-identity marker genes.")
    (license license:gpl3)))

(define-public r-cosnet
  (package
    (name "r-cosnet")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COSNet" version))
       (sha256
        (base32 "1jp7l3chnyshva82f7qaz59gvwhz855x6257bq250nljwbv62x54"))))
    (properties `((upstream-name . "COSNet")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://github.com/m1frasca/COSNet_GitHub")
    (synopsis
     "Cost Sensitive Network for node label prediction on graphs with highly unbalanced labelings")
    (description
     "Package that implements the COSNet classification algorithm.  The algorithm
predicts node labels in partially labeled graphs where few positives are
available for the class being predicted.")
    (license license:gpl2+)))

(define-public r-cosmosr
  (package
    (name "r-cosmosr")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cosmosR" version))
       (sha256
        (base32 "17rd4d5ssz0l0v48wyff1j3ffhia02qqxcivgbj1iaqyr5dxf2f5"))))
    (properties `((upstream-name . "cosmosR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-visnetwork
                             r-stringr
                             r-rlang
                             r-purrr
                             r-progress
                             r-igraph
                             r-gseabase
                             r-dplyr
                             r-dorothea
                             r-decoupler
                             r-carnival))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/saezlab/COSMOSR")
    (synopsis "COSMOS (Causal Oriented Search of Multi-Omic Space)")
    (description
     "COSMOS (Causal Oriented Search of Multi-Omic Space) is a method that integrates
phosphoproteomics, transcriptomics, and metabolomics data sets based on prior
knowledge of signaling, metabolic, and gene regulatory networks.  It estimated
the activities of transcrption factors and kinases and finds a network-level
causal reasoning.  Thereby, COSMOS provides mechanistic hypotheses for
experimental observations across mulit-omics datasets.")
    (license license:gpl3)))

(define-public r-cosmiq
  (package
    (name "r-cosmiq")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cosmiq" version))
       (sha256
        (base32 "038xn54vskc155yilqblz91fjmk6qd1r7yb0ga7szrqa1lm10l1v"))))
    (properties `((upstream-name . "cosmiq")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xcms r-rcpp r-pracma r-massspecwavelet r-faahko))
    (home-page
     "http://www.bioconductor.org/packages/devel/bioc/html/cosmiq.html")
    (synopsis "cosmiq - COmbining Single Masses Into Quantities")
    (description
     "cosmiq is a tool for the preprocessing of liquid- or gas - chromatography mass
spectrometry (LCMS/GCMS) data with a focus on metabolomics or lipidomics
applications.  To improve the detection of low abundant signals, cosmiq
generates master maps of the @code{mZ/RT} space from all acquired runs before a
peak detection algorithm is applied.  The result is a more robust identification
and quantification of low-intensity MS signals compared to conventional
approaches where peak picking is performed in each LCMS/GCMS file separately.
The cosmiq package builds on the @code{xcmsSet} object structure and can be
therefore integrated well with the package xcms as an alternative preprocessing
step.")
    (license license:gpl3)))

(define-public r-cosmic-67
  (package
    (name "r-cosmic-67")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COSMIC.67" version
                              'experiment))
       (sha256
        (base32 "0kb78j7wdjzcl6dygj18kq6lmnga67l6h9v6an9bvw97vdlwijkj"))))
    (properties `((upstream-name . "COSMIC.67")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation r-summarizedexperiment
                             r-genomicranges))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/COSMIC.67")
    (synopsis "COSMIC.67")
    (description
     "COSMIC: Catalogue Of Somatic Mutations In Cancer, version 67 (2013-10-24).")
    (license license:gpl3)))

(define-public r-cosiadata
  (package
    (name "r-cosiadata")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CoSIAdata" version
                              'experiment))
       (sha256
        (base32 "1pd0k8gnn7s798qkvjvgvaschjpn72fvaf28ly1qvdg6mx1xfb2p"))))
    (properties `((upstream-name . "CoSIAdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CoSIAdata")
    (synopsis
     "VST normalized RNA-Sequencing data with annotations for multiple species samples from Bgee")
    (description
     "Variance Stabilized Transformation of Read Counts derived from Bgee RNA-Seq
Expression Data.  Expression Data includes annotations and is across 6 species
(Homo sapiens, Mus musculus, Rattus norvegicus, Danio rerio, Drosophila
melanogaster, and Caenorhabditis elegans) and across more than 132 tissues.  The
data is represented as a RData files and is available in @code{ExperimentHub}.")
    (license license:expat)))

(define-public r-cosia
  (package
    (name "r-cosia")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CoSIA" version))
       (sha256
        (base32 "1rnd5y1vlcf330zvpl1njzknnima2zcsn9hsdsi8lvprj6llws6l"))))
    (properties `((upstream-name . "CoSIA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-tidyselect
                             r-tidyr
                             r-tibble
                             r-stringr
                             r-readr
                             r-rcolorbrewer
                             r-plotly
                             r-org-rn-eg-db
                             r-org-mm-eg-db
                             r-org-hs-eg-db
                             r-org-dr-eg-db
                             r-org-dm-eg-db
                             r-org-ce-eg-db
                             r-magrittr
                             r-homologene
                             r-ggplot2
                             r-experimenthub
                             r-dplyr
                             r-biomart
                             r-annotationtools
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://www.lasseigne.org/")
    (synopsis "An Investigation Across Different Species and Tissues")
    (description
     "Cross-Species Investigation and Analysis (@code{CoSIA}) is a package that
provides researchers with an alternative methodology for comparing across
species and tissues using normal wild-type RNA-Seq Gene Expression data from
Bgee.  Using RNA-Seq Gene Expression data, @code{CoSIA} provides multiple
visualization tools to explore the transcriptome diversity and variation across
genes, tissues, and species. @code{CoSIA} uses the Coefficient of Variation and
Shannon Entropy and Specificity to calculate transcriptome diversity and
variation. @code{CoSIA} also provides additional conversion tools and utilities
to provide a streamlined methodology for cross-species comparison.")
    (license license:expat)))

(define-public r-coseq
  (package
    (name "r-coseq")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "coseq" version))
       (sha256
        (base32 "0x3z4zci7s89c8h19a52r5czr052jng5sqifj4flm8lwigh8kxz3"))))
    (properties `((upstream-name . "coseq")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-scales
                             r-s4vectors
                             r-rmixmod
                             r-mvtnorm
                             r-htsfilter
                             r-htscluster
                             r-ggplot2
                             r-edger
                             r-e1071
                             r-deseq2
                             r-corrplot
                             r-compositions
                             r-capushe
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/coseq")
    (synopsis "Co-Expression Analysis of Sequencing Data")
    (description
     "Co-expression analysis for expression profiles arising from high-throughput
sequencing data.  Feature (e.g., gene) profiles are clustered using adapted
transformations and mixture models or a K-means algorithm, and model selection
criteria (to choose an appropriate number of clusters) are provided.")
    (license license:gpl3)))

(define-public r-corral
  (package
    (name "r-corral")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "corral" version))
       (sha256
        (base32 "1g6lhyj2fr6dwfgsammmnyh2krswl0zhicbpcjcbdjqp2042zf1n"))))
    (properties `((upstream-name . "corral")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-transport
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-reshape2
                             r-pals
                             r-multiassayexperiment
                             r-matrix
                             r-irlba
                             r-gridextra
                             r-ggthemes
                             r-ggplot2))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/corral")
    (synopsis "Correspondence Analysis for Single Cell Data")
    (description
     "Correspondence analysis (CA) is a matrix factorization method, and is similar to
principal components analysis (PCA).  Whereas PCA is designed for application to
continuous, approximately normally distributed data, CA is appropriate for
non-negative, count-based data that are in the same additive scale.  The corral
package implements CA for dimensionality reduction of a single matrix of
single-cell data, as well as a multi-table adaptation of CA that leverages
data-optimized scaling to align data generated from different sequencing
platforms by projecting into a shared latent space.  corral utilizes sparse
matrices and a fast implementation of SVD, and can be called directly on
Bioconductor objects (e.g., @code{SingleCellExperiment}) for easy pipeline
integration.  The package also includes additional options, including variations
of CA to address overdispersion in count data (e.g., Freeman-Tukey chi-squared
residual), as well as the option to apply CA-style processing to continuous data
(e.g., proteomic TOF intensities) with the Hellinger distance adaptation of CA.")
    (license license:gpl2)))

(define-public r-cormotif
  (package
    (name "r-cormotif")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "Cormotif" version))
       (sha256
        (base32 "192kqzyqxrwf6dcjzffmqvs0hiizl6bcmqv1hn02ikji0p5g9kbv"))))
    (properties `((upstream-name . "Cormotif")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-limma r-affy))
    (home-page "https://bioconductor.org/packages/Cormotif")
    (synopsis "Correlation Motif Fit")
    (description
     "It fits correlation motif model to multiple studies to detect study specific
differential expression patterns.")
    (license license:gpl2)))

(define-public r-cordon
  (package
    (name "r-cordon")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "coRdon" version))
       (sha256
        (base32 "04pprr15b9bss6nh2gd83iyzk30m6ma1vpn5qp3c5h5mi7bbk4x8"))))
    (properties `((upstream-name . "coRdon")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-purrr
                             r-ggplot2
                             r-dplyr
                             r-data-table
                             r-biostrings
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/BioinfoHR/coRdon")
    (synopsis "Codon Usage Analysis and Prediction of Gene Expressivity")
    (description
     "Tool for analysis of codon usage in various unannotated or KEGG/COG annotated
DNA sequences.  Calculates different measures of CU bias and CU-based predictors
of gene expressivity, and performs gene set enrichment analysis for annotated
sequences.  Implements several methods for visualization of CU and enrichment
analysis results.")
    (license license:artistic2.0)))

(define-public r-copynumberplots
  (package
    (name "r-copynumberplots")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CopyNumberPlots" version))
       (sha256
        (base32 "03pg348h88d55kd9cg0svlhvyjv5fb7vmgrx32l2345zg1j0m0g1"))))
    (properties `((upstream-name . "CopyNumberPlots")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation
                             r-summarizedexperiment
                             r-rsamtools
                             r-rhdf5
                             r-regioner
                             r-karyoploter
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-cn-mops))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/bernatgel/CopyNumberPlots")
    (synopsis "Create Copy-Number Plots using karyoploteR functionality")
    (description
     "@code{CopyNumberPlots} have a set of functions extending @code{karyoploteRs}
functionality to create beautiful, customizable and flexible plots of
copy-number related data.")
    (license license:artistic2.0)))

(define-public r-copyneutralima
  (package
    (name "r-copyneutralima")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CopyNeutralIMA" version
                              'experiment))
       (sha256
        (base32 "1zls7gj8y5pav5gw0lxdi89p38b6idywryqppqfq7zn4mhdz198m"))))
    (properties `((upstream-name . "CopyNeutralIMA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-rdpack r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CopyNeutralIMA")
    (synopsis "Copy Neutral Illumina Methylation Arrays")
    (description
     "This package provides a set of genomic copy neutral samples hybridized using
Illumina Methylation arrays (450k and EPIC).")
    (license license:artistic2.0)))

(define-public r-copdsexualdimorphism-data
  (package
    (name "r-copdsexualdimorphism-data")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COPDSexualDimorphism.data" version
                              'experiment))
       (sha256
        (base32 "08nrc8r21p1nvzfiahrbxigbyipzi82d6q7r064jq92qyc2fd8jh"))))
    (properties `((upstream-name . "COPDSexualDimorphism.data")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/COPDSexualDimorphism.data")
    (synopsis
     "Data to support sexually dimorphic and COPD differential analysis for gene expression and methylation")
    (description "Datasets to support COPD@code{SexaulDimorphism} Package.")
    (license license:lgpl2.1)))

(define-public r-copa
  (package
    (name "r-copa")
    (version "1.74.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "copa" version))
       (sha256
        (base32 "1nb4q4jmksbsnfjbhfygxz34hnxfm0dl2f21gakbr8iq3vg2ns5q"))))
    (properties `((upstream-name . "copa")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/copa")
    (synopsis "Functions to perform cancer outlier profile analysis")
    (description
     "COPA is a method to find genes that undergo recurrent fusion in a given cancer
type by finding pairs of genes that have mutually exclusive outlier profiles.")
    (license license:artistic2.0)))

(define-public r-convert
  (package
    (name "r-convert")
    (version "1.82.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "convert" version))
       (sha256
        (base32 "0ghbsfc62bqxy8cz71ld59m0a0r7wb5fn9lj8kxwgpvgfiflcq7d"))))
    (properties `((upstream-name . "convert")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-marray r-limma r-biobase))
    (home-page "http://bioinf.wehi.edu.au/limma/convert.html")
    (synopsis "Convert Microarray Data Objects")
    (description "Define coerce methods for microarray data objects.")
    (license license:lgpl2.0+)))

(define-public r-conumee
  (package
    (name "r-conumee")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "conumee" version))
       (sha256
        (base32 "1jy68njrqvjv4l4zh3f8wh93qr2mw65i4nrf51fh1xhjas1jj7g0"))))
    (properties `((upstream-name . "conumee")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rtracklayer
                             r-minfi
                             r-iranges
                             r-illuminahumanmethylationepicmanifest
                             r-illuminahumanmethylationepicanno-ilm10b2-hg19
                             r-illuminahumanmethylation450kmanifest
                             r-illuminahumanmethylation450kanno-ilmn12-hg19
                             r-genomicranges
                             r-genomeinfodb
                             r-dnacopy))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/conumee")
    (synopsis
     "Enhanced copy-number variation analysis using Illumina DNA methylation arrays")
    (description
     "This package contains a set of processing and plotting methods for performing
copy-number variation (CNV) analysis using Illumina 450k or EPIC methylation
arrays.")
    (license license:gpl2+)))

(define-public r-constand
  (package
    (name "r-constand")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CONSTANd" version))
       (sha256
        (base32 "1jzl6krqy51fsk9l9jn1gqh1lviwsq98n0rnkh4z8d968s7mrzyy"))))
    (properties `((upstream-name . "CONSTANd")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (native-inputs (list r-knitr))
    (home-page "qcquan.net/constand")
    (synopsis "Data normalization by matrix raking")
    (description
     "Normalizes a data matrix `data` by raking (using the RAS method by Bacharach,
see references) the Nrows by Ncols matrix such that the row means and column
means equal 1.  The result is a normalized data matrix `K=RAS`, a product of row
mulipliers `R` and column multipliers `S` with the original matrix `A`.  Missing
information needs to be presented as `NA` values and not as zero values, because
CONSTANd is able to ignore missing values when calculating the mean.  Using
CONSTANd normalization allows for the direct comparison of values between
samples within the same and even across different CONSTANd-normalized data
matrices.")
    (license (license:fsdg-compatible "file://LICENSE"))))

(define-public r-consica
  (package
    (name "r-consica")
    (version "2.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "consICA" version))
       (sha256
        (base32 "0r5qqd4a6h08ah1vj5wbmwhdsg5q7piia03y7nq6qd6l6shbvd8z"))))
    (properties `((upstream-name . "consICA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-topgo
                             r-survival
                             r-summarizedexperiment
                             r-sm
                             r-rfast
                             r-pheatmap
                             r-org-hs-eg-db
                             r-graph
                             r-go-db
                             r-ggplot2
                             r-fastica
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/consICA")
    (synopsis "consensus Independent Component Analysis")
    (description
     "@code{consICA} implements a data-driven deconvolution method – consensus
independent component analysis (ICA) to decompose heterogeneous omics data and
extract features suitable for patient diagnostics and prognostics.  The method
separates biologically relevant transcriptional signals from technical effects
and provides information about the cellular composition and biological
processes.  The implementation of parallel computing in the package ensures
efficient analysis of modern multicore systems.")
    (license license:expat)))

(define-public r-consensusseeker
  (package
    (name "r-consensusseeker")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "consensusSeekeR" version))
       (sha256
        (base32 "1wpy08a2mr5rxqbmb5kw1kidmmfk2ybx0jin5gd2ywc1gsf98pn7"))))
    (properties `((upstream-name . "consensusSeekeR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-s4vectors
                             r-rtracklayer
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-biocparallel
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/adeschen/consensusSeekeR")
    (synopsis
     "Detection of consensus regions inside a group of experiences using genomic positions and genomic ranges")
    (description
     "This package compares genomic positions and genomic ranges from multiple
experiments to extract common regions.  The size of the analyzed region is
adjustable as well as the number of experiences in which a feature must be
present in a potential region to tag this region as a consensus region.  In
genomic analysis where feature identification generates a position value
surrounded by a genomic range, such as @code{ChIP-Seq} peaks and nucleosome
positions, the replication of an experiment may result in slight differences
between predicted values.  This package enables the conciliation of the results
into consensus regions.")
    (license license:artistic2.0)))

(define-public r-consensusde
  (package
    (name "r-consensusde")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "consensusDE" version))
       (sha256
        (base32 "0vqr72v6mfdzhwhlg2v9q25s8i5qimaqn7rjd1wjp8cnccvg47mj"))))
    (properties `((upstream-name . "consensusDE")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-txdb-dmelanogaster-ucsc-dm3-ensgene
                             r-summarizedexperiment
                             r-s4vectors
                             r-ruvseq
                             r-rsamtools
                             r-rcolorbrewer
                             r-pcamethods
                             r-org-hs-eg-db
                             r-limma
                             r-genomicfeatures
                             r-genomicalignments
                             r-ensembldb
                             r-ensdb-hsapiens-v86
                             r-edger
                             r-edaseq
                             r-deseq2
                             r-dendextend
                             r-data-table
                             r-biostrings
                             r-biocparallel
                             r-biocgenerics
                             r-biobase
                             r-annotationdbi
                             r-airway))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/consensusDE")
    (synopsis "RNA-seq analysis using multiple algorithms")
    (description
     "This package allows users to perform DE analysis using multiple algorithms.  It
seeks consensus from multiple methods.  Currently it supports \"Voom\",
\"@code{EdgeR}\" and \"DESeq\".  It uses RUV-seq (optional) to remove unwanted
sources of variation.")
    (license license:gpl3)))

(define-public r-consensus
  (package
    (name "r-consensus")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "consensus" version))
       (sha256
        (base32 "0c2wy2ci2zxswjh2hckx4j1ym1wjgb9lhs2ws8zpcmam4h9cy1zh"))))
    (properties `((upstream-name . "consensus")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rcolorbrewer r-matrixstats r-gplots))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/consensus")
    (synopsis
     "Cross-platform consensus analysis of genomic measurements via interlaboratory testing method")
    (description
     "An implementation of the American Society for Testing and Materials (ASTM)
Standard E691 for interlaboratory testing procedures, designed for
cross-platform genomic measurements.  Given three (3) or more genomic platforms
or laboratory protocols, this package provides interlaboratory testing
procedures giving per-locus comparisons for sensitivity and precision between
platforms.")
    (license license:bsd-3)))

(define-public r-connectivitymap
  (package
    (name "r-connectivitymap")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ConnectivityMap" version
                              'experiment))
       (sha256
        (base32 "0lq9yjz104426dn8y2q7a51433x4zfv5y7rrlavy7hkwlqr4jm5j"))))
    (properties `((upstream-name . "ConnectivityMap")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/ConnectivityMap")
    (synopsis
     "Functional connections between drugs, genes and diseases as revealed by common gene-expression changes")
    (description
     "The Broad Institute's Connectivity Map (cmap02) is a \"large reference catalogue
of gene-expression data from cultured human cells perturbed with many chemicals
and genetic reagents\", containing more than 7000 gene expression profiles and
1300 small molecules.")
    (license license:gpl3)))

(define-public r-confessdata
  (package
    (name "r-confessdata")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CONFESSdata" version
                              'experiment))
       (sha256
        (base32 "1qrnvd1c9jfjyn9k283x6g3z50zfvh4ryd5mig1w57a2hi714ars"))))
    (properties `((upstream-name . "CONFESSdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/CONFESSdata")
    (synopsis "Example dataset for CONFESS package")
    (description
     "Example text-converted C01 image files for use in the CONFESS Bioconductor
package.")
    (license license:gpl2)))

(define-public r-confess
  (package
    (name "r-confess")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CONFESS" version))
       (sha256
        (base32 "0hd90fkbq2m40ql6cmkfklwnnjgmgv0fw1j9ddasc1326n85qn8i"))))
    (properties `((upstream-name . "CONFESS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-zoo
                             r-wavethresh
                             r-waveslim
                             r-samspectral
                             r-reshape2
                             r-readbitmap
                             r-raster
                             r-plotrix
                             r-outliers
                             r-moments
                             r-mass
                             r-limma
                             r-ggplot2
                             r-foreach
                             r-flowpeaks
                             r-flowmerge
                             r-flowmeans
                             r-flowcore
                             r-flowclust
                             r-flexmix
                             r-ecp
                             r-ebimage
                             r-data-table
                             r-contrast
                             r-cluster
                             r-changepoint))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CONFESS")
    (synopsis "Cell OrderiNg by FluorEScence Signal")
    (description "Single Cell Fluidigm Spot Detector.")
    (license license:gpl2)))

(define-public r-condiments
  (package
    (name "r-condiments")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "condiments" version))
       (sha256
        (base32 "0zcvb4893yq35wfqr29bqm40lqmdcp5gc39y9cly8nqhya8jbq4k"))))
    (properties `((upstream-name . "condiments")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-trajectoryutils
                             r-summarizedexperiment
                             r-slingshot
                             r-singlecellexperiment
                             r-rann
                             r-pbapply
                             r-mgcv
                             r-matrixstats
                             r-magrittr
                             r-igraph
                             r-ecume
                             r-dplyr
                             r-distinct
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://hectorrdb.github.io/condiments/index.html")
    (synopsis "Differential Topology, Progression and Differentiation")
    (description
     "This package encapsulate many functions to conduct a differential topology
analysis.  It focuses on analyzing an omic dataset with multiple conditions.
While the package is mostly geared toward @code{scRNASeq}, it does not place any
restriction on the actual input format.")
    (license license:expat)))

(define-public r-concordexr
  (package
    (name "r-concordexr")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "concordexR" version))
       (sha256
        (base32 "0zkydxybif94p5ka8wrbwbgbbp01n3c15lff62nraldz0yhvs5jn"))))
    (properties `((upstream-name . "concordexR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-spatialexperiment
                             r-sparsematrixstats
                             r-singlecellexperiment
                             r-rlang
                             r-purrr
                             r-matrix
                             r-delayedarray
                             r-cli
                             r-bluster
                             r-biocparallel
                             r-biocneighbors
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/pachterlab/concordexR")
    (synopsis "Identify Spatial Homogeneous Regions with concordex")
    (description
     "Spatial homogeneous regions (SHRs) in tissues are domains that are homogenous
with respect to cell type composition.  We present a method for identifying SHRs
using spatial transcriptomics data, and demonstrate that it is efficient and
effective at finding SHRs for a wide variety of tissue types.  concordex relies
on analysis of k-nearest-neighbor (@code{kNN}) graphs.  The tool is also useful
for analysis of non-spatial transcriptomics data, and can elucidate the extent
of concordance between partitions of cells derived from clustering algorithms,
and transcriptomic similarity as represented in @code{kNN} graphs.")
    (license license:artistic2.0)))

(define-public r-compspot
  (package
    (name "r-compspot")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "compSPOT" version))
       (sha256
        (base32 "1p8xv3wyqdbrhhyan1ydz9nqfc4j31bay6fhbp6sannbz48kr9xc"))))
    (properties `((upstream-name . "compSPOT")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-plotly
                             r-magrittr
                             r-gridextra
                             r-ggpubr
                             r-ggplot2
                             r-data-table))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/sydney-grant/compSPOT")
    (synopsis
     "compSPOT: Tool for identifying and comparing significantly mutated genomic hotspots")
    (description
     "Clonal cell groups share common mutations within cancer, precancer, and even
clinically normal appearing tissues.  The frequency and location of these
mutations may predict prognosis and cancer risk.  It has also been well
established that certain genomic regions have increased sensitivity to acquiring
mutations.  Mutation-sensitive genomic regions may therefore serve as markers
for predicting cancer risk.  This package contains multiple functions to
establish significantly mutated hotspots, compare hotspot mutation burden
between samples, and perform exploratory data analysis of the correlation
between hotspot mutation burden and personal risk factors for cancer, such as
age, gender, and history of carcinogen exposure.  This package allows users to
identify robust genomic markers to help establish cancer risk.")
    (license license:artistic2.0)))

(define-public r-compran
  (package
    (name "r-compran")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ComPrAn" version))
       (sha256
        (base32 "1xd9jdzvs7gz04daw9gl9dw0k8kcb2k90p7i3azwqgia0j7zp4hj"))))
    (properties `((upstream-name . "ComPrAn")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-venndiagram
                             r-tidyr
                             r-tibble
                             r-stringr
                             r-shinyjs
                             r-shinydashboard
                             r-shiny
                             r-scales
                             r-rlang
                             r-rio
                             r-rcolorbrewer
                             r-purrr
                             r-magrittr
                             r-ggplot2
                             r-forcats
                             r-dt
                             r-dplyr
                             r-data-table))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ComPrAn")
    (synopsis "Complexome Profiling Analysis package")
    (description
     "This package is for analysis of SILAC labeled complexome profiling data.  It
uses peptide table in tab-delimited format as an input and produces ready-to-use
tables and plots.")
    (license license:expat)))

(define-public r-compounddb
  (package
    (name "r-compounddb")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CompoundDb" version))
       (sha256
        (base32 "1yzqcqww4mysxaxlqiwcyvv18qwfnfig59jrv7x6p7dls5s8r88d"))))
    (properties `((upstream-name . "CompoundDb")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xml2
                             r-tibble
                             r-spectra
                             r-s4vectors
                             r-rsqlite
                             r-protgenerics
                             r-mscoreutils
                             r-metabocoreutils
                             r-jsonlite
                             r-iranges
                             r-dplyr
                             r-dbplyr
                             r-dbi
                             r-chemminer
                             r-biocparallel
                             r-biocgenerics
                             r-biobase
                             r-annotationfilter))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/RforMassSpectrometry/CompoundDb")
    (synopsis "Creating and Using (Chemical) Compound Annotation Databases")
    (description
     "@code{CompoundDb} provides functionality to create and use (chemical) compound
annotation databases from a variety of different sources such as
@code{LipidMaps}, HMDB, @code{ChEBI} or @code{MassBank}.  The database format
allows to store in addition MS/MS spectra along with compound information.  The
package provides also a backend for Bioconductor's Spectra package and allows
thus to match experimetal MS/MS spectra against MS/MS spectra in the database.
Databases can be stored in SQLite format and are thus portable.")
    (license license:artistic2.0)))

(define-public r-compepitools
  (package
    (name "r-compepitools")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "compEpiTools" version))
       (sha256
        (base32 "1kbz2y5p6rv9nn8c91isns4ah9mpvhncxjwb0950x60mg3jys0s6"))))
    (properties `((upstream-name . "compEpiTools")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xvector
                             r-topgo
                             r-s4vectors
                             r-rsamtools
                             r-methylpipe
                             r-iranges
                             r-gplots
                             r-go-db
                             r-genomicranges
                             r-genomicfeatures
                             r-genomeinfodb
                             r-biostrings
                             r-biocgenerics
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/compEpiTools")
    (synopsis "Tools for computational epigenomics")
    (description
     "This package provides tools for computational epigenomics developed for the
analysis, integration and simultaneous visualization of various (epi)genomics
data types across multiple genomic regions in multiple samples.")
    (license (list license:gpl2+ license:gpl3+))))

(define-public r-compcoder
  (package
    (name "r-compcoder")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "compcodeR" version))
       (sha256
        (base32 "17l3ax2b0rapdi4p12vy5fzy14img2dij0sq8szvadvqgsgzd4p2"))))
    (properties `((upstream-name . "compcodeR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vioplot
                             r-stringr
                             r-sm
                             r-shinydashboard
                             r-shiny
                             r-rocr
                             r-rmarkdown
                             r-phylolm
                             r-modeest
                             r-matrixstats
                             r-mass
                             r-markdown
                             r-limma
                             r-lattice
                             r-knitr
                             r-kernsmooth
                             r-gtools
                             r-gplots
                             r-ggplot2
                             r-edger
                             r-catools
                             r-ape))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/csoneson/compcodeR")
    (synopsis
     "RNAseq data simulation, differential expression analysis and performance comparison of differential expression methods")
    (description
     "This package provides extensive functionality for comparing results obtained by
different methods for differential expression analysis of RNAseq data.  It also
contains functions for simulating count data.  Finally, it provides convenient
interfaces to several packages for performing the differential expression
analysis.  These can also be used as templates for setting up and running a
user-defined differential analysis workflow within the framework of the package.")
    (license license:gpl2+)))

(define-public r-compass
  (package
    (name "r-compass")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COMPASS" version))
       (sha256
        (base32 "1pnfyyfjrsalc4ilaxbi566rni6yjhgz1ha5n15vz485rwblvp8j"))))
    (properties `((upstream-name . "COMPASS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-tidyr
                             r-scales
                             r-rmarkdown
                             r-rlang
                             r-reshape2
                             r-rcpp
                             r-rcolorbrewer
                             r-plyr
                             r-pdist
                             r-magrittr
                             r-knitr
                             r-foreach
                             r-dplyr
                             r-data-table
                             r-coda
                             r-clue
                             r-biocstyle
                             r-abind))
    (native-inputs (list r-knitr esbuild))
    (home-page "https://bioconductor.org/packages/COMPASS")
    (synopsis "Combinatorial Polyfunctionality Analysis of Single Cells")
    (description
     "COMPASS is a statistical framework that enables unbiased analysis of
antigen-specific T-cell subsets.  COMPASS uses a Bayesian hierarchical framework
to model all observed cell-subsets and select the most likely to be
antigen-specific while regularizing the small cell counts that often arise in
multi-parameter space.  The model provides a posterior probability of
specificity for each cell subset and each sample, which can be used to profile a
subject's immune response to external stimuli such as infection or vaccination.")
    (license license:artistic2.0)))

(define-public r-comethdmr
  (package
    (name "r-comethdmr")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "coMethDMR" version))
       (sha256
        (base32 "0wmrfrw5ivyqnkqi6phzzb7jmqnpqx111ssrvlyd8gczd688ngx1"))))
    (properties `((upstream-name . "coMethDMR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-lmertest
                             r-iranges
                             r-genomicranges
                             r-experimenthub
                             r-bumphunter
                             r-biocparallel
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/TransBioInfoLab/coMethDMR")
    (synopsis
     "Accurate identification of co-methylated and differentially methylated regions in epigenome-wide association studies")
    (description
     "@code{coMethDMR} identifies genomic regions associated with continuous
phenotypes by optimally leverages covariations among @code{CpGs} within
predefined genomic regions.  Instead of testing all @code{CpGs} within a genomic
region, @code{coMethDMR} carries out an additional step that selects
co-methylated sub-regions first without using any outcome information.  Next,
@code{coMethDMR} tests association between methylation within the sub-region and
continuous phenotype using a random coefficient mixed effects model, which
models both variations between @code{CpG} sites within the region and
differential methylation simultaneously.")
    (license license:gpl3)))

(define-public r-combi
  (package
    (name "r-combi")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "combi" version))
       (sha256
        (base32 "1i0x0w2ri80vm92wnxq5wvs7paq02k4h36f8nqw9mjk8gfqbp9ir"))))
    (properties `((upstream-name . "combi")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vegan
                             r-tensor
                             r-summarizedexperiment
                             r-reshape2
                             r-phyloseq
                             r-nleqslv
                             r-matrix
                             r-limma
                             r-ggplot2
                             r-dbi
                             r-cobs
                             r-biobase
                             r-bb
                             r-alabama))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/combi")
    (synopsis "Compositional omics model based visual integration")
    (description
     "This explorative ordination method combines quasi-likelihood estimation,
compositional regression models and latent variable models for integrative
visualization of several omics datasets.  Both unconstrained and constrained
integration are available.  The results are shown as interpretable,
compositional multiplots.")
    (license license:gpl2)))

(define-public r-comapr
  (package
    (name "r-comapr")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "comapr" version))
       (sha256
        (base32 "0zfdylcwa4bcx65y6q04ya1v79l3dhajzbrybqz1nxi0lz9lgx5p"))))
    (properties `((upstream-name . "comapr")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-summarizedexperiment
                             r-scales
                             r-s4vectors
                             r-rlang
                             r-reshape2
                             r-rcolorbrewer
                             r-plyr
                             r-plotly
                             r-matrix
                             r-iranges
                             r-gviz
                             r-gridextra
                             r-ggplot2
                             r-genomicranges
                             r-genomeinfodb
                             r-foreach
                             r-dplyr
                             r-circlize
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/comapr")
    (synopsis "Crossover analysis and genetic map construction")
    (description
     "comapr detects crossover intervals for single gametes from their haplotype
states sequences and stores the crossovers in GRanges object.  The genetic
distances can then be calculated via the mapping functions using estimated
crossover rates for maker intervals.  Visualisation functions for plotting
interval-based genetic map or cumulative genetic distances are implemented,
which help reveal the variation of crossovers landscapes across the genome and
across individuals.")
    (license license:expat)))

(define-public r-colonca
  (package
    (name "r-colonca")
    (version "1.48.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "colonCA" version
                              'experiment))
       (sha256
        (base32 "1j4k0jnmcaabk568apk0yicy3k4ky1l0bxsm9pll1i6h7hxqy0pg"))))
    (properties `((upstream-name . "colonCA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/colonCA")
    (synopsis "exprSet for Alon et al. (1999) colon cancer data")
    (description "@code{exprSet} for Alon et al. (1999) colon cancer data.")
    (license license:lgpl2.0+)))

(define-public r-cola
  (package
    (name "r-cola")
    (version "2.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cola" version))
       (sha256
        (base32 "03w1rmk8b2lpjngad0jb7lk2yr28n2ss2lk0scis5c2i61flq6g4"))))
    (properties `((upstream-name . "cola")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xml2
                             r-skmeans
                             r-rcpp
                             r-rcolorbrewer
                             r-png
                             r-microbenchmark
                             r-mclust
                             r-matrixstats
                             r-markdown
                             r-knitr
                             r-irlba
                             r-impute
                             r-httr
                             r-globaloptions
                             r-getoptlong
                             r-foreach
                             r-eulerr
                             r-dorng
                             r-doparallel
                             r-digest
                             r-crayon
                             r-complexheatmap
                             r-cluster
                             r-clue
                             r-circlize
                             r-brew
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jokergoo/cola")
    (synopsis "Framework for Consensus Partitioning")
    (description
     "Subgroup classification is a basic task in genomic data analysis, especially for
gene expression and DNA methylation data analysis.  It can also be used to test
the agreement to known clinical annotations, or to test whether there exist
significant batch effects.  The cola package provides a general framework for
subgroup classification by consensus partitioning.  It has the following
features: 1.  It modularizes the consensus partitioning processes that various
methods can be easily integrated.  2.  It provides rich visualizations for
interpreting the results.  3.  It allows running multiple methods at the same
time and provides functionalities to straightforward compare results.  4.  It
provides a new method to extract features which are more efficient to separate
subgroups.  5.  It automatically generates detailed reports for the complete
analysis.  6.  It allows applying consensus partitioning in a hierarchical
manner.")
    (license license:expat)))

(define-public r-cohcapanno
  (package
    (name "r-cohcapanno")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COHCAPanno" version
                              'experiment))
       (sha256
        (base32 "068k6p4bl4w0fa81517bfsrv2p1yd915zl2qjjsnlyczb77c4gkm"))))
    (properties `((upstream-name . "COHCAPanno")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/COHCAPanno")
    (synopsis "Annotations for City of Hope CpG Island Analysis Pipeline")
    (description
     "This package provides genomic location, nearby @code{CpG} island and nearby gene
information for common Illumina methylation array platforms.")
    (license license:gpl3)))

(define-public r-cogps
  (package
    (name "r-cogps")
    (version "1.50.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "coGPS" version))
       (sha256
        (base32 "1wkhxp4682l3204v4pxidvjlxjc1iz45sz66cjyivl8ipizvf8zq"))))
    (properties `((upstream-name . "coGPS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/coGPS")
    (synopsis "cancer outlier Gene Profile Sets")
    (description
     "Gene Set Enrichment Analysis of P-value based statistics for outlier gene
detection in dataset merged from multiple studies.")
    (license license:gpl2)))

(define-public r-cogito
  (package
    (name "r-cogito")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "Cogito" version))
       (sha256
        (base32 "0q0572aiy1pma4sdpi1dbh0gd4dqqh7jfk5vlw89rkcvv5qvr9ks"))))
    (properties `((upstream-name . "Cogito")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-txdb-mmusculus-ucsc-mm9-knowngene
                             r-s4vectors
                             r-rmarkdown
                             r-magrittr
                             r-jsonlite
                             r-ggplot2
                             r-genomicranges
                             r-genomicfeatures
                             r-genomeinfodb
                             r-entropy
                             r-biocmanager
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/Cogito")
    (synopsis
     "Compare genomic intervals tool - Automated, complete, reproducible and clear report about genomic and epigenomic data sets")
    (description
     "Biological studies often consist of multiple conditions which are examined with
different laboratory set ups like RNA-sequencing or @code{ChIP-sequencing}.  To
get an overview about the whole resulting data set, Cogito provides an
automated, complete, reproducible and clear report about all samples and basic
comparisons between all different samples.  This report can be used as
documentation about the data set or as starting point for further custom
analysis.")
    (license license:lgpl3)))

(define-public r-cogeqc
  (package
    (name "r-cogeqc")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cogeqc" version))
       (sha256
        (base32 "1iw4rjpl9prrhw52radd119phkafvqcsq3in691c0pp3bzv3fkr0"))))
    (properties `((upstream-name . "cogeqc")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list))
    (propagated-inputs (list r-scales
                             r-rlang
                             r-reshape2
                             r-patchwork
                             r-jsonlite
                             r-igraph
                             r-ggtree
                             r-ggplot2
                             r-ggbeeswarm
                             r-biostrings))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/almeidasilvaf/cogeqc")
    (synopsis "Systematic quality checks on comparative genomics analyses")
    (description
     "cogeqc aims to facilitate systematic quality checks on standard comparative
genomics analyses to help researchers detect issues and select the most suitable
parameters for each data set.  cogeqc can be used to asses: i.  genome assembly
and annotation quality with BUSCOs and comparisons of statistics with publicly
available genomes on the NCBI; ii.  orthogroup inference using a protein
domain-based approach and; iii.  synteny detection using synteny network
properties.  There are also data visualization functions to explore QC summary
statistics.")
    (license license:gpl3)))

(define-public r-cogena
  (package
    (name "r-cogena")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cogena" version))
       (sha256
        (base32 "0wjpahn90lrcg64iglbfqbnwc7xk005dn101kqa75xpvmmv51fqc"))))
    (properties `((upstream-name . "cogena")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-stringr
                             r-reshape2
                             r-mclust
                             r-kohonen
                             r-gplots
                             r-ggplot2
                             r-foreach
                             r-fastcluster
                             r-dplyr
                             r-doparallel
                             r-devtools
                             r-corrplot
                             r-cluster
                             r-class
                             r-biwt
                             r-biobase
                             r-apcluster
                             r-amap))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/zhilongjia/cogena")
    (synopsis "co-expressed gene-set enrichment analysis")
    (description
     "cogena is a workflow for co-expressed gene-set enrichment analysis.  It aims to
discovery smaller scale, but highly correlated cellular events that may be of
great biological relevance.  A novel pipeline for drug discovery and drug
repositioning based on the cogena workflow is proposed.  Particularly, candidate
drugs can be predicted based on the gene expression of disease-related data, or
other similar drugs can be identified based on the gene expression of
drug-related data.  Moreover, the drug mode of action can be disclosed by the
associated pathway analysis.  In summary, cogena is a flexible workflow for
various gene set enrichment analysis for co-expressed genes, with a focus on
pathway/GO analysis and drug repositioning.")
    (license license:lgpl3)))

(define-public r-cogaps
  (package
    (name "r-cogaps")
    (version "3.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CoGAPS" version))
       (sha256
        (base32 "07p8cqqk10mkmkb4s5c1a53wc1d1ncjvwlbmjpbabmb8an71al7i"))))
    (properties `((upstream-name . "CoGAPS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-s4vectors
                             r-rhdf5
                             r-rcpp
                             r-rcolorbrewer
                             r-gplots
                             r-ggplot2
                             r-forcats
                             r-fgsea
                             r-dplyr
                             r-cluster
                             r-biocparallel
                             r-bh))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CoGAPS")
    (synopsis "Coordinated Gene Activity in Pattern Sets")
    (description
     "Coordinated Gene Activity in Pattern Sets (@code{CoGAPS}) implements a Bayesian
MCMC matrix factorization algorithm, GAPS, and links it to gene set statistic
methods to infer biological process activity.  It can be used to perform sparse
matrix factorization on any data, and when this data represents biomolecules, to
do gene set analysis.")
    (license license:bsd-3)))

(define-public r-codex
  (package
    (name "r-codex")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CODEX" version))
       (sha256
        (base32 "0zqpgiqhcjr04kff1qg0gihwds3kjdy3f2gj14yynfbnmxklrmz2"))))
    (properties `((upstream-name . "CODEX")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-iranges
                             r-genomeinfodb
                             r-bsgenome-hsapiens-ucsc-hg19
                             r-biostrings))
    (home-page "https://bioconductor.org/packages/CODEX")
    (synopsis
     "Normalization and Copy Number Variation Detection Method for Whole Exome Sequencing")
    (description
     "This package provides a normalization and copy number variation calling
procedure for whole exome DNA sequencing data.  CODEX relies on the availability
of multiple samples processed using the same sequencing pipeline for
normalization, and does not require matched controls.  The normalization model
in CODEX includes terms that specifically remove biases due to GC content, exon
length and targeting and amplification efficiency, and latent systemic
artifacts.  CODEX also includes a Poisson likelihood-based recursive
segmentation procedure that explicitly models the count-based exome sequencing
data.")
    (license license:gpl2)))

(define-public r-codelink
  (package
    (name "r-codelink")
    (version "1.74.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "codelink" version))
       (sha256
        (base32 "129avd4i14ym06nd1yw2njrlzjd8k8vc04g23f61z6g44al3faiv"))))
    (properties `((upstream-name . "codelink")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-limma r-biocgenerics r-biobase r-annotate))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/ddiez/codelink")
    (synopsis "Manipulation of Codelink microarray data")
    (description
     "This package facilitates reading, preprocessing and manipulating Codelink
microarray data.  The raw data must be exported as text file using the Codelink
software.")
    (license license:gpl2)))

(define-public r-cocoa
  (package
    (name "r-cocoa")
    (version "2.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "COCOA" version))
       (sha256
        (base32 "0ifjr7xkrilhyckm2xpq35565rznag05nripl7kb446vbqn5lc8s"))))
    (properties `((upstream-name . "COCOA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-simplecache
                             r-s4vectors
                             r-mira
                             r-iranges
                             r-ggplot2
                             r-genomicranges
                             r-fitdistrplus
                             r-data-table
                             r-complexheatmap
                             r-biocgenerics
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "http://code.databio.org/COCOA/")
    (synopsis "Coordinate Covariation Analysis")
    (description
     "COCOA is a method for understanding epigenetic variation among samples.  COCOA
can be used with epigenetic data that includes genomic coordinates and an
epigenetic signal, such as DNA methylation and chromatin accessibility data.  To
describe the method on a high level, COCOA quantifies inter-sample variation
with either a supervised or unsupervised technique then uses a database of
\"region sets\" to annotate the variation among samples.  A region set is a set of
genomic regions that share a biological annotation, for instance transcription
factor (TF) binding regions, histone modification regions, or open chromatin
regions.  COCOA can identify region sets that are associated with epigenetic
variation between samples and increase understanding of variation in your data.")
    (license license:gpl3)))

(define-public r-cocitestats
  (package
    (name "r-cocitestats")
    (version "1.78.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CoCiteStats" version))
       (sha256
        (base32 "0xjrwmjhpfp4nvcqrrzn14pars12argni9923l8v8jyrxwwhczkp"))))
    (properties `((upstream-name . "CoCiteStats")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/CoCiteStats")
    (synopsis "Different test statistics based on co-citation")
    (description
     "This package provides a collection of software tools for dealing with
co-citation data.")
    (license (license:fsdg-compatible "CPL"))))

(define-public r-cnvrd2
  (package
    (name "r-cnvrd2")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNVrd2" version))
       (sha256
        (base32 "192vdqq2zd58z7mq5izp3ga268q4a1a6ibszr34m54r836wscl2x"))))
    (properties `((upstream-name . "CNVrd2")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation
                             r-rsamtools
                             r-rjags
                             r-iranges
                             r-gridextra
                             r-ggplot2
                             r-dnacopy))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/hoangtn/CNVrd2")
    (synopsis
     "CNVrd2: a read depth-based method to detect and genotype complex common copy number variants from next generation sequencing data")
    (description
     "CNVrd2 uses next-generation sequencing data to measure human gene copy number
for multiple samples, indentify SNPs tagging copy number variants and detect
copy number polymorphic genomic regions.")
    (license license:gpl2)))

(define-public r-cnvranger
  (package
    (name "r-cnvranger")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNVRanger" version))
       (sha256
        (base32 "0gf8fsjizh7c0d9b44gri95nw4yv56lk5kqd6wspy09h0agjaymx"))))
    (properties `((upstream-name . "CNVRanger")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-snprelate
                             r-s4vectors
                             r-reshape2
                             r-rappdirs
                             r-raggedexperiment
                             r-qqman
                             r-plyr
                             r-limma
                             r-lattice
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-gdsfmt
                             r-gdsarray
                             r-edger
                             r-data-table
                             r-biocparallel
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CNVRanger")
    (synopsis
     "Summarization and expression/phenotype association of CNV ranges")
    (description
     "The CNVRanger package implements a comprehensive tool suite for CNV analysis.
This includes functionality for summarizing individual CNV calls across a
population, assessing overlap with functional genomic regions, and association
analysis with gene expression and quantitative phenotypes.")
    (license license:artistic2.0)))

(define-public r-cnvpanelizer
  (package
    (name "r-cnvpanelizer")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNVPanelizer" version))
       (sha256
        (base32 "0115ifqr5n9wx4f8kzsih9m6g9zgm8c8mzjfvikv0nfhzr8b28z4"))))
    (properties `((upstream-name . "CNVPanelizer")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-testthat
                             r-stringr
                             r-shinyjs
                             r-shinyfiles
                             r-shiny
                             r-s4vectors
                             r-rsamtools
                             r-reshape2
                             r-plyr
                             r-openxlsx
                             r-noiseq
                             r-iranges
                             r-gplots
                             r-ggplot2
                             r-genomicranges
                             r-genomeinfodb
                             r-foreach
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CNVPanelizer")
    (synopsis "Reliable CNV detection in targeted sequencing applications")
    (description
     "This package provides a method that allows for the use of a collection of
non-matched normal tissue samples.  Our approach uses a non-parametric bootstrap
subsampling of the available reference samples to estimate the distribution of
read counts from targeted sequencing.  As inspired by random forest, this is
combined with a procedure that subsamples the amplicons associated with each of
the targeted genes.  The obtained information allows us to reliably classify the
copy number aberrations on the gene level.")
    (license license:gpl3)))

(define-public r-cnvmetrics
  (package
    (name "r-cnvmetrics")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNVMetrics" version))
       (sha256
        (base32 "1mjjmwgi6zcfly3xgivpk94kigvhpv61kwp0ybm1qkbnw871p4nb"))))
    (properties `((upstream-name . "CNVMetrics")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rbeta2009
                             r-pheatmap
                             r-magrittr
                             r-iranges
                             r-gridextra
                             r-genomicranges
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/krasnitzlab/CNVMetrics")
    (synopsis "Copy Number Variant Metrics")
    (description
     "The CNVMetrics package calculates similarity metrics to facilitate copy number
variant comparison among samples and/or methods.  Similarity metrics can be
employed to compare CNV profiles of genetically unrelated samples as well as
those with a common genetic background.  Some metrics are based on the shared
amplified/deleted regions while other metrics rely on the level of
amplification/deletion.  The data type used as input is a plain text file
containing the genomic position of the copy number variations, as well as the
status and/or the log2 ratio values.  Finally, a visualization tool is provided
to explore resulting metrics.")
    (license license:artistic2.0)))

(define-public r-cnviz
  (package
    (name "r-cnviz")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNViz" version))
       (sha256
        (base32 "1clfk49abjq1vyyd0ab803jl9gd7ws9j6fydx8d1pxk85lksm7jl"))))
    (properties `((upstream-name . "CNViz")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-shiny
                             r-scales
                             r-plotly
                             r-magrittr
                             r-karyoploter
                             r-genomicranges
                             r-dt
                             r-dplyr
                             r-copynumberplots))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CNViz")
    (synopsis "Copy Number Visualization")
    (description
     "CNViz takes probe, gene, and segment-level log2 copy number ratios and launches
a Shiny app to visualize your sample's copy number profile.  You can also
integrate loss of heterozygosity (LOH) and single nucleotide variant (SNV) data.")
    (license license:artistic2.0)))

(define-public r-cnvgsadata
  (package
    (name "r-cnvgsadata")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cnvGSAdata" version
                              'experiment))
       (sha256
        (base32 "1irzc1irq93bfjcdh12q80k9fyl3rpmg28flb0kzs8b39scsm3v0"))))
    (properties `((upstream-name . "cnvGSAdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-cnvgsa))
    (home-page "https://bioconductor.org/packages/cnvGSAdata")
    (synopsis "Data used in the vignette of the cnvGSA package")
    (description
     "This package contains the data used in the vignette of the @code{cnvGSA}
package.")
    (license license:lgpl2.0+)))

(define-public r-cnvgsa
  (package
    (name "r-cnvgsa")
    (version "1.50.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cnvGSA" version))
       (sha256
        (base32 "1i86r9zfwqzpbxfxwdf0c7k1qnbmw37l74ysii03x625jjy33225"))))
    (properties `((upstream-name . "cnvGSA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-splitstackshape r-genomicranges r-foreach
                             r-doparallel r-brglm))
    (home-page "https://bioconductor.org/packages/cnvGSA")
    (synopsis "Gene Set Analysis of (Rare) Copy Number Variants")
    (description
     "This package is intended to facilitate gene-set association with rare CNVs in
case-control studies.")
    (license license:lgpl2.0+)))

(define-public r-cnvfilter
  (package
    (name "r-cnvfilter")
    (version "1.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNVfilteR" version))
       (sha256
        (base32 "1aibk5fcp2vxkw9ihrglfafk0pvnsg8r1prpdca806n5j52r2zfb"))))
    (properties `((upstream-name . "CNVfilteR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-variantannotation
                             r-summarizedexperiment
                             r-rsamtools
                             r-regioner
                             r-pracma
                             r-karyoploter
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-copynumberplots
                             r-biostrings
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jpuntomarcos/CNVfilteR")
    (synopsis
     "Identifies false positives of CNV calling tools by using SNV calls")
    (description
     "CN@code{VfilteR} identifies those CNVs that can be discarded by using the single
nucleotide variant (SNV) calls that are usually obtained in common NGS
pipelines.")
    (license license:artistic2.0)))

(define-public r-cntools
  (package
    (name "r-cntools")
    (version "1.62.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNTools" version))
       (sha256
        (base32 "0w4zyacyr8zbqi26qkrv7gk5ih0r1f4w5qmma1z0scwa1sxfgqcj"))))
    (properties `((upstream-name . "CNTools")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genefilter))
    (home-page "https://bioconductor.org/packages/CNTools")
    (synopsis
     "Convert segment data into a region by sample matrix to allow for other high level computational analyses")
    (description
     "This package provides tools to convert the output of segmentation analysis using
DNAcopy to a matrix structure with overlapping segments as rows and samples as
columns so that other computational analyses can be applied to segmented data.")
    (license license:lgpl2.0+)))

(define-public r-cnorode
  (package
    (name "r-cnorode")
    (version "1.48.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNORode" version))
       (sha256
        (base32 "1daxx83yli5qbf91yxlji6abb7v70s1fn0axh15w0ys9n57w7j93"))))
    (properties `((upstream-name . "CNORode")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genalg r-cellnoptr))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CNORode")
    (synopsis "ODE add-on to CellNOptR")
    (description
     "Logic based ordinary differential equation (ODE) add-on to @code{CellNOptR}.")
    (license license:gpl2)))

(define-public r-cnorfuzzy
  (package
    (name "r-cnorfuzzy")
    (version "1.48.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNORfuzzy" version))
       (sha256
        (base32 "1bsr5bqqs5ymjlb46g9f3v1kd8smfk6qwspr4g94swl1hxswx6dv"))))
    (properties `((upstream-name . "CNORfuzzy")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-nloptr r-cellnoptr))
    (home-page "https://bioconductor.org/packages/CNORfuzzy")
    (synopsis "Addon to CellNOptR: Fuzzy Logic")
    (description
     "This package is an extension to @code{CellNOptR}.  It contains additional
functionality needed to simulate and train a prior knowledge network to
experimental data using constrained fuzzy logic (@code{cFL}, rather than Boolean
logic as is the case in @code{CellNOptR}).  Additionally, this package will
contain functions to use for the compilation of multiple optimization results
(either Boolean or @code{cFL}).")
    (license license:gpl2)))

(define-public r-cnorfeeder
  (package
    (name "r-cnorfeeder")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNORfeeder" version))
       (sha256
        (base32 "0l47748si5fvlga8wxzxk4j47354k3y87b9y2br1f1njqz8z2ij0"))))
    (properties `((upstream-name . "CNORfeeder")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-graph r-cellnoptr))
    (home-page "https://bioconductor.org/packages/CNORfeeder")
    (synopsis "Integration of CellNOptR to add missing links")
    (description
     "This package integrates literature-constrained and data-driven methods to infer
signalling networks from perturbation experiments.  It permits to extends a
given network with links derived from the data via various inference methods and
uses information on physical interactions of proteins to guide and validate the
integration of links.")
    (license license:gpl3)))

(define-public r-cnordt
  (package
    (name "r-cnordt")
    (version "1.48.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNORdt" version))
       (sha256
        (base32 "0dv9vq2qcmjwacxjwisrnm95khqf9p6idrycwgr3zm0d1ci5rzd9"))))
    (properties `((upstream-name . "CNORdt")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-cellnoptr r-abind))
    (home-page "https://bioconductor.org/packages/CNORdt")
    (synopsis "Add-on to CellNOptR: Discretized time treatments")
    (description
     "This add-on to the package @code{CellNOptR} handles time-course data, as opposed
to steady state data in @code{CellNOptR}.  It scales the simulation step to
allow comparison and model fitting for time-course data.  Future versions will
optimize delays and strengths for each edge.")
    (license license:gpl2)))

(define-public r-cnanorm
  (package
    (name "r-cnanorm")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CNAnorm" version))
       (sha256
        (base32 "18w48lxif8xzfmi3kxi2diq80498kd3jjk0ckf5fz1cp8n82fslg"))))
    (properties `((upstream-name . "CNAnorm")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-dnacopy))
    (native-inputs (list gfortran))
    (home-page "http://www.r-project.org")
    (synopsis
     "normalization method for Copy Number Aberration in cancer samples")
    (description
     "This package performs ratio, GC content correction and normalization of data
obtained using low coverage (one read every 100-10,000 bp) high troughput
sequencing.  It performs a \"discrete\" normalization looking for the ploidy of
the genome.  It will also provide tumour content if at least two ploidy states
can be found.")
    (license license:gpl2)))

(define-public r-cn-mops
  (package
    (name "r-cn-mops")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cn.mops" version))
       (sha256
        (base32 "12dcxdvj7n8a24vmambb8ghk7mmgzbzjq1ssdx26znxz5g8149yr"))))
    (properties `((upstream-name . "cn.mops")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-biocgenerics
                             r-biobase))
    (home-page "http://www.bioinf.jku.at/software/cnmops/cnmops.html")
    (synopsis "cn.mops - Mixture of Poissons for CNV detection in NGS data")
    (description
     "cn.mops (Copy Number estimation by a Mixture Of @code{PoissonS}) is a data
processing pipeline for copy number variations and aberrations (CNVs and CNAs)
from next generation sequencing (NGS) data.  The package supplies functions to
convert BAM files into read count matrices or genomic ranges objects, which are
the input objects for cn.mops.  cn.mops models the depths of coverage across
samples at each genomic position.  Therefore, it does not suffer from read count
biases along chromosomes.  Using a Bayesian approach, cn.mops decomposes read
variations across samples into integer copy numbers and noise by its mixture
components and Poisson distributions, respectively.  cn.mops guarantees a low
FDR because wrong detections are indicated by high noise and filtered out.
cn.mops is very fast and written in C++.")
    (license license:lgpl2.0+)))

(define-public r-cn-farms
  (package
    (name "r-cn-farms")
    (version "1.54.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cn.farms" version))
       (sha256
        (base32 "1wcx1040z5b0x4ram1y2kllrm91sax2g7s76ww2nfrwx6m3bai6f"))))
    (properties `((upstream-name . "cn.farms")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-snow
                             r-preprocesscore
                             r-oligoclasses
                             r-oligo
                             r-lattice
                             r-ff
                             r-dnacopy
                             r-dbi
                             r-biobase
                             r-affxparser))
    (home-page "http://www.bioinf.jku.at/software/cnfarms/cnfarms.html")
    (synopsis "cn.FARMS - factor analysis for copy number estimation")
    (description
     "This package implements the cn.FARMS algorithm for copy number variation (CNV)
analysis.  cn.FARMS allows to analyze the most common Affymetrix (250K-SNP6.0)
array types, supports high-performance computing using snow and ff.")
    (license license:lgpl2.0+)))

(define-public r-cmapr
  (package
    (name "r-cmapr")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cmapR" version))
       (sha256
        (base32 "18wl5ncdjg8mvh33n3fwi41mi66gj4xmldjy8hvhh8ch0j7yj6dl"))))
    (properties `((upstream-name . "cmapR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-summarizedexperiment r-rhdf5 r-matrixstats
                             r-flowcore r-data-table))
    (native-inputs (list r-knitr esbuild))
    (home-page "https://github.com/cmap/cmapR")
    (synopsis "CMap Tools in R")
    (description
     "The Connectivity Map (CMap) is a massive resource of perturbational gene
expression profiles built by researchers at the Broad Institute and funded by
the NIH Library of Integrated Network-Based Cellular Signatures (LINCS) program.
 Please visit https://clue.io for more information.  The @code{cmapR} package
implements methods to parse, manipulate, and write common CMap data objects,
such as annotated matrices and collections of gene sets.")
    (license (license:fsdg-compatible "file://LICENSE"))))

(define-public r-cmap2data
  (package
    (name "r-cmap2data")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cMap2data" version
                              'experiment))
       (sha256
        (base32 "0a584zh6ykxbym6ns5v9ws3grndn49m6d5ah89qybrwmv6cxqgdy"))))
    (properties `((upstream-name . "cMap2data")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/cMap2data")
    (synopsis "Connectivity Map (version 2) Data")
    (description
     "Data package which provides default drug profiles for the @code{DrugVsDisease}
package as well as associated gene lists and data clusters used by the
@code{DrugVsDisease} package.")
    (license license:gpl3)))

(define-public r-cmap
  (package
    (name "r-cmap")
    (version "1.15.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cMAP" version
                              'annotation))
       (sha256
        (base32 "0pzizm27rgcaic7wsh52z30v1jwarmz4cwh1mksbygp63k54mwiv"))))
    (properties `((upstream-name . "cMAP")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/cMAP")
    (synopsis "data package containing annotation data for cMAP")
    (description
     "Annotation data file for @code{cMAP} assembled using data from public data
repositories.")
    (license license:lgpl2.0+)))

(define-public r-cma
  (package
    (name "r-cma")
    (version "1.64.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CMA" version))
       (sha256
        (base32 "0v7yzm8vfb2i2irg55rbhcm66ila2lcwkgxxcqqfpw2h4hqwx0v9"))))
    (properties `((upstream-name . "CMA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/CMA")
    (synopsis "Synthesis of microarray-based classification")
    (description
     "This package provides a comprehensive collection of various microarray-based
classification algorithms both from Machine Learning and Statistics.  Variable
Selection, Hyperparameter tuning, Evaluation and Comparison can be performed
combined or stepwise in a user-friendly environment.")
    (license license:gpl2+)))

(define-public r-clustirr
  (package
    (name "r-clustirr")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClustIRR" version))
       (sha256
        (base32 "04jhi80zjq7km5nhbs6931bsc366a096mccyk1v4yyqs7m9xwiqx"))))
    (properties `((upstream-name . "ClustIRR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-visnetwork
                             r-stringdist
                             r-stanheaders
                             r-rstantools
                             r-rstan
                             r-reshape2
                             r-rcppparallel
                             r-rcppeigen
                             r-rcpp
                             r-pwalign
                             r-igraph
                             r-future-apply
                             r-future
                             r-blaster
                             r-bh))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/snaketron/ClustIRR")
    (synopsis "Clustering of immune receptor repertoires")
    (description
     "@code{ClustIRR} analyzes repertoires of B- and T-cell receptors.  It starts by
identifying communities of immune receptors with similar specificities, based on
the sequences of their complementarity-determining regions (CDRs).  Next, it
employs a Bayesian probabilistic models to quantify differential community
occupancy (DCO) between repertoires, allowing the identification of expanding or
contracting communities in response to e.g. infection or cancer treatment.")
    (license (license:fsdg-compatible "GPL-3 + file LICENSE"))))

(define-public r-clustifyrdatahub
  (package
    (name "r-clustifyrdatahub")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clustifyrdatahub" version
                              'experiment))
       (sha256
        (base32 "1k2ihpw496zliycpa0wblcx9f53nx87ircf975p6dm7w54i0anqx"))))
    (properties `((upstream-name . "clustifyrdatahub")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://rnabioco.github.io/clustifyrdatahub/")
    (synopsis "External data sets for clustifyr in ExperimentHub")
    (description
     "References made from external single-cell @code{mRNA} sequencing data sets,
stored as average gene expression matrices.  For use with clustifyr
<https://bioconductor.org/packages/clustifyr> to assign cell type identities.")
    (license license:expat)))

(define-public r-clustifyr
  (package
    (name "r-clustifyr")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clustifyr" version))
       (sha256
        (base32 "1lx9ikdd1m2lgkwx68h4myy3vf0xsws05s3kkdsan30rq760d2vd"))))
    (properties `((upstream-name . "clustifyr")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-stringr
                             r-singlecellexperiment
                             r-seuratobject
                             r-scales
                             r-s4vectors
                             r-rlang
                             r-proxy
                             r-matrixstats
                             r-matrix
                             r-httr
                             r-ggplot2
                             r-fgsea
                             r-entropy
                             r-dplyr
                             r-cowplot))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/rnabioco/clustifyr")
    (synopsis "Classifier for Single-cell RNA-seq Using Cell Clusters")
    (description
     "Package designed to aid in classifying cells from single-cell RNA sequencing
data using external reference data (e.g., bulk RNA-seq, @code{scRNA-seq},
microarray, gene lists).  A variety of correlation based methods and gene list
enrichment methods are provided to assist cell type assignment.")
    (license license:expat)))

(define-public r-clusterstab
  (package
    (name "r-clusterstab")
    (version "1.78.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clusterStab" version))
       (sha256
        (base32 "1mdxjbc3ygnfm86vcbkrbj7z7g0yx4z3caah4v0b9d1v7ckc33gh"))))
    (properties `((upstream-name . "clusterStab")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/clusterStab")
    (synopsis "Compute cluster stability scores for microarray data")
    (description
     "This package can be used to estimate the number of clusters in a set of
microarray data, as well as test the stability of these clusters.")
    (license license:artistic2.0)))

(define-public r-clustersignificance
  (package
    (name "r-clustersignificance")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClusterSignificance" version))
       (sha256
        (base32 "0fjxr3pd5wh1k1agrnnl6gwmwqzs4qfncvflf0k2ivrzzcc8ys0a"))))
    (properties `((upstream-name . "ClusterSignificance")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-scatterplot3d r-rcolorbrewer r-princurve
                             r-pracma))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jasonserviss/ClusterSignificance/")
    (synopsis
     "The ClusterSignificance package provides tools to assess if class clusters in dimensionality reduced data representations have a separation different from permuted data")
    (description
     "The @code{ClusterSignificance} package provides tools to assess if class
clusters in dimensionality reduced data representations have a separation
different from permuted data.  The term class clusters here refers to, clusters
of points representing known classes in the data.  This is particularly useful
to determine if a subset of the variables, e.g. genes in a specific pathway,
alone can separate samples into these established classes.
@code{ClusterSignificance} accomplishes this by, projecting all points onto a
one dimensional line.  Cluster separations are then scored and the probability
of the seen separation being due to chance is evaluated using a permutation
method.")
    (license license:gpl3)))

(define-public r-clusterseq
  (package
    (name "r-clusterseq")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clusterSeq" version))
       (sha256
        (base32 "12pzjfazagfx3k4dvc2hcljr50skyrshpzp9n0rlavgcq5x0b4c8"))))
    (properties `((upstream-name . "clusterSeq")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biocparallel r-biocgenerics r-bayseq))
    (home-page "https://github.com/samgg/clusterSeq")
    (synopsis
     "Clustering of high-throughput sequencing data by identifying co-expression patterns")
    (description
     "Identification of clusters of co-expressed genes based on their expression
across multiple (replicated) biological samples.")
    (license license:gpl3)))

(define-public r-clusterjudge
  (package
    (name "r-clusterjudge")
    (version "1.28.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClusterJudge" version))
       (sha256
        (base32 "1544p82qyp2h380qsd490dbdk2lzbpla0khk4fd6pknfvsba4ljh"))))
    (properties `((upstream-name . "ClusterJudge")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-latticeextra r-lattice r-jsonlite r-infotheo
                             r-httr))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ClusterJudge")
    (synopsis "Judging Quality of Clustering Methods using Mutual Information")
    (description
     "@code{ClusterJudge} implements the functions, examples and other software
published as an algorithm by Gibbons, FD and Roth FP. The article is called
\"Judging the Quality of Gene Expression-Based Clustering Methods Using Gene
Annotation\" and it appeared in Genome Research, vol.  12, pp1574-1581 (2002).
See package?@code{ClusterJudge} for an overview.")
    (license license:artistic2.0)))

(define-public r-clusterfoldsimilarity
  (package
    (name "r-clusterfoldsimilarity")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClusterFoldSimilarity" version))
       (sha256
        (base32 "1wm7gdf56igi3xv8wk4cvjkgq7y2rm31bnlw115yg6gnw3qvj16z"))))
    (properties `((upstream-name . "ClusterFoldSimilarity")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-singlecellexperiment
                             r-seuratobject
                             r-seurat
                             r-scales
                             r-reshape2
                             r-matrix
                             r-igraph
                             r-ggplot2
                             r-ggdendro
                             r-dplyr
                             r-cowplot
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ClusterFoldSimilarity")
    (synopsis
     "Calculate similarity of clusters from different single cell samples using foldchanges")
    (description
     "This package calculates a similarity coefficient using the fold changes of
shared features (e.g. genes) among clusters of different
samples/batches/datasets.  The similarity coefficient is calculated using the
dot-product (Hadamard product) of every pairwise combination of Fold Changes
between a source cluster i of sample/dataset n and all the target clusters j in
sample/dataset m.")
    (license license:artistic2.0)))

(define-public r-clustcomp
  (package
    (name "r-clustcomp")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clustComp" version))
       (sha256
        (base32 "14fslhpqslxhckanf6qv5lrzd6k3qxlfpm005yrvdl6vp8fqclgg"))))
    (properties `((upstream-name . "clustComp")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-sm))
    (home-page "https://bioconductor.org/packages/clustComp")
    (synopsis "Clustering Comparison Package")
    (description
     "@code{clustComp} is a package that implements several techniques for the
comparison and visualisation of relationships between different clustering
results, either flat versus flat or hierarchical versus flat.  These
relationships among clusters are displayed using a weighted bi-graph, in which
the nodes represent the clusters and the edges connect pairs of nodes with
non-empty intersection; the weight of each edge is the number of elements in
that intersection and is displayed through the edge thickness.  The best layout
of the bi-graph is provided by the barycentre algorithm, which minimises the
weighted number of crossings.  In the case of comparing a hierarchical and a
non-hierarchical clustering, the dendrogram is pruned at different heights,
selected by exploring the tree by depth-first search, starting at the root.
Branches are decided to be split according to the value of a scoring function,
that can be based either on the aesthetics of the bi-graph or on the mutual
information between the hierarchical and the flat clusterings.  A mapping
between groups of clusters from each side is constructed with a greedy
algorithm, and can be additionally visualised.")
    (license license:gpl2+)))

(define-public r-clustall
  (package
    (name "r-clustall")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClustAll" version))
       (sha256
        (base32 "0nysladvhcdbvdchv09zn59r7ngiq1r2490wnxmd58swhmlfm48g"))))
    (properties `((upstream-name . "ClustAll")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rcolorbrewer
                             r-pbapply
                             r-networkd3
                             r-modeest
                             r-mice
                             r-ggplot2
                             r-fpc
                             r-foreach
                             r-flock
                             r-factominer
                             r-dplyr
                             r-dosnow
                             r-complexheatmap
                             r-clvalid
                             r-cluster
                             r-circlize
                             r-bigstatsr))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ClustAll")
    (synopsis
     "ClustAll: Data driven strategy to robustly identify stratification of patients within complex diseases")
    (description
     "Data driven strategy to find hidden groups of patients with complex diseases
using clinical data. @code{ClustAll} facilitates the unsupervised identification
of multiple robust stratifications. @code{ClustAll}, is able to overcome the
most common limitations found when dealing with clinical data (missing values,
correlated data, mixed data types).")
    (license license:gpl2)))

(define-public r-clumsiddata
  (package
    (name "r-clumsiddata")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CluMSIDdata" version
                              'experiment))
       (sha256
        (base32 "07q2qzky019f1vbnbhgb2vkqfgqwi1h2y0vssbw3z14ff5drx126"))))
    (properties `((upstream-name . "CluMSIDdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/CluMSIDdata")
    (synopsis "Data for the CluMSID package")
    (description
     "This package contains various LC-MS/MS and GC-MS data that is used in vignettes
and examples in the @code{CluMSID} package.")
    (license license:expat)))

(define-public r-clumsid
  (package
    (name "r-clumsid")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CluMSID" version))
       (sha256
        (base32 "0xsxcl6ck60v8lyh1kdrqrp1wcdnd4yhqyi8jky7ba23a3nl9ql4"))))
    (properties `((upstream-name . "CluMSID")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-sna
                             r-s4vectors
                             r-rcolorbrewer
                             r-plotly
                             r-network
                             r-mzr
                             r-msnbase
                             r-gplots
                             r-ggplot2
                             r-ggally
                             r-dbscan
                             r-biobase
                             r-ape))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/tdepke/CluMSID")
    (synopsis "Clustering of MS2 Spectra for Metabolite Identification")
    (description
     "@code{CluMSID} is a tool that aids the identification of features in untargeted
LC-MS/MS analysis by the use of MS2 spectra similarity and unsupervised
statistical methods.  It offers functions for a complete and customisable
workflow from raw data to visualisations and is interfaceable with the xmcs
family of preprocessing packages.")
    (license license:expat)))

(define-public r-clstutils
  (package
    (name "r-clstutils")
    (version "1.54.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clstutils" version))
       (sha256
        (base32 "05iv8zbma9r0fz7116xjv4nj76imfl3kdmp0vks8hwhdp18g3wi6"))))
    (properties `((upstream-name . "clstutils")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rsqlite r-rjson r-lattice r-clst r-ape))
    (home-page "https://bioconductor.org/packages/clstutils")
    (synopsis "Tools for performing taxonomic assignment")
    (description
     "This package provides tools for performing taxonomic assignment based on
phylogeny using pplacer and clst.")
    (license license:gpl3)))

(define-public r-clst
  (package
    (name "r-clst")
    (version "1.54.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clst" version))
       (sha256
        (base32 "0is27v6yx7nr95i268f4qx7jphki1hcwkzc02q3bzyf3za57f2kq"))))
    (properties `((upstream-name . "clst")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-roc r-lattice))
    (home-page "https://bioconductor.org/packages/clst")
    (synopsis "Classification by local similarity threshold")
    (description
     "Package for modified nearest-neighbor classification based on calculation of a
similarity threshold distinguishing within-group from between-group comparisons.")
    (license license:gpl3)))

(define-public r-clomial
  (package
    (name "r-clomial")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "Clomial" version))
       (sha256
        (base32 "1rcqdhrgdqlqg2g04nfbmc5r107v1k4vzfg58vlkad10a2cvvmj7"))))
    (properties `((upstream-name . "Clomial")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-permute r-matrixstats))
    (home-page "https://bioconductor.org/packages/Clomial")
    (synopsis "Infers clonal composition of a tumor")
    (description
     "Clomial fits binomial distributions to counts obtained from Next Gen Sequencing
data of multiple samples of the same tumor.  The trained parameters can be
interpreted to infer the clonal structure of the tumor.")
    (license license:gpl2+)))

(define-public r-cllmethylation
  (package
    (name "r-cllmethylation")
    (version "1.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CLLmethylation" version
                              'experiment))
       (sha256
        (base32 "111z7lwk1lic3j41cy6j1cq0ks5fi2gyj859laf4x4qahrkzap1b"))))
    (properties `((upstream-name . "CLLmethylation")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-summarizedexperiment r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CLLmethylation")
    (synopsis "Methylation data of primary CLL samples in PACE project")
    (description
     "The package includes DNA methylation data for the primary Chronic Lymphocytic
Leukemia samples included in the Primary Blood Cancer Encyclopedia (PACE)
project.  Raw data from the 450k DNA methylation arrays is stored in the
European Genome-Phenome Archive (EGA) under accession number EGAS0000100174.
For more information concerning the project please refer to the paper
\"Drug-perturbation-based stratification of blood cancer\" by Dietrich S, Oles M,
Lu J et al., J. Clin.  Invest. (2018) and R/Bioconductor package
@code{BloodCancerMultiOmics2017}.")
    (license license:lgpl2.0+)))

(define-public r-cll
  (package
    (name "r-cll")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CLL" version
                              'experiment))
       (sha256
        (base32 "0c893wrfbbwbpd2lv1y0f5m61dvs94s51b9gdbgyv6ihwqn858lf"))))
    (properties `((upstream-name . "CLL")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase r-affy))
    (home-page "https://bioconductor.org/packages/CLL")
    (synopsis "Package for CLL Gene Expression Data")
    (description
     "The CLL package contains the chronic lymphocytic leukemia (CLL) gene expression
data.  The CLL data had 24 samples that were either classified as progressive or
stable in regards to disease progression.  The data came from Dr. Sabina
Chiaretti at Division of Hematology, Department of Cellular Biotechnologies and
Hematology, University La Sapienza, Rome, Italy and Dr. Jerome Ritz at
Department of Medicine, Brigham and Women's Hospital, Harvard Medical School,
Boston, Massachusetts.")
    (license license:lgpl2.0+)))

(define-public r-cliquems
  (package
    (name "r-cliquems")
    (version "1.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cliqueMS" version))
       (sha256
        (base32 "01n3yvih4dwvwhv2rw0yv9bain0lbkws1pccnfv00prakhgli2f2"))))
    (properties `((upstream-name . "cliqueMS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xcms
                             r-slam
                             r-rcpparmadillo
                             r-rcpp
                             r-msnbase
                             r-matrixstats
                             r-igraph
                             r-coop
                             r-bh))
    (native-inputs (list r-knitr))
    (home-page "http://cliquems.seeslab.net")
    (synopsis
     "Annotation of Isotopes, Adducts and Fragmentation Adducts for in-Source LC/MS Metabolomics Data")
    (description
     "Annotates data from liquid chromatography coupled to mass spectrometry (LC/MS)
metabolomics experiments.  Based on a network algorithm (O.Senan, A. Aguilar-
Mogas, M. Navarro, O. Yanes, R.Guimerà and M. Sales-Pardo, Bioinformatics,
35(20), 2019), @code{CliqueMS} builds a weighted similarity network where nodes
are features and edges are weighted according to the similarity of this
features.  Then it searches for the most plausible division of the similarity
network into cliques (fully connected components).  Finally it annotates
metabolites within each clique, obtaining for each annotated metabolite the
neutral mass and their features, corresponding to isotopes, ionization adducts
and fragmentation adducts of that metabolite.")
    (license license:gpl2+)))

(define-public r-cliprofiler
  (package
    (name "r-cliprofiler")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cliProfiler" version))
       (sha256
        (base32 "183wlk9xq051n7i44g01xgapyzn0csdkbd767glvda2n7ap92chi"))))
    (properties `((upstream-name . "cliProfiler")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rtracklayer
                             r-ggplot2
                             r-genomicranges
                             r-dplyr
                             r-bsgenome
                             r-biostrings))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/Codezy99/cliProfiler")
    (synopsis "package for the CLIP data visualization")
    (description
     "An easy and fast way to visualize and profile the high-throughput IP data.  This
package generates the meta gene profile and other profiles.  These profiles
could provide valuable information for understanding the IP experiment results.")
    (license license:artistic2.0)))

(define-public r-clipper
  (package
    (name "r-clipper")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clipper" version))
       (sha256
        (base32 "1pfah7a461lgzrp7chxmddjyvzjh65drm5614b7g5graas62mx45"))))
    (properties `((upstream-name . "clipper")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rcpp
                             r-qpgraph
                             r-matrix
                             r-kegggraph
                             r-igraph
                             r-grbase
                             r-graph
                             r-corpcor
                             r-biobase))
    (home-page "https://bioconductor.org/packages/clipper")
    (synopsis "Gene Set Analysis Exploiting Pathway Topology")
    (description
     "This package implements topological gene set analysis using a two-step empirical
approach.  It exploits graph decomposition theory to create a junction tree and
reconstruct the most relevant signal path.  In the first step clipper selects
significant pathways according to statistical tests on the means and the
concentration matrices of the graphs derived from pathway topologies.  Then, it
\"clips\" the whole pathway identifying the signal paths having the greatest
association with a specific phenotype.")
    (license license:agpl3)))

(define-public r-clippda
  (package
    (name "r-clippda")
    (version "1.56.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clippda" version))
       (sha256
        (base32 "1c9ms94xfzq5954jphn11j2fc00kfbgg3ssv2pprij1qkmvs0i9y"))))
    (properties `((upstream-name . "clippda")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-statmod
                             r-scatterplot3d
                             r-rgl
                             r-limma
                             r-lattice
                             r-biobase))
    (home-page "http://www.cancerstudies.bham.ac.uk/crctu/CLIPPDA.shtml")
    (synopsis "package for the clinical proteomic profiling data analysis")
    (description
     "This package provides methods for the nalysis of data from clinical proteomic
profiling studies.  The focus is on the studies of human subjects, which are
often observational case-control by design and have technical replicates.  A
method for sample size determination for planning these studies is proposed.  It
incorporates routines for adjusting for the expected heterogeneities and
imbalances in the data and the within-sample replicate correlations.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-clevrvis
  (package
    (name "r-clevrvis")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clevRvis" version))
       (sha256
        (base32 "03sjrls4prn76svxmz901v00yljnd8h201s853am6mrkx8ir9p4p"))))
    (properties `((upstream-name . "clevRvis")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tibble
                             r-shinywidgets
                             r-shinyhelper
                             r-shinydashboard
                             r-shinycssloaders
                             r-shiny
                             r-readxl
                             r-readr
                             r-r-utils
                             r-purrr
                             r-patchwork
                             r-magrittr
                             r-igraph
                             r-htmlwidgets
                             r-ggraph
                             r-ggplot2
                             r-ggnewscale
                             r-ggiraph
                             r-dt
                             r-dplyr
                             r-cowplot
                             r-colourpicker
                             r-colorspace))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/sandmanns/clevRvis")
    (synopsis "Visualization Techniques for Clonal Evolution")
    (description
     "@code{clevRvis} provides a set of visualization techniques for clonal evolution.
 These include shark plots, dolphin plots and plaice plots.  Algorithms for time
point interpolation as well as therapy effect estimation are provided.
Phylogeny-aware color coding is implemented.  A shiny-app for generating plots
interactively is additionally provided.")
    (license license:lgpl3)))

(define-public r-cleaver
  (package
    (name "r-cleaver")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cleaver" version))
       (sha256
        (base32 "00za5jx7zdarcvrz822ivvp13l0jvfhwzlknwqc6260gym8j4hxy"))))
    (properties `((upstream-name . "cleaver")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors r-iranges r-biostrings))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/sgibb/cleaver/")
    (synopsis "Cleavage of Polypeptide Sequences")
    (description
     "In-silico cleavage of polypeptide sequences.  The cleavage rules are taken from:
http://web.expasy.org/peptide_cutter/peptidecutter_enzymes.html.")
    (license license:gpl3+)))

(define-public r-cleanuprnaseq
  (package
    (name "r-cleanuprnaseq")
    (version "1.0.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CleanUpRNAseq" version))
       (sha256
        (base32 "1ddqx7pzna1iqvl89n28pqgl3wbz3hailagj26iqcgwyirx46n4h"))))
    (properties `((upstream-name . "CleanUpRNAseq")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tximport
                             r-summarizedexperiment
                             r-rsubread
                             r-rsamtools
                             r-reshape2
                             r-rcolorbrewer
                             r-r6
                             r-qsmooth
                             r-pheatmap
                             r-limma
                             r-kernsmooth
                             r-ggrepel
                             r-ggplot2
                             r-genomicranges
                             r-genomeinfodb
                             r-ensembldb
                             r-edger
                             r-deseq2
                             r-bsgenome
                             r-biostrings
                             r-biocgenerics
                             r-annotationfilter))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CleanUpRNAseq")
    (synopsis "Detect and Correct Genomic DNA Contamination in RNA-seq Data")
    (description
     "RNA-seq data generated by some library preparation methods, such as
@code{rRNA-depletion-based} method and the SMART-seq method, might be
contaminated by genomic DNA (@code{gDNA}), if DNase I disgestion is not
performed properly during RNA preparation. @code{CleanUpRNAseq} is developed to
check if RNA-seq data is suffered from @code{gDNA} contamination.  If so, it can
perform correction for @code{gDNA} contamination and reduce false discovery rate
of differentially expressed genes.")
    (license license:gpl3)))

(define-public r-cleanupdtseq
  (package
    (name "r-cleanupdtseq")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cleanUpdTSeq" version))
       (sha256
        (base32 "0xhkhxdz9233yykzw32kipm86qysg7cgxrwf92320xay5y50hr4k"))))
    (properties `((upstream-name . "cleanUpdTSeq")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-seqinr
                             r-s4vectors
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-e1071
                             r-bsgenome-drerio-ucsc-danrer7
                             r-bsgenome
                             r-biostrings))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cleanUpdTSeq")
    (synopsis
     "cleanUpdTSeq cleans up artifacts from polyadenylation sites from oligo(dT)-mediated 3' end RNA sequending data")
    (description
     "This package implements a Naive Bayes classifier for accurately differentiating
true polyadenylation sites (@code{pA} sites) from oligo(@code{dT)-mediated} 3
end sequencing such as PAS-Seq, @code{PolyA-Seq} and RNA-Seq by filtering out
false polyadenylation sites, mainly due to oligo(@code{dT)-mediated} internal
priming during reverse transcription.  The classifer is highly accurate and
outperforms other heuristic methods.")
    (license license:gpl2)))

(define-public r-classifyr
  (package
    (name "r-classifyr")
    (version "3.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ClassifyR" version))
       (sha256
        (base32 "1pzpb8kmwfbia21bnbliry5m1vzpbqzh90mcfkq19lrim8k61y6b"))))
    (properties `((upstream-name . "ClassifyR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-survival
                             r-s4vectors
                             r-rlang
                             r-reshape2
                             r-ranger
                             r-multiassayexperiment
                             r-ggupset
                             r-ggpubr
                             r-ggplot2
                             r-generics
                             r-genefilter
                             r-dplyr
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://sydneybiox.github.io/ClassifyR/")
    (synopsis
     "framework for cross-validated classification problems, with applications to differential variability and differential distribution testing")
    (description
     "The software formalises a framework for classification and survival model
evaluation in R. There are four stages; Data transformation, feature selection,
model training, and prediction.  The requirements of variable types and variable
order are fixed, but specialised variables for functions can also be provided.
The framework is wrapped in a driver loop that reproducibly carries out a number
of cross-validation schemes.  Functions for differential mean, differential
variability, and differential distribution are included.  Additional functions
may be developed by the user, by creating an interface to the framework.")
    (license license:gpl3)))

(define-public r-clariomsrattranscriptcluster-db
  (package
    (name "r-clariomsrattranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomsrattranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "0i3d9m4li08mf4g8ic5zgja80vj0vw1865pfpj1kra6sb6r2irhy"))))
    (properties `((upstream-name . "clariomsrattranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-rn-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomsrattranscriptcluster.db")
    (synopsis
     "Affymetrix clariomsrat annotation data (chip clariomsrattranscriptcluster)")
    (description
     "Affymetrix clariomsrat annotation data (chip clariomsrattranscriptcluster)
assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomsrathttranscriptcluster-db
  (package
    (name "r-clariomsrathttranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomsrathttranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "1vc4za4drka441wrn85b4hc2m6dvk9r33w0fd0gf0zi5945samc7"))))
    (properties `((upstream-name . "clariomsrathttranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-rn-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomsrathttranscriptcluster.db")
    (synopsis
     "Affymetrix clariomsratht annotation data (chip clariomsrathttranscriptcluster)")
    (description
     "Affymetrix clariomsratht annotation data (chip clariomsrathttranscriptcluster)
assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomsmousetranscriptcluster-db
  (package
    (name "r-clariomsmousetranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomsmousetranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "116bjs6rmb56vphgs77hhn905yxa83gsydvyji1k9azm1kbz9rbc"))))
    (properties `((upstream-name . "clariomsmousetranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-mm-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomsmousetranscriptcluster.db")
    (synopsis
     "Affymetrix clariomsmouse annotation data (chip clariomsmousetranscriptcluster)")
    (description
     "Affymetrix clariomsmouse annotation data (chip clariomsmousetranscriptcluster)
assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomsmousehttranscriptcluster-db
  (package
    (name "r-clariomsmousehttranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomsmousehttranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "0h4bnixh55rxy7ng0psl4i3szw3drkqvk4rypv2pjb30k8b8x9ad"))))
    (properties `((upstream-name . "clariomsmousehttranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-mm-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomsmousehttranscriptcluster.db")
    (synopsis
     "Affymetrix clariomsmouseht annotation data (chip clariomsmousehttranscriptcluster)")
    (description
     "Affymetrix clariomsmouseht annotation data (chip
clariomsmousehttranscriptcluster) assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomshumantranscriptcluster-db
  (package
    (name "r-clariomshumantranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomshumantranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "0xnb0lw19bvwz75wdznmx0sj9gmjksry9kz7qx25w7msjzw1a56c"))))
    (properties `((upstream-name . "clariomshumantranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomshumantranscriptcluster.db")
    (synopsis
     "Affymetrix clariomshuman annotation data (chip clariomshumantranscriptcluster)")
    (description
     "Affymetrix clariomshuman annotation data (chip clariomshumantranscriptcluster)
assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomshumanhttranscriptcluster-db
  (package
    (name "r-clariomshumanhttranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomshumanhttranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "0ya6x2pqlzs7ssis2xa78yfrxs8zkyim3s8h8hbbnyhin6d1p4ia"))))
    (properties `((upstream-name . "clariomshumanhttranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomshumanhttranscriptcluster.db")
    (synopsis
     "Affymetrix clariomshumanht annotation data (chip clariomshumanhttranscriptcluster)")
    (description
     "Affymetrix clariomshumanht annotation data (chip
clariomshumanhttranscriptcluster) assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomdhumantranscriptcluster-db
  (package
    (name "r-clariomdhumantranscriptcluster-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomdhumantranscriptcluster.db" version
                              'annotation))
       (sha256
        (base32 "1qybsx6xj892pqlkv16cmc890shmm68hak4vcl1rd68i040pp75p"))))
    (properties `((upstream-name . "clariomdhumantranscriptcluster.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page
     "https://bioconductor.org/packages/clariomdhumantranscriptcluster.db")
    (synopsis
     "Affymetrix clariomdhuman annotation data (chip clariomdhumantranscriptcluster)")
    (description
     "Affymetrix clariomdhuman annotation data (chip clariomdhumantranscriptcluster)
assembled using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-clariomdhumanprobeset-db
  (package
    (name "r-clariomdhumanprobeset-db")
    (version "8.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "clariomdhumanprobeset.db" version
                              'annotation))
       (sha256
        (base32 "197s389bdzzqyvfrkrn6zqkm2d5s6rnays9hmsdrilxrm9gw32ag"))))
    (properties `((upstream-name . "clariomdhumanprobeset.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-hs-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/clariomdhumanprobeset.db")
    (synopsis
     "Affymetrix clariomdhuman annotation data (chip clariomdhumanprobeset)")
    (description
     "Affymetrix clariomdhuman annotation data (chip clariomdhumanprobeset) assembled
using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-citrusprobe
  (package
    (name "r-citrusprobe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "citrusprobe" version
                              'annotation))
       (sha256
        (base32 "0bf1wic136cxwgs4j13wsyqasnyvr0jw1hzg6qizndmy7g8hrb87"))))
    (properties `((upstream-name . "citrusprobe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/citrusprobe")
    (synopsis "Probe sequence data for microarrays of type citrus")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was Citrus\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-citruscdf
  (package
    (name "r-citruscdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "citruscdf" version
                              'annotation))
       (sha256
        (base32 "1326mj1xf3k4v5iyyn46whx24qfng0x3cv6rvckdr1ycc1v887dn"))))
    (properties `((upstream-name . "citruscdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/citruscdf")
    (synopsis "citruscdf")
    (description
     "This package provides a package containing an environment representing the
Citrus.cdf file.")
    (license license:lgpl2.0+)))

(define-public r-citefuse
  (package
    (name "r-citefuse")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CiteFuse" version))
       (sha256
        (base32 "0w12i1bshc1nflmc8d36skc9phkxiql7vg2r27c88z4bc85qpzz3"))))
    (properties `((upstream-name . "CiteFuse")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-uwot
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-scran
                             r-scales
                             r-s4vectors
                             r-rtsne
                             r-rlang
                             r-rhdf5
                             r-reshape2
                             r-rcpp
                             r-randomforest
                             r-pheatmap
                             r-mixtools
                             r-matrix
                             r-igraph
                             r-gridextra
                             r-ggridges
                             r-ggraph
                             r-ggplot2
                             r-dbscan
                             r-cowplot
                             r-compositions))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CiteFuse")
    (synopsis "CiteFuse: multi-modal analysis of CITE-seq data")
    (description
     "@code{CiteFuse} pacakage implements a suite of methods and tools for CITE-seq
data from pre-processing to integrative analytics, including doublet detection,
network-based modality integration, cell type clustering, differential RNA and
protein expression analysis, ADT evaluation, ligand-receptor interaction
analysis, and interactive web-based visualisation of the analyses.")
    (license license:gpl3)))

(define-public r-cispath
  (package
    (name "r-cispath")
    (version "1.46.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cisPath" version))
       (sha256
        (base32 "05vcrqanf4q3d8lqy04lch06zd6rdm58953sf9vprscd1ng49hcs"))))
    (properties `((upstream-name . "cisPath")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (native-inputs (list esbuild))
    (home-page "https://bioconductor.org/packages/cisPath")
    (synopsis
     "Visualization and management of the protein-protein interaction networks")
    (description
     "@code{cisPath} is an R package that uses web browsers to visualize and manage
protein-protein interaction networks.")
    (license license:gpl3+)))

(define-public r-circseqaligntk
  (package
    (name "r-circseqaligntk")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CircSeqAlignTk" version))
       (sha256
        (base32 "1iivgzlbq63f7f77c5j7ffr4s23qnq3rp37qsmdyysqkh6v46nc3"))))
    (properties `((upstream-name . "CircSeqAlignTk")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-shortread
                             r-shinyjs
                             r-shinyfiles
                             r-shiny
                             r-s4vectors
                             r-rsamtools
                             r-rlang
                             r-rhisat2
                             r-rbowtie2
                             r-r-utils
                             r-plotly
                             r-magrittr
                             r-iranges
                             r-htmltools
                             r-ggplot2
                             r-dplyr
                             r-biostrings
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jsun/CircSeqAlignTk")
    (synopsis
     "toolkit for end-to-end analysis of RNA-seq data for circular genomes")
    (description
     "@code{CircSeqAlignTk} is designed for end-to-end RNA-Seq data analysis of
circular genome sequences, from alignment to visualization.  It mainly targets
viroids which are composed of 246-401 nt circular RNAs.  In addition,
@code{CircSeqAlignTk} implements a tidy interface to generate synthetic
sequencing data that mimic real RNA-Seq data, allowing developers to evaluate
the performance of alignment tools and workflows.")
    (license license:expat)))

(define-public r-cindex
  (package
    (name "r-cindex")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CINdex" version))
       (sha256
        (base32 "0ks867899b912gxqdvyiwnvikiikfmfrd2d52ps5430avjhkipvp"))))
    (properties `((upstream-name . "CINdex")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-som
                             r-s4vectors
                             r-png
                             r-iranges
                             r-gridextra
                             r-gplots
                             r-genomicranges
                             r-genomeinfodb
                             r-dplyr
                             r-bitops))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CINdex")
    (synopsis "Chromosome Instability Index")
    (description
     "The CINdex package addresses important area of high-throughput genomic analysis.
 It allows the automated processing and analysis of the experimental DNA copy
number data generated by Affymetrix SNP 6.0 arrays or similar high throughput
technologies.  It calculates the chromosome instability (CIN) index that allows
to quantitatively characterize genome-wide DNA copy number alterations as a
measure of chromosomal instability.  This package calculates not only overall
genomic instability, but also instability in terms of copy number gains and
losses separately at the chromosome and cytoband level.")
    (license license:gpl2+)))

(define-public r-cimice
  (package
    (name "r-cimice")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CIMICE" version))
       (sha256
        (base32 "00c07gs5syzhq7nh288vmx2bbcl6qk5db5b4ianysdp7x4794jg2"))))
    (properties `((upstream-name . "CIMICE")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-visnetwork
                             r-tidyr
                             r-tidygraph
                             r-purrr
                             r-networkd3
                             r-matrix
                             r-maftools
                             r-igraph
                             r-glue
                             r-ggraph
                             r-ggplot2
                             r-ggcorrplot
                             r-expm
                             r-dplyr
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/redsnic/CIMICE")
    (synopsis "CIMICE-R: (Markov) Chain Method to Inferr Cancer Evolution")
    (description
     "CIMICE is a tool in the field of tumor phylogenetics and its goal is to build a
Markov Chain (called Cancer Progression Markov Chain, CPMC) in order to model
tumor subtypes evolution.  The input of CIMICE is a Mutational Matrix, so a
boolean matrix representing altered genes in a collection of samples.  These
samples are assumed to be obtained with single-cell DNA analysis techniques and
the tool is specifically written to use the peculiarities of this data for the
CMPC construction.")
    (license license:artistic2.0)))

(define-public r-chronos
  (package
    (name "r-chronos")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CHRONOS" version))
       (sha256
        (base32 "0q9r5xlk9ng85z3lyr3sk7fz31yzphakm70qh29n0qkn4hinnghr"))))
    (properties `((upstream-name . "CHRONOS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list pandoc))
    (propagated-inputs (list r-xml
                             r-rjava
                             r-rcurl
                             r-rbgl
                             r-openxlsx
                             r-igraph
                             r-graph
                             r-foreach
                             r-doparallel
                             r-circlize
                             r-biomart))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CHRONOS")
    (synopsis
     "CHRONOS: A time-varying method for microRNA-mediated sub-pathway enrichment analysis")
    (description
     "This package provides a package used for efficient unraveling of the inherent
dynamic properties of pathways. @code{MicroRNA-mediated} subpathway topologies
are extracted and evaluated by exploiting the temporal transition and the fold
change activity of the linked genes/@code{microRNAs}.")
    (license license:gpl2)))

(define-public r-chromscape
  (package
    (name "r-chromscape")
    (version "1.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChromSCape" version))
       (sha256
        (base32 "1x4zkpm84hg6shim0s8jpp060g4dm4fvicpx9nf5p66ydwy1q0nm"))))
    (properties `((upstream-name . "ChromSCape")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-viridis
                             r-umap
                             r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-stringr
                             r-stringdist
                             r-singlecellexperiment
                             r-shinywidgets
                             r-shinyjs
                             r-shinyhelper
                             r-shinyfiles
                             r-shinydashboardplus
                             r-shinydashboard
                             r-shinycssloaders
                             r-shiny
                             r-scran
                             r-scater
                             r-s4vectors
                             r-rtsne
                             r-rtracklayer
                             r-rsamtools
                             r-rlist
                             r-rcpp
                             r-qualv
                             r-qs
                             r-plotly
                             r-msigdbr
                             r-matrixtests
                             r-matrix
                             r-kableextra
                             r-jsonlite
                             r-irlba
                             r-iranges
                             r-gridextra
                             r-ggrepel
                             r-ggplot2
                             r-gggenes
                             r-genomicranges
                             r-fs
                             r-forcats
                             r-edger
                             r-dt
                             r-dplyr
                             r-delayedarray
                             r-coop
                             r-consensusclusterplus
                             r-colourpicker
                             r-colorramps
                             r-biocparallel
                             r-batchelor))
    (native-inputs (list r-knitr esbuild))
    (home-page "https://github.com/vallotlab/ChromSCape")
    (synopsis "Analysis of single-cell epigenomics datasets with a Shiny App")
    (description
     "@code{ChromSCape} - Chromatin landscape profiling for Single Cells - is a
ready-to-launch user-friendly Shiny Application for the analysis of single-cell
epigenomics datasets (@code{scChIP-seq}, @code{scATAC-seq}, @code{scCUT&Tag},
...) from aligned data to differential analysis & gene set enrichment analysis.
It is highly interactive, enables users to save their analysis and covers a wide
range of analytical steps: QC, preprocessing, filtering, batch correction,
dimensionality reduction, vizualisation, clustering, differential analysis and
gene set analysis.")
    (license license:gpl3)))

(define-public r-chromplot
  (package
    (name "r-chromplot")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chromPlot" version))
       (sha256
        (base32 "1x39p5lczqgri9cvb0r56x5klgj52aimv7qm9mm57g64a9kwf06w"))))
    (properties `((upstream-name . "chromPlot")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genomicranges r-biomart))
    (home-page "https://bioconductor.org/packages/chromPlot")
    (synopsis "Global visualization tool of genomic data")
    (description
     "Package designed to visualize genomic data along the chromosomes, where the
vertical chromosomes are sorted by number, with sex chromosomes at the end.")
    (license license:gpl2+)))

(define-public r-chromhmmdata
  (package
    (name "r-chromhmmdata")
    (version "0.99.2")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chromhmmData" version
                              'annotation))
       (sha256
        (base32 "13g6x7lzmkz9qv7yr6ps8gsgilgr048lc7y0y7xsfa9ws3n08fzj"))))
    (properties `((upstream-name . "chromhmmData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/chromhmmData")
    (synopsis "Chromosome Size, Coordinates and Anchor Files")
    (description
     "Annotation files of the formatted genomic annotation for @code{ChromHMM}.  Three
types of text files are included the chromosome sizes, region coordinates and
anchors specifying the transcription start and end sites.  The package includes
data for two versions of the genome of humans and mice.")
    (license license:gpl3)))

(define-public r-chromheatmap
  (package
    (name "r-chromheatmap")
    (version "1.60.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChromHeatMap" version))
       (sha256
        (base32 "0zmm3s4in1dswh82xhabaivcyn1lj5b0n0hric50mgws34z261bh"))))
    (properties `((upstream-name . "ChromHeatMap")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rtracklayer
                             r-iranges
                             r-genomicranges
                             r-biocgenerics
                             r-biobase
                             r-annotationdbi
                             r-annotate))
    (home-page "https://bioconductor.org/packages/ChromHeatMap")
    (synopsis "Heat map plotting by genome coordinate")
    (description
     "The @code{ChromHeatMap} package can be used to plot genome-wide data (e.g.
expression, CGH, SNP) along each strand of a given chromosome as a heat map.
The generated heat map can be used to interactively identify probes and genes of
interest.")
    (license license:artistic2.0)))

(define-public r-chromdraw
  (package
    (name "r-chromdraw")
    (version "2.36.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chromDraw" version))
       (sha256
        (base32 "0j8ilcn0dcqn9vcd256rb39pv1ql239xk2pqjzf293pfq8vs6wab"))))
    (properties `((upstream-name . "chromDraw")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rcpp r-genomicranges))
    (home-page "www.plantcytogenomics.org/chromDraw")
    (synopsis
     "chromDraw is a R package for drawing the schemes of karyotypes in the linear and circular fashion")
    (description
     "@code{ChromDraw} is a R package for drawing the schemes of karyotype(s) in the
linear and circular fashion.  It is possible to visualized cytogenetic marsk on
the chromosomes.  This tool has own input data format.  Input data can be
imported from the @code{GenomicRanges} data structure.  This package can
visualized the data in the BED file format.  Here is requirement on to the first
nine fields of the BED format.  Output files format are *.eps and *.svg.")
    (license license:gpl3)))

(define-public r-chopsticks
  (package
    (name "r-chopsticks")
    (version "1.72.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chopsticks" version))
       (sha256
        (base32 "0d7mgrdabakzml9c7kqs4sa4jh5l9ivji5c64j432lcx6qpxr5ag"))))
    (properties `((upstream-name . "chopsticks")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-survival))
    (home-page "http://outmodedbonsai.sourceforge.net/")
    (synopsis "The 'snp.matrix' and 'X.snp.matrix' Classes")
    (description
     "This package implements classes and methods for large-scale SNP association
studies.")
    (license license:gpl3)))

(define-public r-chipxpress
  (package
    (name "r-chipxpress")
    (version "1.50.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChIPXpress" version))
       (sha256
        (base32 "1whym24hvzaz0j60iblgwayw20lz5362mqxn2n1kmikrn4whz5gv"))))
    (properties `((upstream-name . "ChIPXpress")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-geoquery
                             r-frma
                             r-biobase
                             r-bigmemory
                             r-biganalytics
                             r-affy))
    (home-page "https://bioconductor.org/packages/ChIPXpress")
    (synopsis
     "ChIPXpress: enhanced transcription factor target gene identification from ChIP-seq and ChIP-chip data using publicly available gene expression profiles")
    (description
     "@code{ChIPXpress} takes as input predicted TF bound genes from @code{ChIPx} data
and uses a corresponding database of gene expression profiles downloaded from
NCBI GEO to rank the TF bound targets in order of which gene is most likely to
be functional TF target.")
    (license (license:fsdg-compatible "GPL(>=2)"))))

(define-public r-chipsim
  (package
    (name "r-chipsim")
    (version "1.60.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChIPsim" version))
       (sha256
        (base32 "1sj4d87y1pj56mhb4v0snk5pqd79pxb42d5kg10ijvmpygbz68nq"))))
    (properties `((upstream-name . "ChIPsim")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xvector r-shortread r-iranges r-biostrings))
    (home-page "https://bioconductor.org/packages/ChIPsim")
    (synopsis "Simulation of ChIP-seq experiments")
    (description
     "This package provides a general framework for the simulation of @code{ChIP-seq}
data.  Although currently focused on nucleosome positioning the package is
designed to support different types of experiments.")
    (license license:gpl2+)))

(define-public r-chipseqr
  (package
    (name "r-chipseqr")
    (version "1.60.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChIPseqR" version))
       (sha256
        (base32 "1zflq6b863iiixgrvrj68g6kfkfvl2aki2ivr4151wqf7yxr00i0"))))
    (properties `((upstream-name . "ChIPseqR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-timsac
                             r-shortread
                             r-s4vectors
                             r-iranges
                             r-hilbertvis
                             r-genomicranges
                             r-fbasics
                             r-biostrings
                             r-biocgenerics))
    (home-page "https://bioconductor.org/packages/ChIPseqR")
    (synopsis
     "Identifying Protein Binding Sites in High-Throughput Sequencing Data")
    (description
     "@code{ChIPseqR} identifies protein binding sites from @code{ChIP-seq} and
nucleosome positioning experiments.  The model used to describe binding events
was developed to locate nucleosomes but should flexible enough to handle other
types of experiments as well.")
    (license license:gpl2+)))

(define-public r-chipseqdbdata
  (package
    (name "r-chipseqdbdata")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chipseqDBData" version
                              'experiment))
       (sha256
        (base32 "1ygym612j46qgb3a16lnlldgriqqng9mws707h0yqh1r2szxqc34"))))
    (properties `((upstream-name . "chipseqDBData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-s4vectors r-rsamtools r-experimenthub
                             r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/chipseqDBData")
    (synopsis "Data for the chipseqDB Workflow")
    (description
     "Sorted and indexed BAM files for @code{ChIP-seq} libraries, for use in the
@code{chipseqDB} workflow.  BAM indices are also included.")
    (license (license:fsdg-compatible "CC BY 4.0"))))

(define-public r-chipqc
  (package
    (name "r-chipqc")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChIPQC" version))
       (sha256
        (base32 "01p2iahschwm3fy0sf1p79cm7f6z59a4y7akg99cmx44zwlzbj2x"))))
    (properties `((upstream-name . "ChIPQC")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-txdb-rnorvegicus-ucsc-rn4-ensgene
                             r-txdb-mmusculus-ucsc-mm9-knowngene
                             r-txdb-mmusculus-ucsc-mm10-knowngene
                             r-txdb-hsapiens-ucsc-hg19-knowngene
                             r-txdb-hsapiens-ucsc-hg18-knowngene
                             r-txdb-dmelanogaster-ucsc-dm3-ensgene
                             r-txdb-celegans-ucsc-ce6-ensgene
                             r-s4vectors
                             r-rsamtools
                             r-reshape2
                             r-nozzle-r1
                             r-iranges
                             r-gtools
                             r-ggplot2
                             r-genomicranges
                             r-genomicfeatures
                             r-genomicalignments
                             r-diffbind
                             r-chipseq
                             r-biocparallel
                             r-biocgenerics
                             r-biobase))
    (home-page "https://bioconductor.org/packages/ChIPQC")
    (synopsis "Quality metrics for ChIPseq data")
    (description "Quality metrics for @code{ChIPseq} data.")
    (license license:gpl3+)))

(define-public r-chipenrich-data
  (package
    (name "r-chipenrich-data")
    (version "2.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chipenrich.data" version
                              'experiment))
       (sha256
        (base32 "03jbpp8qxj9j3jglmcnmkp5b5ah96770g7qq7qij8hw222gw8wcg"))))
    (properties `((upstream-name . "chipenrich.data")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rtracklayer
                             r-readr
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-biocgenerics
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/chipenrich.data")
    (synopsis "Companion package to chipenrich")
    (description
     "Supporting data for the chipenrich package.  Includes pre-defined gene sets,
gene locus definitions, and mappability estimates.")
    (license license:gpl3)))

(define-public r-chipenrich
  (package
    (name "r-chipenrich")
    (version "2.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chipenrich" version))
       (sha256
        (base32 "1546jnwc44l0ahg90cmz7s26lcnzrzvhbmz4qswgccz57jzfd3yp"))))
    (properties `((upstream-name . "chipenrich")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-stringr
                             r-s4vectors
                             r-rtracklayer
                             r-rms
                             r-plyr
                             r-org-rn-eg-db
                             r-org-mm-eg-db
                             r-org-hs-eg-db
                             r-org-dr-eg-db
                             r-org-dm-eg-db
                             r-mgcv
                             r-mass
                             r-latticeextra
                             r-lattice
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-chipenrich-data
                             r-biocgenerics
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/chipenrich")
    (synopsis "Gene Set Enrichment For ChIP-seq Peak Data")
    (description
     "@code{ChIP-Enrich} and Poly-Enrich perform gene set enrichment testing using
peaks called from a @code{ChIP-seq} experiment.  The method empirically corrects
for confounding factors such as the length of genes, and the mappability of the
sequence surrounding genes.")
    (license license:gpl3)))

(define-public r-chipanalyser
  (package
    (name "r-chipanalyser")
    (version "1.28.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChIPanalyser" version))
       (sha256
        (base32 "15xm5xap4vws1ah0iidb8529x53kw5k3hvli7xlz5gfpicdfg3hh"))))
    (properties `((upstream-name . "ChIPanalyser")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rtracklayer
                             r-rocr
                             r-rcpproll
                             r-rcolorbrewer
                             r-iranges
                             r-genomicranges
                             r-genomeinfodb
                             r-bsgenome
                             r-biostrings
                             r-biocmanager))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ChIPanalyser")
    (synopsis "ChIPanalyser: Predicting Transcription Factor Binding Sites")
    (description
     "@code{ChIPanalyser} is a package to predict and understand TF binding by
utilizing a statistical thermodynamic model.  The model incorporates 4 main
factors thought to drive TF binding: Chromatin State, Binding energy, Number of
bound molecules and a scaling factor modulating TF binding affinity.  Taken
together, @code{ChIPanalyser} produces @code{ChIP-like} profiles that closely
mimic the patterns seens in real @code{ChIP-seq} data.")
    (license license:gpl3)))

(define-public r-chimphumanbraindata
  (package
    (name "r-chimphumanbraindata")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChimpHumanBrainData" version
                              'experiment))
       (sha256
        (base32 "1797yccghjn4ajrrs2gz1dkbg4bp4vilxs2nhj657rqqap0gxwpy"))))
    (properties `((upstream-name . "ChimpHumanBrainData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-statmod r-qvalue r-limma r-hexbin r-affy))
    (home-page "https://bioconductor.org/packages/ChimpHumanBrainData")
    (synopsis "Chimp and human brain data package")
    (description
     "This data package contains chimp and human brain data extracted from the
@code{ArrayExpress} accession E-AFMX-2.  Both human and chimp RNAs were run on
human hgu95av2 Affymetrix arrays.  It is a useful dataset for tutorials.")
    (license license:expat)))

(define-public r-chimp-db0
  (package
    (name "r-chimp-db0")
    (version "3.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chimp.db0" version
                              'annotation))
       (sha256
        (base32 "1jx6cl4l226yp3fjd1md034bdmif8yg0f1bjivsqbb6mxrvdypa1"))))
    (properties `((upstream-name . "chimp.db0")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/chimp.db0")
    (synopsis "Base Level Annotation databases for chimp")
    (description
     "Base annotation databases for chimp, intended ONLY to be used by
@code{AnnotationDbi} to produce regular annotation packages.")
    (license license:artistic2.0)))

(define-public r-chimeraviz
  (package
    (name "r-chimeraviz")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chimeraviz" version))
       (sha256
        (base32 "06ln5z1ckg573baxfmh33641i6a586j20ysr11jlklqp7151an05"))))
    (properties `((upstream-name . "chimeraviz")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list samtools bowtie))
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-rmarkdown
                             r-rgraphviz
                             r-rcolorbrewer
                             r-rcircos
                             r-plyr
                             r-org-mm-eg-db
                             r-org-hs-eg-db
                             r-magick
                             r-iranges
                             r-gviz
                             r-gtools
                             r-graph
                             r-genomicranges
                             r-genomicalignments
                             r-genomeinfodb
                             r-ensembldb
                             r-dt
                             r-dplyr
                             r-data-table
                             r-checkmate
                             r-biostrings
                             r-biocstyle
                             r-annotationfilter
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/stianlagstad/chimeraviz")
    (synopsis "Visualization tools for gene fusions")
    (description
     "chimeraviz manages data from fusion gene finders and provides useful
visualization tools.")
    (license license:artistic2.0)))

(define-public r-chihaya
  (package
    (name "r-chihaya")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chihaya" version))
       (sha256
        (base32 "0k52ym2x489k1k4d52jyd6jy4wnr7gd2p9n1pwfqbca3b91cmaj0"))))
    (properties `((upstream-name . "chihaya")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rhdf5lib
                             r-rhdf5
                             r-rcpp
                             r-matrix
                             r-hdf5array
                             r-delayedarray))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/ArtifactDB/chihaya-R")
    (synopsis "Save Delayed Operations to a HDF5 File")
    (description
     "Saves the delayed operations of a @code{DelayedArray} to a HDF5 file.  This
enables efficient recovery of the @code{DelayedArray's} contents in other
languages and analysis frameworks.")
    (license license:gpl3)))

(define-public r-chickenprobe
  (package
    (name "r-chickenprobe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chickenprobe" version
                              'annotation))
       (sha256
        (base32 "1fdsiwfyg7fwslrr7xs3gny7sw24bzg5k1fvlyzb1477sgj0pid3"))))
    (properties `((upstream-name . "chickenprobe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/chickenprobe")
    (synopsis "Probe sequence data for microarrays of type chicken")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was Chicken\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-chickencdf
  (package
    (name "r-chickencdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chickencdf" version
                              'annotation))
       (sha256
        (base32 "09hhim5s9xj7n2b5rhn1svf5qly2mn0rr2v2ls25hfzyrqcbxlz1"))))
    (properties `((upstream-name . "chickencdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/chickencdf")
    (synopsis "chickencdf")
    (description
     "This package provides a package containing an environment representing the
Chicken.cdf file.")
    (license license:lgpl2.0+)))

(define-public r-chicken-db0
  (package
    (name "r-chicken-db0")
    (version "3.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chicken.db0" version
                              'annotation))
       (sha256
        (base32 "0s8ag58f5xfcyvhx6cgg95dmkgdllvmz4s5vd24g4rn1l4ikvrw9"))))
    (properties `((upstream-name . "chicken.db0")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/chicken.db0")
    (synopsis "Base Level Annotation databases for chicken")
    (description
     "Base annotation databases for chicken, intended ONLY to be used by
@code{AnnotationDbi} to produce regular annotation packages.")
    (license license:artistic2.0)))

(define-public r-chicken-db
  (package
    (name "r-chicken-db")
    (version "3.13.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "chicken.db" version
                              'annotation))
       (sha256
        (base32 "0szb7sgassw10kzm8iz8h3fdbxm6v0kz95yb3a9icj2chi5d1m2i"))))
    (properties `((upstream-name . "chicken.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-gg-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/chicken.db")
    (synopsis
     "Affymetrix Affymetrix Chicken Array annotation data (chip chicken)")
    (description
     "Affymetrix Affymetrix Chicken Array annotation data (chip chicken) assembled
using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-chetah
  (package
    (name "r-chetah")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CHETAH" version))
       (sha256
        (base32 "1s4i9xmfksq1zb2r2jdmila0qc04f80pvwkzi9zxygsidx6d2n9g"))))
    (properties `((upstream-name . "CHETAH")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-shiny
                             r-s4vectors
                             r-reshape2
                             r-plotly
                             r-pheatmap
                             r-ggplot2
                             r-dendextend
                             r-cowplot
                             r-corrplot
                             r-biodist))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jdekanter/CHETAH")
    (synopsis "Fast and accurate scRNA-seq cell type identification")
    (description
     "CHETAH (CHaracterization of @code{cEll} Types Aided by Hierarchical
classification) is an accurate, selective and fast @code{scRNA-seq} classifier.
Classification is guided by a reference dataset, preferentially also a
@code{scRNA-seq} dataset.  By hierarchical clustering of the reference data,
CHETAH creates a classification tree that enables a step-wise, top-to-bottom
classification.  Using a novel stopping rule, CHETAH classifies the input cells
to the cell types of the references and to \"intermediate types\": more general
classifications that ended in an intermediate node of the tree.")
    (license (license:fsdg-compatible "file://LICENSE"))))

(define-public r-chemminedrugs
  (package
    (name "r-chemminedrugs")
    (version "1.0.2")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ChemmineDrugs" version
                              'annotation))
       (sha256
        (base32 "0l47ac6lkycmghra2cbcdcxcv47ari8xg6lxpzilvkf4n6ld6064"))))
    (properties `((upstream-name . "ChemmineDrugs")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rsqlite r-chemminer r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ChemmineDrugs")
    (synopsis "DrugBank data set")
    (description
     "An annotation package for use with @code{ChemmineR}.  This package includes data
from @code{DrugBank}.  DUD data can be downloaded using the @code{\"DUD()}\"
function in @code{ChemmineR}.")
    (license license:artistic2.0)))

(define-public r-cghregions
  (package
    (name "r-cghregions")
    (version "1.64.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CGHregions" version))
       (sha256
        (base32 "1zd41040m8k91c0gwqjivl8r8371f2rkhrlyaq61z0yx9qd0prig"))))
    (properties `((upstream-name . "CGHregions")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-cghbase r-biobase))
    (home-page "https://bioconductor.org/packages/CGHregions")
    (synopsis
     "Dimension Reduction for Array CGH Data with Minimal Information Loss")
    (description
     "Dimension Reduction for Array CGH Data with Minimal Information Loss.")
    (license (license:fsdg-compatible
              "GPL (http://www.gnu.org/copyleft/gpl.html)"))))

(define-public r-cghnormaliter
  (package
    (name "r-cghnormaliter")
    (version "1.60.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CGHnormaliter" version))
       (sha256
        (base32 "0zi9yj3clqaf7gz3y8b1zg6x5v7py77j73b31dy3kg370mw4qc95"))))
    (properties `((upstream-name . "CGHnormaliter")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-cghcall r-cghbase r-biobase))
    (home-page "https://bioconductor.org/packages/CGHnormaliter")
    (synopsis "Normalization of array CGH data with imbalanced aberrations")
    (description
     "Normalization and centralization of array comparative genomic hybridization
(@code{aCGH}) data.  The algorithm uses an iterative procedure that effectively
eliminates the influence of imbalanced copy numbers.  This leads to a more
reliable assessment of copy number alterations (CNAs).")
    (license license:gpl3+)))

(define-public r-cghmcr
  (package
    (name "r-cghmcr")
    (version "1.64.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cghMCR" version))
       (sha256
        (base32 "1cdmmzvwwx8msvsc9inmm34ssc6psgpwwh13l0lf6mcirqj9ar2f"))))
    (properties `((upstream-name . "cghMCR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-limma r-dnacopy r-cntools r-biocgenerics))
    (home-page "https://bioconductor.org/packages/cghMCR")
    (synopsis "Find chromosome regions showing common gains/losses")
    (description
     "This package provides functions to identify genomic regions of interests based
on segmented copy number data from multiple samples.")
    (license license:lgpl2.0+)))

(define-public r-cgen
  (package
    (name "r-cgen")
    (version "3.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CGEN" version))
       (sha256
        (base32 "1skk62ziygjlx23b4nl5nc9ryjq133w76cnhnv9hq9b09mj4g9nj"))))
    (properties `((upstream-name . "CGEN")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-survival r-mvtnorm))
    (native-inputs (list gfortran))
    (home-page "https://bioconductor.org/packages/CGEN")
    (synopsis
     "An R package for analysis of case-control studies in genetic epidemiology")
    (description
     "This is a package for analysis of case-control data in genetic epidemiology.  It
provides a set of statistical methods for evaluating gene-environment (or
gene-genes) interactions under multiplicative and additive risk models, with or
without assuming gene-environment (or gene-gene) independence in the underlying
population.")
    (license (license:fsdg-compatible "GPL-2 + file LICENSE"))))

(define-public r-cftoolsdata
  (package
    (name "r-cftoolsdata")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cfToolsData" version
                              'experiment))
       (sha256
        (base32 "1bxzihqz7miyriw8zvxc3ac6wgkqwa3h141x49y50mamhhcy8qy8"))))
    (properties `((upstream-name . "cfToolsData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jasminezhoulab/cfToolsData")
    (synopsis "ExperimentHub data for the cfTools package")
    (description
     "The @code{cfToolsData} package supplies the data for the @code{cfTools} package.
 It contains two pre-trained deep neural network (DNN) models for the
@code{cfSort} function.  Additionally, it includes the shape parameters of beta
distribution characterizing methylation markers associated with four tumor types
for the @code{CancerDetector} function, as well as the parameters characterizing
methylation markers specific to 29 primary human tissue types for the
@code{cfDeconvolve} function.")
    (license (license:fsdg-compatible "file://LICENSE"))))

(define-public r-cftools
  (package
    (name "r-cftools")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cfTools" version))
       (sha256
        (base32 "085nygijrdcf9fyw32i13wy4kjsp7nhwmjfk3149bvf38vln7n2z"))))
    (properties `((upstream-name . "cfTools")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rcpp
                             r-r-utils
                             r-genomicranges
                             r-cftoolsdata
                             r-bh
                             r-basilisk))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jasminezhoulab/cfTools")
    (synopsis "Informatics Tools for Cell-Free DNA Study")
    (description
     "The @code{cfTools} R package provides methods for cell-free DNA (@code{cfDNA})
methylation data analysis to facilitate @code{cfDNA-based} studies.  Given the
methylation sequencing data of a @code{cfDNA} sample, for each cancer marker or
tissue marker, we deconvolve the tumor-derived or tissue-specific reads from all
reads falling in the marker region.  Our read-based deconvolution algorithm
exploits the pervasiveness of DNA methylation for signal enhancement, therefore
can sensitively identify a trace amount of tumor-specific or tissue-specific
@code{cfDNA} in plasma. @code{cfTools} provides functions for (1) cancer
detection: sensitively detect tumor-derived @code{cfDNA} and estimate the
tumor-derived @code{cfDNA} fraction (tumor burden); (2) tissue deconvolution:
infer the tissue type composition and the @code{cfDNA} fraction of multiple
tissue types for a plasma @code{cfDNA} sample.  These functions can serve as
foundations for more advanced @code{cfDNA-based} studies, including cancer
diagnosis and disease monitoring.")
    (license (license:fsdg-compatible "file://LICENSE"))))

(define-public r-cfdnapro
  (package
    (name "r-cfdnapro")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cfDNAPro" version))
       (sha256
        (base32 "0aqwwabdw27wwq4a6is5cvrs6pr8mhmci5bamrrgap39hbmpjbjg"))))
    (properties `((upstream-name . "cfDNAPro")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tibble
                             r-stringr
                             r-rsamtools
                             r-rlang
                             r-quantmod
                             r-plyranges
                             r-magrittr
                             r-iranges
                             r-ggplot2
                             r-genomicranges
                             r-genomicalignments
                             r-genomeinfodb
                             r-dplyr
                             r-bsgenome-hsapiens-ucsc-hg38
                             r-bsgenome-hsapiens-ucsc-hg19
                             r-bsgenome-hsapiens-ncbi-grch38
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/hw538/cfDNAPro")
    (synopsis
     "cfDNAPro extracts and Visualises biological features from whole genome sequencing data of cell-free DNA")
    (description
     "@code{cfDNA} fragments carry important features for building cancer sample
classification ML models, such as fragment size, and fragment end motif etc.
Analyzing and visualizing fragment size metrics, as well as other biological
features in a curated, standardized, scalable, well-documented, and reproducible
way might be time intensive.  This package intends to resolve these problems and
simplify the process.  It offers two sets of functions for @code{cfDNA} feature
characterization and visualization.")
    (license license:gpl3)))

(define-public r-cfdnakit
  (package
    (name "r-cfdnakit")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cfdnakit" version))
       (sha256
        (base32 "1mzqgazfy1srjxj54d7df5kpbkj58blqal8l8adi4f6jx2z426p2"))))
    (properties `((upstream-name . "cfdnakit")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rsamtools
                             r-rlang
                             r-qdnaseq
                             r-pscbs
                             r-magrittr
                             r-iranges
                             r-ggplot2
                             r-genomicranges
                             r-genomeinfodb
                             r-dplyr
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cfdnakit")
    (synopsis
     "Fragmen-length analysis package from high-throughput sequencing of cell-free DNA (cfDNA)")
    (description
     "This package provides basic functions for analyzing shallow whole-genome
sequencing (~0.3X or more) of cell-free DNA (@code{cfDNA}).  The package
basically extracts the length of @code{cfDNA} fragments and aids the
vistualization of fragment-length information.  The package also extract
fragment-length information per non-overlapping fixed-sized bins and used it for
calculating @code{ctDNA} estimation score (CES).")
    (license license:gpl3)))

(define-public r-cfassay
  (package
    (name "r-cfassay")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CFAssay" version))
       (sha256
        (base32 "0ssph2s9cqzfccd628q4zqvra7lrlnbdq4bbk9vzdx3ahri5m4r9"))))
    (properties `((upstream-name . "CFAssay")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/CFAssay")
    (synopsis "Statistical analysis for the Colony Formation Assay")
    (description
     "The package provides functions for calculation of linear-quadratic cell survival
curves and for ANOVA of experimental 2-way designs along with the colony
formation assay.")
    (license license:lgpl2.0+)))

(define-public r-cexor
  (package
    (name "r-cexor")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CexoR" version))
       (sha256
        (base32 "17w7mnrcv3kv5wnnaxs9nnb00wr7dbkpsdgwhp0n6jh4qbq2dzqb"))))
    (properties `((upstream-name . "CexoR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-rtracklayer
                             r-rsamtools
                             r-rcolorbrewer
                             r-iranges
                             r-idr
                             r-genomicranges
                             r-genomeinfodb
                             r-genomation))
    (home-page "https://bioconductor.org/packages/CexoR")
    (synopsis
     "An R package to uncover high-resolution protein-DNA interactions in ChIP-exo replicates")
    (description
     "Strand specific peak-pair calling in @code{ChIP-exo} replicates.  The cumulative
Skellam distribution function is used to detect significant normalised count
differences of opposed sign at each DNA strand (peak-pairs).  Then,
irreproducible discovery rate for overlapping peak-pairs across biological
replicates is computed.")
    (license (list license:artistic2.0
                   (license:fsdg-compatible "GPL-2 + file LICENSE")))))

(define-public r-cetf
  (package
    (name "r-cetf")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CeTF" version))
       (sha256
        (base32 "13n7ym57fzzdx6d1b5g3b1mj02k6pfwns5sqlnvhxfl4s5drm80d"))))
    (properties `((upstream-name . "CeTF")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list zlib zlib libxml2 openssl gfortran))
    (propagated-inputs (list r-summarizedexperiment
                             r-s4vectors
                             r-rcy3
                             r-rcpparmadillo
                             r-rcpp
                             r-network
                             r-matrix
                             r-igraph
                             r-ggrepel
                             r-ggpubr
                             r-ggplot2
                             r-ggnetwork
                             r-ggally
                             r-genomictools-filehandler
                             r-dplyr
                             r-deseq2
                             r-complexheatmap
                             r-clusterprofiler
                             r-circlize))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CeTF")
    (synopsis
     "Coexpression for Transcription Factors using Regulatory Impact Factors and Partial Correlation and Information Theory analysis")
    (description
     "This package provides the necessary functions for performing the Partial
Correlation coefficient with Information Theory (PCIT) (Reverter and Chan 2008)
and Regulatory Impact Factors (RIF) (Reverter et al.  2010) algorithm.  The PCIT
algorithm identifies meaningful correlations to define edges in a weighted
network and can be applied to any correlation-based network including but not
limited to gene co-expression networks, while the RIF algorithm identify
critical Transcription Factors (TF) from gene expression data.  These two
algorithms when combined provide a very relevant layer of information for gene
expression studies (Microarray, RNA-seq and single-cell RNA-seq data).")
    (license license:gpl3)))

(define-public r-cernanetsim
  (package
    (name "r-cernanetsim")
    (version "1.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ceRNAnetsim" version))
       (sha256
        (base32 "06yjjxfrpsb057x0l92d9l0sdpb53c4xk4psi7ng0r3plpbp5g5q"))))
    (properties `((upstream-name . "ceRNAnetsim")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tidygraph
                             r-tibble
                             r-rlang
                             r-purrr
                             r-igraph
                             r-ggraph
                             r-ggplot2
                             r-future
                             r-furrr
                             r-dplyr))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/selcenari/ceRNAnetsim")
    (synopsis
     "Regulation Simulator of Interaction between miRNA and Competing RNAs (ceRNA)")
    (description
     "This package simulates regulations of @code{ceRNA} (Competing Endogenous)
expression levels after a expression level change in one or more
@code{miRNA/mRNAs}.  The methodolgy adopted by the package has potential to
incorparate any @code{ceRNA} (@code{circRNA}, @code{lincRNA}, etc.) into
@code{miRNA:target} interaction network.  The package basically distributes
@code{miRNA} expression over available @code{ceRNAs} where each @code{ceRNA}
attracks @code{miRNAs} proportional to its amount.  But, the package can utilize
multiple parameters that modify @code{miRNA} effect on its target (seed type,
binding energy, binding location, etc.).  The functions handle the given dataset
as graph object and the processes progress via edge and node variables.")
    (license license:gpl3+)))

(define-public r-cepo
  (package
    (name "r-cepo")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "Cepo" version))
       (sha256
        (base32 "1qwz3y80sy6yjc3mc024pi76q019rs9vbpqwdi8fijmci6xgbyx2"))))
    (properties `((upstream-name . "Cepo")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-s4vectors
                             r-rlang
                             r-reshape2
                             r-purrr
                             r-patchwork
                             r-hdf5array
                             r-gseabase
                             r-ggplot2
                             r-dplyr
                             r-delayedmatrixstats
                             r-delayedarray
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/Cepo")
    (synopsis "Cepo for the identification of differentially stable genes")
    (description
     "Defining the identity of a cell is fundamental to understand the heterogeneity
of cells to various environmental signals and perturbations.  We present Cepo, a
new method to explore cell identities from single-cell RNA-sequencing data using
differential stability as a new metric to define cell identity genes.  Cepo
computes cell-type specific gene statistics pertaining to differential stable
gene expression.")
    (license license:expat)))

(define-public r-censcyt
  (package
    (name "r-censcyt")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "censcyt" version))
       (sha256
        (base32 "1v176nzxh8ggc16ffv5rhql7165lmaysmdgih1rvw0k547ac3gzl"))))
    (properties `((upstream-name . "censcyt")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-survival
                             r-summarizedexperiment
                             r-stringr
                             r-s4vectors
                             r-rlang
                             r-purrr
                             r-multcomp
                             r-mice
                             r-mass
                             r-magrittr
                             r-lme4
                             r-fitdistrplus
                             r-edger
                             r-dplyr
                             r-dirmult
                             r-diffcyt
                             r-broom-mixed
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/retogerber/censcyt")
    (synopsis
     "Differential abundance analysis with a right censored covariate in high-dimensional cytometry")
    (description
     "This package provides methods for differential abundance analysis in
high-dimensional cytometry data when a covariate is subject to right censoring
(e.g. survival time) based on multiple imputation and generalized linear mixed
models.")
    (license license:expat)))

(define-public r-cemitool
  (package
    (name "r-cemitool")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CEMiTool" version))
       (sha256
        (base32 "00ycl82cnphnzxmyli7fxs2wlgyx64131s4gvkigi5rbbaiij24k"))))
    (properties `((upstream-name . "CEMiTool")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-wgcna
                             r-stringr
                             r-sna
                             r-scales
                             r-rmarkdown
                             r-pracma
                             r-network
                             r-matrixstats
                             r-knitr
                             r-intergraph
                             r-igraph
                             r-htmltools
                             r-gtable
                             r-gridextra
                             r-ggthemes
                             r-ggrepel
                             r-ggpmisc
                             r-ggplot2
                             r-ggdendro
                             r-fgsea
                             r-fastcluster
                             r-dt
                             r-dplyr
                             r-data-table
                             r-clusterprofiler))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CEMiTool")
    (synopsis "Co-expression Modules identification Tool")
    (description
     "The CE@code{MiTool} package unifies the discovery and the analysis of
coexpression gene modules in a fully automatic manner, while providing a
user-friendly html report with high quality graphs.  Our tool evaluates if
modules contain genes that are over-represented by specific pathways or that are
altered in a specific sample group.  Additionally, CE@code{MiTool} is able to
integrate transcriptomic data with interactome information, identifying the
potential hubs on each network.")
    (license license:gpl3)))

(define-public r-cellxgenedp
  (package
    (name "r-cellxgenedp")
    (version "1.10.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cellxgenedp" version))
       (sha256
        (base32 "17n0g2ch4ja8kibli6i2kfrsnx84nyn829hydl34byadf3b6arz7"))))
    (properties `((upstream-name . "cellxgenedp")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-shiny
                             r-rjsoncons
                             r-httr
                             r-dt
                             r-dplyr
                             r-curl
                             r-cli))
    (native-inputs (list r-knitr))
    (home-page "https://mtmorgan.github.io/cellxgenedp/")
    (synopsis
     "Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal")
    (description
     "The cellxgene data portal (https://cellxgene.cziscience.com/) provides a
graphical user interface to collections of single-cell sequence data processed
in standard ways to count matrix summaries.  The cellxgenedp package provides an
alternative, R-based inteface, allowind data discovery, viewing, and
downloading.")
    (license license:artistic2.0)))

(define-public r-celltrails
  (package
    (name "r-celltrails")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellTrails" version))
       (sha256
        (base32 "11wbq43jrmh9g3p55hc2z4q9kvqpivmrzn58c5b47wrggayi66na"))))
    (properties `((upstream-name . "CellTrails")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-rtsne
                             r-reshape2
                             r-mgcv
                             r-maptree
                             r-igraph
                             r-ggrepel
                             r-ggplot2
                             r-envstats
                             r-dtw
                             r-dendextend
                             r-cba
                             r-biocgenerics
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CellTrails")
    (synopsis
     "Reconstruction, visualization and analysis of branching trajectories")
    (description
     "@code{CellTrails} is an unsupervised algorithm for the de novo chronological
ordering, visualization and analysis of single-cell expression data.
@code{CellTrails} makes use of a geometrically motivated concept of
lower-dimensional manifold learning, which exhibits a multitude of virtues that
counteract intrinsic noise of single cell data caused by drop-outs, technical
variance, and redundancy of predictive variables. @code{CellTrails} enables the
reconstruction of branching trajectories and provides an intuitive graphical
representation of expression patterns along all branches simultaneously.  It
allows the user to define and infer the expression dynamics of individual and
multiple pathways towards distinct phenotypes.")
    (license license:artistic2.0)))

(define-public r-cellscore
  (package
    (name "r-cellscore")
    (version "1.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellScore" version))
       (sha256
        (base32 "084bnxd132lfjk66lrx30qx33d7i37n6h8vzrqj0a7acag6w0mni"))))
    (properties `((upstream-name . "CellScore")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-squash
                             r-rcolorbrewer
                             r-lsa
                             r-gplots
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CellScore")
    (synopsis
     "Tool for Evaluation of Cell Identity from Transcription Profiles")
    (description
     "The @code{CellScore} package contains functions to evaluate the cell identity of
a test sample, given a cell transition defined with a starting (donor) cell type
and a desired target cell type.  The evaluation is based upon a scoring system,
which uses a set of standard samples of known cell types, as the reference set.
The functions have been carried out on a large set of microarray data from one
platform (Affymetrix Human Genome U133 Plus 2.0).  In principle, the method
could be applied to any expression dataset, provided that there are a sufficient
number of standard samples and that the data are normalized.")
    (license license:gpl3)))

(define-public r-cellscape
  (package
    (name "r-cellscape")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cellscape" version))
       (sha256
        (base32 "1x728l0jyn1w0phx44z39gaqhywahpra1qvbbsnngvz8brdh0bvw"))))
    (properties `((upstream-name . "cellscape")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:modules '((guix build r-build-system)
                  (guix build minify-build-system)
                  (guix build utils)
                  (ice-9 match))
      #:imported-modules `(,@%r-build-system-modules (guix build
                                                      minify-build-system))
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'process-javascript
                    (lambda* (#:key inputs #:allow-other-keys)
                      (with-directory-excursion "inst/"
                        (for-each (match-lambda
                                    ((source . target) (minify source
                                                               #:target target)))
                                  '())))))))
    (propagated-inputs (list r-stringr
                             r-reshape2
                             r-jsonlite
                             r-htmlwidgets
                             r-gtools
                             r-dplyr))
    (native-inputs (list r-knitr esbuild))
    (home-page "https://bioconductor.org/packages/cellscape")
    (synopsis
     "Explores single cell copy number profiles in the context of a single cell tree")
    (description
     "@code{CellScape} facilitates interactive browsing of single cell clonal
evolution datasets.  The tool requires two main inputs: (i) the genomic content
of each single cell in the form of either copy number segments or targeted
mutation values, and (ii) a single cell phylogeny.  Phylogenetic formats can
vary from dendrogram-like phylogenies with leaf nodes to evolutionary
model-derived phylogenies with observed or latent internal nodes.  The
@code{CellScape} phylogeny is flexibly input as a table of source-target edges
to support arbitrary representations, where each node may or may not have
associated genomic data.  The output of @code{CellScape} is an interactive
interface displaying a single cell phylogeny and a cell-by-locus genomic heatmap
representing the mutation status in each cell for each locus.")
    (license license:gpl3)))

(define-public r-cellnoptr
  (package
    (name "r-cellnoptr")
    (version "1.52.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellNOptR" version))
       (sha256
        (base32 "1gzjmxycgxd8zvjksfyp08sasgv532vk3864pg7ilmch96q8sw9r"))))
    (properties `((upstream-name . "CellNOptR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xml
                             r-stringr
                             r-stringi
                             r-rmarkdown
                             r-rgraphviz
                             r-rcurl
                             r-rbgl
                             r-igraph
                             r-graph
                             r-ggplot2))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CellNOptR")
    (synopsis
     "Training of boolean logic models of signalling networks using prior knowledge networks and perturbation data")
    (description
     "This package does optimisation of boolean logic networks of signalling pathways
based on a previous knowledge network and a set of data upon perturbation of the
nodes in the network.")
    (license license:gpl3)))

(define-public r-cellmixs
  (package
    (name "r-cellmixs")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellMixS" version))
       (sha256
        (base32 "1xg099xjbm6p4b36yvgckcirc4n0bm5md66gk9vyb9azka56x83r"))))
    (properties `((upstream-name . "CellMixS")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-viridis
                             r-tidyr
                             r-summarizedexperiment
                             r-singlecellexperiment
                             r-scater
                             r-purrr
                             r-magrittr
                             r-ksamples
                             r-ggridges
                             r-ggplot2
                             r-dplyr
                             r-cowplot
                             r-biocparallel
                             r-biocneighbors
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/almutlue/CellMixS")
    (synopsis "Evaluate Cellspecific Mixing")
    (description
     "@code{CellMixS} provides metrics and functions to evaluate batch effects, data
integration and batch effect correction in single cell trancriptome data with
single cell resolution.  Results can be visualized and summarised on different
levels, e.g. on cell, celltype or dataset level.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-cellmigration
  (package
    (name "r-cellmigration")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cellmigRation" version))
       (sha256
        (base32 "1vaxq1ysrsmavnv3nsbs3cl587zmdjjwapm7qkv6m75l5qzmjjg9"))))
    (properties `((upstream-name . "cellmigRation")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vioplot
                             r-tiff
                             r-spatialtools
                             r-sp
                             r-reshape2
                             r-matrixstats
                             r-hmisc
                             r-foreach
                             r-fme
                             r-factominer
                             r-doparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/ocbe-uio/cellmigRation/")
    (synopsis
     "Track Cells, Analyze Cell Trajectories and Compute Migration Statistics")
    (description
     "Import TIFF images of fluorescently labeled cells, and track cell movements over
time.  Parallelization is supported for image processing and for fast
computation of cell trajectories.  In-depth analysis of cell trajectories is
enabled by 15 trajectory analysis functions.")
    (license license:gpl2)))

(define-public r-cellmapperdata
  (package
    (name "r-cellmapperdata")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellMapperData" version
                              'experiment))
       (sha256
        (base32 "07ikbz8vfqmvqw6dpjvirlgvhldn4lc7cy8zjkiqv9a428hfgvb5"))))
    (properties `((upstream-name . "CellMapperData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-experimenthub r-cellmapper))
    (home-page "https://bioconductor.org/packages/CellMapperData")
    (synopsis "Pre-processed data for use with the CellMapper package")
    (description
     "Experiment data package.  Contains microarray data from several large expression
compendia that have been pre-processed for use with the @code{CellMapper}
package.  This pre-processed data is recommended for routine searches using the
@code{CellMapper} package.")
    (license license:artistic2.0)))

(define-public r-cellmapper
  (package
    (name "r-cellmapper")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellMapper" version))
       (sha256
        (base32 "1jbdpclya852yv9z2qb807spwrvs5yw8vnq2i238pbc4a7qngjvh"))))
    (properties `((upstream-name . "CellMapper")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors))
    (home-page "https://bioconductor.org/packages/CellMapper")
    (synopsis "Predict genes expressed selectively in specific cell types")
    (description
     "This package infers cell type-specific expression based on co-expression
similarity with known cell type marker genes.  Can make accurate predictions
using publicly available expression data, even when a cell type has not been
isolated before.")
    (license license:artistic2.0)))

(define-public r-cellity
  (package
    (name "r-cellity")
    (version "1.34.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cellity" version))
       (sha256
        (base32 "0p6xwhzdlrwmzlvv518h1iyigq8if9clyhqi11vszih7y77n80w6"))))
    (properties `((upstream-name . "cellity")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-topgo
                             r-robustbase
                             r-org-mm-eg-db
                             r-org-hs-eg-db
                             r-mvoutlier
                             r-ggplot2
                             r-e1071
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cellity")
    (synopsis "Quality Control for Single-Cell RNA-seq Data")
    (description
     "This package provides a support vector machine approach to identifying and
filtering low quality cells from single-cell RNA-seq datasets.")
    (license license:gpl2+)))

(define-public r-cellbench
  (package
    (name "r-cellbench")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellBench" version))
       (sha256
        (base32 "0c9qaqql1bcm4r1lhxlmbbw1v0l6z9g3dwaq3cm863fhi4822xl4"))))
    (properties `((upstream-name . "CellBench")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyselect
                             r-tidyr
                             r-tibble
                             r-singlecellexperiment
                             r-rlang
                             r-rappdirs
                             r-purrr
                             r-memoise
                             r-magrittr
                             r-lubridate
                             r-glue
                             r-dplyr
                             r-biocparallel
                             r-biocgenerics
                             r-biocfilecache
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/shians/cellbench")
    (synopsis "Construct Benchmarks for Single Cell Analysis Methods")
    (description
     "This package contains infrastructure for benchmarking analysis methods and
access to single cell mixture benchmarking data.  It provides a framework for
organising analysis methods and testing combinations of methods in a pipeline
without explicitly laying out each combination.  It also provides utilities for
sampling and filtering @code{SingleCellExperiment} objects, constructing lists
of functions with varying parameters, and multithreaded evaluation of analysis
methods.")
    (license license:gpl3)))

(define-public r-cellbaser
  (package
    (name "r-cellbaser")
    (version "1.30.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cellbaseR" version))
       (sha256
        (base32 "1glaidjcr2iralq3vppvsri7mavdvnp5gizgd8qrpcqcdw7kgq24"))))
    (properties `((upstream-name . "cellbaseR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-rsamtools
                             r-r-utils
                             r-pbapply
                             r-jsonlite
                             r-httr
                             r-foreach
                             r-doparallel
                             r-data-table
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/melsiddieg/cellbaseR")
    (synopsis
     "Querying annotation data from the high performance Cellbase web")
    (description
     "This R package makes use of the exhaustive RESTful Web service API that has been
implemented for the Cellabase database.  It enable researchers to query and
obtain a wealth of biological information from a single database saving a lot of
time.  Another benefit is that researchers can easily make queries about
different biological topics and link all this information together as all
information is integrated.")
    (license license:asl2.0)))

(define-public r-cellbarcode
  (package
    (name "r-cellbarcode")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CellBarcode" version))
       (sha256
        (base32 "1c9gbqjwa8kabiwsy5yc99pspc78isfy8867kpklzfwbvsf0c641"))))
    (properties `((upstream-name . "CellBarcode")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-zlibbioc
                             r-stringr
                             r-shortread
                             r-seqinr
                             r-s4vectors
                             r-rsamtools
                             r-rcpp
                             r-plyr
                             r-magrittr
                             r-ggplot2
                             r-egg
                             r-data-table
                             r-ckmeans-1d-dp
                             r-biostrings
                             r-bh))
    (native-inputs (list r-knitr))
    (home-page "https://wenjie1991.github.io/CellBarcode/")
    (synopsis "Cellular DNA Barcode Analysis toolkit")
    (description
     "The package @code{CellBarcode} performs Cellular DNA Barcode analysis.  It can
handle all kinds of DNA barcodes, as long as the barcode is within a single
sequencing read and has a pattern that can be matched by a regular expression.
\\code{@code{CellBarcode}} can handle barcodes with flexible lengths, with or
without UMI (unique molecular identifier).  This tool also can be used for
pre-processing some amplicon data such as CRISPR @code{gRNA} screening, immune
repertoire sequencing, and metagenome data.")
    (license license:artistic2.0)))

(define-public r-celegansprobe
  (package
    (name "r-celegansprobe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celegansprobe" version
                              'annotation))
       (sha256
        (base32 "05k7si3f8pzkyb8jv0r2vkavbrqxsn4nawl92gcphfsylrwcddqb"))))
    (properties `((upstream-name . "celegansprobe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/celegansprobe")
    (synopsis "Probe sequence data for microarrays of type celegans")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was C\\_elegans\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-celeganscdf
  (package
    (name "r-celeganscdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celeganscdf" version
                              'annotation))
       (sha256
        (base32 "0a6w0a48azg0i21j3aqb7fnxck3ff9w3gsi89bnlfh0zx6pknx7p"))))
    (properties `((upstream-name . "celeganscdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/celeganscdf")
    (synopsis "celeganscdf")
    (description
     "This package provides a package containing an environment representing the
Celegans.CDF file.")
    (license license:lgpl2.0+)))

(define-public r-celegans-db
  (package
    (name "r-celegans-db")
    (version "3.13.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celegans.db" version
                              'annotation))
       (sha256
        (base32 "15gr1l3j9s1rgq0j1mi12d4lk9izv7nck5h53icbph92j02fihng"))))
    (properties `((upstream-name . "celegans.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-ce-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/celegans.db")
    (synopsis
     "Affymetrix Affymetrix Celegans Array annotation data (chip celegans)")
    (description
     "Affymetrix Affymetrix Celegans Array annotation data (chip celegans) assembled
using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-celda
  (package
    (name "r-celda")
    (version "1.22.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celda" version))
       (sha256
        (base32 "1iszciqfcd1g12g5vjl667s7dw82bz48fjls32d94av1n1pxxz8v"))))
    (properties `((upstream-name . "celda")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-withr
                             r-uwot
                             r-summarizedexperiment
                             r-stringr
                             r-singlecellexperiment
                             r-scran
                             r-scater
                             r-scales
                             r-s4vectors
                             r-rtsne
                             r-reshape2
                             r-rcppeigen
                             r-rcpp
                             r-rcolorbrewer
                             r-plyr
                             r-mcmcprecision
                             r-matrixstats
                             r-matrix
                             r-gtable
                             r-gridextra
                             r-ggrepel
                             r-ggplot2
                             r-foreach
                             r-enrichr
                             r-doparallel
                             r-digest
                             r-delayedarray
                             r-dbscan
                             r-data-table
                             r-complexheatmap
                             r-circlize))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/celda")
    (synopsis "CEllular Latent Dirichlet Allocation")
    (description
     "Celda is a suite of Bayesian hierarchical models for clustering single-cell
RNA-sequencing (@code{scRNA-seq}) data.  It is able to perform \"bi-clustering\"
and simultaneously cluster genes into gene modules and cells into cell
subpopulations.  It also contains @code{DecontX}, a novel Bayesian method to
computationally estimate and remove RNA contamination in individual cells
without empty droplet information.  A variety of @code{scRNA-seq} data
visualization functions is also included.")
    (license license:expat)))

(define-public r-celarefdata
  (package
    (name "r-celarefdata")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celarefData" version
                              'experiment))
       (sha256
        (base32 "1szj7x00lsjf8751ni9azwds5w53gfg9028chv4vj6a4kj00blr5"))))
    (properties `((upstream-name . "celarefData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/celarefData")
    (synopsis
     "Processed scRNA data for celaref Vignette - cell labelling by reference")
    (description
     "This experiment data contains some processed data used in the celaref package
vignette.  These are publically available datasets, that have been processed by
celaref package, and can be manipulated further with it.")
    (license license:gpl3)))

(define-public r-celaref
  (package
    (name "r-celaref")
    (version "1.24.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "celaref" version))
       (sha256
        (base32 "19qr4s74ppq07x1da3c65aaw4gmcky0n9pxfv8v5pl5k90mzyfp6"))))
    (properties `((upstream-name . "celaref")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tibble
                             r-summarizedexperiment
                             r-s4vectors
                             r-rlang
                             r-readr
                             r-matrix
                             r-mast
                             r-magrittr
                             r-ggplot2
                             r-dplyr
                             r-delayedarray
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/celaref")
    (synopsis "Single-cell RNAseq cell cluster labelling by reference")
    (description
     "After the clustering step of a single-cell RNAseq experiment, this package aims
to suggest labels/cell types for the clusters, on the basis of similarity to a
reference dataset.  It requires a table of read counts per cell per gene, and a
list of the cells belonging to each of the clusters, (for both test and
reference data).")
    (license license:gpl3)))

(define-public r-cdi
  (package
    (name "r-cdi")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CDI" version))
       (sha256
        (base32 "18m3m39hqhl225f1cm8hgf8xldgj23c8ywlq83s4csdwagqigxbm"))))
    (properties `((upstream-name . "CDI")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-singlecellexperiment
                             r-seuratobject
                             r-seurat
                             r-reshape2
                             r-matrixstats
                             r-ggsci
                             r-ggplot2
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/jichunxie/CDI")
    (synopsis "Clustering Deviation Index (CDI)")
    (description
     "Single-cell RNA-sequencing (@code{scRNA-seq}) is widely used to explore cellular
variation.  The analysis of @code{scRNA-seq} data often starts from clustering
cells into subpopulations.  This initial step has a high impact on downstream
analyses, and hence it is important to be accurate.  However, there have not
been unsupervised metric designed for @code{scRNA-seq} to evaluate clustering
performance.  Hence, we propose clustering deviation index (CDI), an
unsupervised metric based on the modeling of @code{scRNA-seq} UMI counts to
evaluate clustering of cells.")
    (license (license:fsdg-compatible "GPL-3 + file LICENSE"))))

(define-public r-ccrepe
  (package
    (name "r-ccrepe")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ccrepe" version))
       (sha256
        (base32 "0xfk14wpldxfad3zr44i2jpi67didlfp3l6a040mv2i6xf3df3hc"))))
    (properties `((upstream-name . "ccrepe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-infotheo))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ccrepe")
    (synopsis "ccrepe_and_nc.score")
    (description
     "The CCREPE (Compositionality Corrected by REnormalizaion and PErmutation)
package is designed to assess the significance of general similarity measures in
compositional datasets.  In microbial abundance data, for example, the total
abundances of all microbes sum to one; CCREPE is designed to take this
constraint into account when assigning p-values to similarity measures between
the microbes.  The package has two functions: ccrepe: Calculates similarity
measures, p-values and q-values for relative abundances of bugs in one or two
body sites using bootstrap and permutation matrices of the data.  nc.score:
Calculates species-level co-variation and co-exclusion patterns based on an
extension of the checkerboard score to ordinal data.")
    (license license:expat)))

(define-public r-ccpromise
  (package
    (name "r-ccpromise")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CCPROMISE" version))
       (sha256
        (base32 "0596j63169n0gsn24j52l0ph8ryynklsv26akfy514d96vm52nwg"))))
    (properties `((upstream-name . "CCPROMISE")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-promise r-gseabase r-ccp r-biobase))
    (home-page "https://bioconductor.org/packages/CCPROMISE")
    (synopsis
     "PROMISE analysis with Canonical Correlation for Two Forms of High Dimensional Genetic Data")
    (description
     "Perform Canonical correlation between two forms of high demensional genetic
data, and associate the first compoent of each form of data with a specific
biologically interesting pattern of associations with multiple endpoints.  A
probe level analysis is also implemented.")
    (license license:gpl2+)))

(define-public r-ccplotr
  (package
    (name "r-ccplotr")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CCPlotR" version))
       (sha256
        (base32 "0iyrg8ibah5lny59y8496k6v6gpgpyc8vw0kszmryb6sf63n5ks9"))))
    (properties `((upstream-name . "CCPlotR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-viridis
                             r-tidyr
                             r-tibble
                             r-stringr
                             r-scatterpie
                             r-scales
                             r-rcolorbrewer
                             r-plyr
                             r-patchwork
                             r-igraph
                             r-ggtext
                             r-ggraph
                             r-ggplot2
                             r-ggh4x
                             r-ggbump
                             r-forcats
                             r-dplyr
                             r-complexheatmap
                             r-circlize))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/Sarah145/CCPlotR")
    (synopsis "Plots For Visualising Cell-Cell Interactions")
    (description
     "CC@code{PlotR} is an R package for visualising results from tools that predict
cell-cell interactions from single-cell RNA-seq data.  These plots are generic
and can be used to visualise results from multiple tools such as Liana,
@code{CellPhoneDB}, NATMI etc.")
    (license license:expat)))

(define-public r-ccmap
  (package
    (name "r-ccmap")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ccmap" version))
       (sha256
        (base32 "1g0r1vfbh2w21cb891wxqdcs06cnmc8vpkxs65pydqkxvbjbccji"))))
    (properties `((upstream-name . "ccmap")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xgboost
                             r-lsa
                             r-foreach
                             r-doparallel
                             r-data-table
                             r-ccdata
                             r-biocmanager
                             r-annotationdbi))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/ccmap")
    (synopsis "Combination Connectivity Mapping")
    (description
     "Finds drugs and drug combinations that are predicted to reverse or mimic gene
expression signatures.  These drugs might reverse diseases or mimic healthy
lifestyles.")
    (license license:expat)))

(define-public r-ccl4
  (package
    (name "r-ccl4")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CCl4" version
                              'experiment))
       (sha256
        (base32 "15z8x1f9m94v44m2w6pzqqcvm0q8vavda2w9m44chlsppmzsfl9j"))))
    (properties `((upstream-name . "CCl4")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-limma r-biobase))
    (home-page "https://bioconductor.org/packages/CCl4")
    (synopsis "Carbon Tetrachloride (CCl4) treated hepatocytes")
    (description
     "N@code{ChannelSet} for rat hepatocytes treated with Carbon Tetrachloride (CCl4)
data from LGC company.")
    (license license:artistic2.0)))

(define-public r-ccimpute
  (package
    (name "r-ccimpute")
    (version "1.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ccImpute" version))
       (sha256
        (base32 "1k3hy1bdvj5zm2y42n67zkzbkkm6s8qa93krs4kvxnfdzmbkf5l3"))))
    (properties `((upstream-name . "ccImpute")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-sparsematrixstats
                             r-singlecellexperiment
                             r-rcppeigen
                             r-rcpp
                             r-matrix
                             r-irlba
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/khazum/ccImpute/")
    (synopsis
     "ccImpute: an accurate and scalable consensus clustering based approach to impute dropout events in the single-cell RNA-seq data (https://doi.org/10.1186/s12859-022-04814-8)")
    (description
     "Dropout events make the lowly expressed genes indistinguishable from true zero
expression and different than the low expression present in cells of the same
type.  This issue makes any subsequent downstream analysis difficult.
@code{ccImpute} is an imputation algorithm that uses cell similarity established
by consensus clustering to impute the most probable dropout events in the
@code{scRNA-seq} datasets. @code{ccImpute} demonstrated performance which
exceeds the performance of existing imputation approaches while introducing the
least amount of new noise as measured by clustering performance characteristics
on datasets with known cell identities.")
    (license license:gpl3)))

(define-public r-ccdata
  (package
    (name "r-ccdata")
    (version "1.32.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "ccdata" version
                              'experiment))
       (sha256
        (base32 "19khzj5pfm8ysi4ra5pc255z9vxywlf0yjfy4myip6w70ba865nx"))))
    (properties `((upstream-name . "ccdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (home-page "https://bioconductor.org/packages/ccdata")
    (synopsis "Data for Combination Connectivity Mapping (ccmap) Package")
    (description
     "This package contains microarray gene expression data generated from the
Connectivity Map build 02 and LINCS l1000.  The data are used by the ccmap
package to find drugs and drug combinations to mimic or reverse a gene
expression signature.")
    (license license:expat)))

(define-public r-cbpmanager
  (package
    (name "r-cbpmanager")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cbpManager" version))
       (sha256
        (base32 "13xdiga7s7izhx5jl4i6zrqmn21xb68q1r3qh5a96dlvmspfw30q"))))
    (properties `((upstream-name . "cbpManager")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vroom
                             r-shinydashboard
                             r-shinycssloaders
                             r-shinybs
                             r-shiny
                             r-rlang
                             r-rintrojs
                             r-reticulate
                             r-rapportools
                             r-plyr
                             r-markdown
                             r-magrittr
                             r-jsonlite
                             r-htmltools
                             r-dt
                             r-dplyr
                             r-basilisk))
    (native-inputs (list r-knitr))
    (home-page "https://arsenij-ust.github.io/cbpManager/index.html")
    (synopsis
     "Generate, manage, and edit data and metadata files suitable for the import in cBioPortal for Cancer Genomics")
    (description
     "This R package provides an R Shiny application that enables the user to
generate, manage, and edit data and metadata files suitable for the import in
@code{cBioPortal} for Cancer Genomics.  Create cancer studies and edit its
metadata.  Upload mutation data of a patient that will be concatenated to the
data_mutation_extended.txt file of the study.  Create and edit clinical patient
data, sample data, and timeline data.  Create custom timeline tracks for
patients.")
    (license (license:fsdg-compatible "AGPL-3 + file LICENSE"))))

(define-public r-cbnplot
  (package
    (name "r-cbnplot")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CBNplot" version))
       (sha256
        (base32 "1xg1d3p64h9pqfk9kb889c3vnnvcvzn3dncr3v76zxmlfr6vn215"))))
    (properties `((upstream-name . "CBNplot")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-tidyr
                             r-stringr
                             r-rmpfr
                             r-rlang
                             r-reshape2
                             r-pvclust
                             r-purrr
                             r-patchwork
                             r-org-hs-eg-db
                             r-magrittr
                             r-igraph
                             r-graphlayouts
                             r-graphite
                             r-ggraph
                             r-ggplot2
                             r-ggforce
                             r-ggdist
                             r-experimenthub
                             r-enrichplot
                             r-dplyr
                             r-depmap
                             r-clusterprofiler
                             r-bnlearn
                             r-biocfilecache))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/noriakis/CBNplot")
    (synopsis
     "plot bayesian network inferred from gene expression data based on enrichment analysis results")
    (description
     "This package provides the visualization of bayesian network inferred from gene
expression data.  The networks are based on enrichment analysis results inferred
from packages including @code{clusterProfiler} and @code{ReactomePA}.  The
networks between pathways and genes inside the pathways can be inferred and
visualized.")
    (license license:artistic2.0)))

(define-public r-cbioportaldata
  (package
    (name "r-cbioportaldata")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cBioPortalData" version))
       (sha256
        (base32 "0wjkwa7pfk3nvylf0nkix8x7zcmgrk0gasr2wx5bnbhvv5x6n4rd"))))
    (properties `((upstream-name . "cBioPortalData")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-tcgautils
                             r-summarizedexperiment
                             r-s4vectors
                             r-rtcgatoolbox
                             r-readr
                             r-raggedexperiment
                             r-multiassayexperiment
                             r-iranges
                             r-httr
                             r-genomicranges
                             r-genomeinfodb
                             r-dplyr
                             r-digest
                             r-biocfilecache
                             r-anvil))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cBioPortalData")
    (synopsis
     "Exposes and Makes Available Data from the cBioPortal Web Resources")
    (description
     "The @code{cBioPortalData} R package accesses study datasets from the @code{cBio}
Cancer Genomics Portal.  It accesses the data either from the pre-packaged zip /
tar files or from the API interface that was recently implemented by the
@code{cBioPortal} Data Team.  The package can provide data in either tabular
format or with @code{MultiAssayExperiment} object that uses familiar
Bioconductor data representations.")
    (license license:agpl3)))

(define-public r-cbea
  (package
    (name "r-cbea")
    (version "1.6.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CBEA" version))
       (sha256
        (base32 "1mbd62wakjn9pwhy2q2hfxkx09ny577a4j6lssnjj65jb3s7gjr6"))))
    (properties `((upstream-name . "CBEA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-treesummarizedexperiment
                             r-tidyr
                             r-tibble
                             r-summarizedexperiment
                             r-rlang
                             r-rcpp
                             r-mixtools
                             r-magrittr
                             r-lmom
                             r-goftest
                             r-glue
                             r-generics
                             r-fitdistrplus
                             r-dplyr
                             r-biocset
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/qpmnguyen/CBEA")
    (synopsis "Competitive Balances for Taxonomic Enrichment Analysis in R")
    (description
     "This package implements CBEA, a method to perform set-based analysis for
microbiome relative abundance data.  This approach constructs a competitive
balance between taxa within the set and remainder taxa per sample.  More details
can be found in the Nguyen et al.  2021+ manuscript.  Additionally, this package
adds support functions to help users perform taxa-set enrichment analyses using
existing gene set analysis methods.  In the future we hope to also provide
curated knowledge driven taxa sets.")
    (license license:expat)))

(define-public r-cbaf
  (package
    (name "r-cbaf")
    (version "1.28.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cbaf" version))
       (sha256
        (base32 "0cymffvrpf7zyb7jvkn6pvkxn8g12j8bh25sq6z23piwiqa0s3gw"))))
    (properties `((upstream-name . "cbaf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-zip
                             r-rcolorbrewer
                             r-openxlsx
                             r-gplots
                             r-genefilter
                             r-cbioportaldata
                             r-biocfilecache))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cbaf")
    (synopsis
     "Automated functions for comparing various omic data from cbioportal.org")
    (description
     "This package contains functions that allow analysing and comparing omic data
across various cancers/cancer subgroups easily.  So far, it is compatible with
RNA-seq, @code{microRNA-seq}, microarray and methylation datasets that are
stored on cbioportal.org.")
    (license license:artistic2.0)))

(define-public r-causalr
  (package
    (name "r-causalr")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CausalR" version))
       (sha256
        (base32 "089fhrl4n621pp7sba6hfbzv2wbiz3sqnb9yg6cwzlh0dw4wjy1k"))))
    (properties `((upstream-name . "CausalR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-igraph))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CausalR")
    (synopsis "Causal network analysis methods")
    (description
     "Causal network analysis methods for regulator prediction and network
reconstruction from genome scale data.")
    (license license:gpl2+)))

(define-public r-catscradle
  (package
    (name "r-catscradle")
    (version "1.0.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CatsCradle" version))
       (sha256
        (base32 "1xfinxwqrdlpr0x9jh37zw0f7sqsbi6484zljal1s7q7in47c38z"))))
    (properties `((upstream-name . "CatsCradle")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-stringr
                             r-spatialexperiment
                             r-singlecellexperiment
                             r-seuratobject
                             r-seurat
                             r-s4vectors
                             r-rfast
                             r-reshape2
                             r-rdist
                             r-pracma
                             r-pheatmap
                             r-networkd3
                             r-msigdbr
                             r-matrix
                             r-igraph
                             r-ggplot2
                             r-geometry
                             r-ebimage
                             r-data-table
                             r-abind))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/AnnaLaddach/CatsCradle")
    (synopsis
     "This package provides methods for analysing spatial transcriptomics data and for discovering gene clusters")
    (description
     "This package addresses two broad areas.  It allows for in-depth analysis of
spatial transcriptomic data by identifying tissue neighbourhoods.  These are
contiguous regions of tissue surrounding individual cells. @code{CatsCradle}
allows for the categorisation of neighbourhoods by the cell types contained in
them and the genes expressed in them.  In particular, it produces Seurat objects
whose individual elements are neighbourhoods rather than cells.  In addition, it
enables the categorisation and annotation of genes by producing Seurat objects
whose elements are genes.")
    (license license:expat)))

(define-public r-categorycompare
  (package
    (name "r-categorycompare")
    (version "1.50.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "categoryCompare" version))
       (sha256
        (base32 "1hpd5c21qvf0wh2rmcybcsm632lr6cp9069dyk3sccqyx1r6aw8v"))))
    (properties `((upstream-name . "categoryCompare")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list))
    (propagated-inputs (list r-rcy3
                             r-hwriter
                             r-gseabase
                             r-graph
                             r-gostats
                             r-colorspace
                             r-category
                             r-biocgenerics
                             r-biobase
                             r-annotationdbi
                             r-annotate))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/rmflight/categoryCompare")
    (synopsis
     "Meta-analysis of high-throughput experiments using feature annotations")
    (description
     "Calculates significant annotations (categories) in each of two (or more) feature
(i.e.  gene) lists, determines the overlap between the annotations, and returns
graphical and tabular data about the significant annotations and which
combinations of feature lists the annotations were found to be significant.
Interactive exploration is facilitated through the use of RCytoscape (heavily
suggested).")
    (license license:gpl2)))

(define-public r-casper
  (package
    (name "r-casper")
    (version "2.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "casper" version))
       (sha256
        (base32 "1f8gg39madycigcl5xqrb04sa4dy6a2z1a4f15jryaddf3s62q36"))))
    (properties `((upstream-name . "casper")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vgam
                             r-survival
                             r-sqldf
                             r-s4vectors
                             r-rtracklayer
                             r-rsamtools
                             r-mgcv
                             r-limma
                             r-iranges
                             r-gtools
                             r-genomicranges
                             r-genomicfeatures
                             r-genomeinfodb
                             r-gaga
                             r-ebarrays
                             r-coda
                             r-biocgenerics
                             r-biobase))
    (home-page "https://bioconductor.org/packages/casper")
    (synopsis
     "Characterization of Alternative Splicing based on Paired-End Reads")
    (description
     "Infer alternative splicing from paired-end RNA-seq data.  The model is based on
counting paths across exons, rather than pairwise exon connections, and
estimates the fragment size and start distributions non-parametrically, which
improves estimation precision.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-carnival
  (package
    (name "r-carnival")
    (version "2.16.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CARNIVAL" version))
       (sha256
        (base32 "05sx2p8i0gxxki26nbb76xm2i2m8fdabi6k5li5yncg3p28gw3q2"))))
    (properties `((upstream-name . "CARNIVAL")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-tidyr
                             r-tibble
                             r-stringr
                             r-rmarkdown
                             r-rjson
                             r-readr
                             r-lpsolve
                             r-igraph
                             r-dplyr))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/saezlab/CARNIVAL")
    (synopsis
     "CAusal Reasoning tool for Network Identification (from gene expression data) using Integer VALue programming")
    (description
     "An upgraded causal reasoning tool from Melas et al in R with updated assignments
of TFs weights from PROGENy scores.  Optimization parameters can be freely
adjusted and multiple solutions can be obtained and aggregated.")
    (license license:gpl3)))

(define-public r-cardinalworkflows
  (package
    (name "r-cardinalworkflows")
    (version "1.38.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CardinalWorkflows" version
                              'experiment))
       (sha256
        (base32 "1wk1yrxbb22xablwy0blahj89y434607zpqap1d2sx71qgj64vwc"))))
    (properties `((upstream-name . "CardinalWorkflows")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-cardinal))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CardinalWorkflows")
    (synopsis "Datasets and workflows for the Cardinal MSI")
    (description
     "Datasets and workflows for Cardinal: DESI and MALDI examples including pig
fetus, cardinal painting, and human RCC.")
    (license license:artistic2.0)))

(define-public r-cardinalio
  (package
    (name "r-cardinalio")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CardinalIO" version))
       (sha256
        (base32 "1b773hvdk5dqkrzpb5yyb85xszpkn9pdkyzdsid406zfhsqwwn97"))))
    (properties `((upstream-name . "CardinalIO")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors r-ontologyindex r-matter
                             r-biocparallel))
    (native-inputs (list r-knitr))
    (home-page "http://www.cardinalmsi.org")
    (synopsis "Read and write mass spectrometry imaging files")
    (description
     "Fast and efficient reading and writing of mass spectrometry imaging data files.
Supports @code{imzML} and Analyze 7.5 formats.  Provides ontologies for mass
spectrometry imaging.")
    (license (list license:artistic2.0
                   (license:fsdg-compatible "file://LICENSE")))))

(define-public r-cardinal
  (package
    (name "r-cardinal")
    (version "3.8.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "Cardinal" version))
       (sha256
        (base32 "1fdhr0wmpfc5l2c9xdzy0drxdddyj3ng80hbfj6psbi16pwyxpda"))))
    (properties `((upstream-name . "Cardinal")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-s4vectors
                             r-protgenerics
                             r-nlme
                             r-matter
                             r-matrix
                             r-irlba
                             r-ebimage
                             r-cardinalio
                             r-biocparallel
                             r-biocgenerics
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "http://www.cardinalmsi.org")
    (synopsis "mass spectrometry imaging toolbox for statistical analysis")
    (description
     "This package implements statistical & computational tools for analyzing mass
spectrometry imaging datasets, including methods for efficient pre-processing,
spatial segmentation, and classification.")
    (license (list license:artistic2.0
                   (license:fsdg-compatible "file://LICENSE")))))

(define-public r-canineprobe
  (package
    (name "r-canineprobe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canineprobe" version
                              'annotation))
       (sha256
        (base32 "1y70rbxlbgx58vaxp1ry5jngvzz9prcbgd2ji00074ilx4k2cxn2"))))
    (properties `((upstream-name . "canineprobe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canineprobe")
    (synopsis "Probe sequence data for microarrays of type canine")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was Canine\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-caninecdf
  (package
    (name "r-caninecdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "caninecdf" version
                              'annotation))
       (sha256
        (base32 "1f7pf3y4ccmj6681haqk8ds3dlzkv99s22m2r462dnnf38n17l3p"))))
    (properties `((upstream-name . "caninecdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/caninecdf")
    (synopsis "caninecdf")
    (description
     "This package provides a package containing an environment representing the
Canine.cdf file.")
    (license license:lgpl2.0+)))

(define-public r-canine2probe
  (package
    (name "r-canine2probe")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canine2probe" version
                              'annotation))
       (sha256
        (base32 "1l849a1dqy4kpcsxs0lvb48ag81i0f0ys0w4757rw4kp8ry59z4b"))))
    (properties `((upstream-name . "canine2probe")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canine2probe")
    (synopsis "Probe sequence data for microarrays of type canine2")
    (description
     "This package was automatically created by package @code{AnnotationForge} version
1.11.21.  The probe sequence data was obtained from http://www.affymetrix.com.
The file name was Canine\\_2\\_probe\\_tab.")
    (license license:lgpl2.0+)))

(define-public r-canine2cdf
  (package
    (name "r-canine2cdf")
    (version "2.18.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canine2cdf" version
                              'annotation))
       (sha256
        (base32 "077cmmnhjdk0vxjzm1kqf3q5kgx6chwkm59dr4s5dy019rqb6sqr"))))
    (properties `((upstream-name . "canine2cdf")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canine2cdf")
    (synopsis "canine2cdf")
    (description
     "This package provides a package containing an environment representing the
Canine_2.cdf file.")
    (license license:lgpl2.0+)))

(define-public r-canine2-db
  (package
    (name "r-canine2-db")
    (version "3.13.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canine2.db" version
                              'annotation))
       (sha256
        (base32 "1xzz0vivdypwl6kaq2ba02jkpxw0r9r98297ilksdh8m71f244si"))))
    (properties `((upstream-name . "canine2.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-cf-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canine2.db")
    (synopsis
     "Affymetrix Affymetrix Canine_2 Array annotation data (chip canine2)")
    (description
     "Affymetrix Affymetrix Canine_2 Array annotation data (chip canine2) assembled
using data from public repositories.")
    (license license:artistic2.0)))

(define-public r-canine-db0
  (package
    (name "r-canine-db0")
    (version "3.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canine.db0" version
                              'annotation))
       (sha256
        (base32 "1lllajhmmics9jvdympy8fx54wdan9ipcmwpq5sfm3ncm5bh10bj"))))
    (properties `((upstream-name . "canine.db0")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canine.db0")
    (synopsis "Base Level Annotation databases for canine")
    (description
     "Base annotation databases for canine, intended ONLY to be used by
@code{AnnotationDbi} to produce regular annotation packages.")
    (license license:artistic2.0)))

(define-public r-canine-db
  (package
    (name "r-canine-db")
    (version "3.13.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canine.db" version
                              'annotation))
       (sha256
        (base32 "1x1mlh0p6r2l5kclarqwgiw9y64xc8jhp6252hhpl9bpnn638n3s"))))
    (properties `((upstream-name . "canine.db")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-org-cf-eg-db r-annotationdbi))
    (home-page "https://bioconductor.org/packages/canine.db")
    (synopsis
     "Affymetrix Affymetrix Canine Array annotation data (chip canine)")
    (description
     "Affymetrix Affymetrix Canine Array annotation data (chip canine) assembled using
data from public repositories.")
    (license license:artistic2.0)))

(define-public r-cancerdata
  (package
    (name "r-cancerdata")
    (version "1.44.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cancerdata" version
                              'experiment))
       (sha256
        (base32 "1kjra8im5wgjyfp1h2s62b5hqwc5440v0bjwwby8hdbmqz78549i"))))
    (properties `((upstream-name . "cancerdata")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase))
    (home-page "https://bioconductor.org/packages/cancerdata")
    (synopsis
     "Development and validation of diagnostic tests from high-dimensional molecular data: Datasets")
    (description "Dataset for the R package cancerclass.")
    (license license:gpl2+)))

(define-public r-cancerclass
  (package
    (name "r-cancerclass")
    (version "1.50.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cancerclass" version))
       (sha256
        (base32 "0yap9vzd2ff7hzznvl87k1fy6vffv5a68l5601pw4i23r14j2dkq"))))
    (properties `((upstream-name . "cancerclass")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-biobase r-binom))
    (home-page "https://bioconductor.org/packages/cancerclass")
    (synopsis
     "Development and validation of diagnostic tests from high-dimensional molecular data")
    (description
     "The classification protocol starts with a feature selection step and continues
with nearest-centroid classification.  The accurarcy of the predictor can be
evaluated using training and test set validation, leave-one-out cross-validation
or in a multiple random validation protocol.  Methods for calculation and
visualization of continuous prediction scores allow to balance sensitivity and
specificity and define a cutoff value according to clinical requirements.")
    (license (license:fsdg-compatible "GPL 3"))))

(define-public r-cancer
  (package
    (name "r-cancer")
    (version "1.40.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "canceR" version))
       (sha256
        (base32 "1lilpakq2fi4xynn6674xgp3a22732fd2zafz182q5086cn2xi3l"))))
    (properties `((upstream-name . "canceR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (inputs (list))
    (propagated-inputs (list r-tkrplot
                             r-tidyr
                             r-survival
                             r-runit
                             r-rpart
                             r-r-oo
                             r-r-methodss3
                             r-plyr
                             r-phenotest
                             r-gseabase
                             r-genetclassifier
                             r-formula
                             r-dplyr
                             r-circlize
                             r-cbioportaldata
                             r-biobase))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/canceR")
    (synopsis
     "Graphical User Interface for accessing and modeling the Cancer Genomics Data of MSKCC")
    (description
     "The package is user friendly interface based on the cgdsr and other modeling
packages to explore, compare, and analyse all available Cancer Data (Clinical
data, Gene Mutation, Gene Methylation, Gene Expression, Protein Phosphorylation,
Copy Number Alteration) hosted by the Computational Biology Center at
Memorial-Sloan-Kettering Cancer Center (MSKCC).")
    (license license:gpl2)))

(define-public r-camutqc
  (package
    (name "r-camutqc")
    (version "1.2.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CaMutQC" version))
       (sha256
        (base32 "1b1i3nkqb31rdlaznwwcwn8ksvlw9wmi2xmhi07cq7zkh4mrpgjb"))))
    (properties `((upstream-name . "CaMutQC")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vcfr
                             r-tidyr
                             r-stringr
                             r-org-hs-eg-db
                             r-meskit
                             r-maftools
                             r-ggplot2
                             r-dt
                             r-dplyr
                             r-data-table
                             r-clusterprofiler))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/likelet/CaMutQC")
    (synopsis
     "An R Package for Comprehensive Filtration and Selection of Cancer Somatic Mutations")
    (description
     "@code{CaMutQC} is able to filter false positive mutations generated due to
technical issues, as well as to select candidate cancer mutations through a
series of well-structured functions by labeling mutations with various flags.
And a detailed and vivid filter report will be offered after completing a whole
filtration or selection section.  Also, @code{CaMutQC} integrates serveral
methods and gene panels for Tumor Mutational Burden (TMB) estimation.")
    (license license:gpl3)))

(define-public r-camera
  (package
    (name "r-camera")
    (version "1.62.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CAMERA" version))
       (sha256
        (base32 "0b6k1k6qaapp17cqjjzz11bcg98q41b2llyyj12vz9ngy3qn570a"))))
    (properties `((upstream-name . "CAMERA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-xcms
                             r-rbgl
                             r-igraph
                             r-hmisc
                             r-graph
                             r-biobase))
    (home-page "http://msbi.ipb-halle.de/msbi/CAMERA/")
    (synopsis
     "Collection of annotation related methods for mass spectrometry data")
    (description
     "Annotation of peaklists generated by xcms, rule based annotation of isotopes and
adducts, isotope validation, EIC correlation based tagging of unknown adducts
and fragments.")
    (license license:gpl2+)))

(define-public r-calm
  (package
    (name "r-calm")
    (version "1.20.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "calm" version))
       (sha256
        (base32 "1hf7znmvgwkpxlwy1983fnnsk40brm9bc60g7bflid6ck3w38gsv"))))
    (properties `((upstream-name . "calm")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-mgcv))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/calm")
    (synopsis "Covariate Assisted Large-scale Multiple testing")
    (description
     "Statistical methods for multiple testing with covariate information.
Traditional multiple testing methods only consider a list of test statistics,
such as p-values.  Our methods incorporate the auxiliary information, such as
the lengths of gene coding regions or the minor allele frequencies of SNPs, to
improve power.")
    (license (license:fsdg-compatible "GPL (>=2)"))))

(define-public r-cager
  (package
    (name "r-cager")
    (version "2.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CAGEr" version))
       (sha256
        (base32 "17hxhpsh6cvifrkzfz4l643kvphbahn9w54dc3xfal6f135cyal7"))))
    (properties `((upstream-name . "CAGEr")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-vgam
                             r-vegan
                             r-summarizedexperiment
                             r-stringi
                             r-stringdist
                             r-som
                             r-scales
                             r-s4vectors
                             r-rtracklayer
                             r-rsamtools
                             r-rlang
                             r-reshape2
                             r-plyr
                             r-multiassayexperiment
                             r-memoise
                             r-kernsmooth
                             r-iranges
                             r-gtools
                             r-ggplot2
                             r-genomicranges
                             r-genomicfeatures
                             r-genomicalignments
                             r-genomeinfodb
                             r-formula-tools
                             r-data-table
                             r-cagefightr
                             r-bsgenome
                             r-biostrings
                             r-biocparallel
                             r-biocgenerics))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CAGEr")
    (synopsis
     "Analysis of CAGE (Cap Analysis of Gene Expression) sequencing data for precise mapping of transcription start sites and promoterome mining")
    (description
     "The _CAGEr_ package identifies transcription start sites (TSS) and their usage
frequency from CAGE (Cap Analysis Gene Expression) sequencing data.  It
normalises raw CAGE tag count, clusters TSSs into tag clusters (TC) and
aggregates them across multiple CAGE experiments to construct consensus clusters
(CC) representing the promoterome.  CAGEr provides functions to profile
expression levels of these clusters by cumulative expression and rarefaction
analysis, and outputs the plots in ggplot2 format for further facetting and
customisation.  After clustering, CAGEr performs analyses of promoter width and
detects differential usage of TSSs (promoter shifting) between samples.  CAGEr
also exports its data as genome browser tracks, and as R objects for downsteam
expression analysis by other Bioconductor packages such as DESeq2,
CAG@code{EfightR}, or @code{seqArchR}.")
    (license license:gpl3)))

(define-public r-cageminer
  (package
    (name "r-cageminer")
    (version "1.12.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cageminer" version))
       (sha256
        (base32 "124kja2p24b4zcshh85lyj6fg7agz2ga28r94ajp86d1nj6vi0pc"))))
    (properties `((upstream-name . "cageminer")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-rlang
                             r-reshape2
                             r-iranges
                             r-ggtext
                             r-ggplot2
                             r-ggbio
                             r-genomicranges
                             r-genomeinfodb
                             r-bionero))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/almeidasilvaf/cageminer")
    (synopsis "Candidate Gene Miner")
    (description
     "This package aims to integrate GWAS-derived SNPs and coexpression networks to
mine candidate genes associated with a particular phenotype.  For that, users
must define a set of guide genes, which are known genes involved in the studied
phenotype.  Additionally, the mined candidates can be given a score that favor
candidates that are hubs and/or transcription factors.  The scores can then be
used to rank and select the top n most promising genes for downstream
experiments.")
    (license license:gpl3)))

(define-public r-cagefightr
  (package
    (name "r-cagefightr")
    (version "1.26.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CAGEfightR" version))
       (sha256
        (base32 "1lpci0dnblrchhbpbc3f31c3i98hsmik94m1jvc53av15v2fkxdc"))))
    (properties `((upstream-name . "CAGEfightR")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment
                             r-s4vectors
                             r-rtracklayer
                             r-pryr
                             r-matrix
                             r-iranges
                             r-interactionset
                             r-gviz
                             r-genomicranges
                             r-genomicinteractions
                             r-genomicfiles
                             r-genomicfeatures
                             r-genomicalignments
                             r-genomeinfodb
                             r-biocparallel
                             r-biocgenerics
                             r-assertthat))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/MalteThodberg/CAGEfightR")
    (synopsis
     "Analysis of Cap Analysis of Gene Expression (CAGE) data using Bioconductor")
    (description
     "CAGE is a widely used high throughput assay for measuring transcription start
site (TSS) activity.  CAG@code{EfightR} is an R/Bioconductor package for
performing a wide range of common data analysis tasks for CAGE and 5'-end data
in general.  Core functionality includes: import of CAGE TSSs (CTSSs), tag (or
unidirectional) clustering for TSS identification, bidirectional clustering for
enhancer identification, annotation with transcript and gene models, correlation
of TSS and enhancer expression, calculation of TSS shapes, quantification of
CAGE expression as expression matrices and genome brower visualization.")
    (license (license:fsdg-compatible "GPL-3 + file LICENSE"))))

(define-public r-cafe
  (package
    (name "r-cafe")
    (version "1.42.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CAFE" version))
       (sha256
        (base32 "0dfjdyb2vzy87mgw3aq0jyfm448mk3k3zsjcyfwa4z8lcn3dr7z9"))))
    (properties `((upstream-name . "CAFE")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-iranges
                             r-gridextra
                             r-ggplot2
                             r-ggbio
                             r-genomicranges
                             r-biovizbase
                             r-biobase
                             r-annotate
                             r-affy))
    (home-page "https://bioconductor.org/packages/CAFE")
    (synopsis "Chromosmal Aberrations Finder in Expression data")
    (description
     "Detection and visualizations of gross chromosomal aberrations using Affymetrix
expression microarrays as input.")
    (license license:gpl3)))

(define-public r-caen
  (package
    (name "r-caen")
    (version "1.14.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CAEN" version))
       (sha256
        (base32 "1azfpxvsgcr0yvap9l76hwjyl90fg0xkpkll4ykbgyn1bprl8vcw"))))
    (properties `((upstream-name . "CAEN")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-summarizedexperiment r-poiclaclu))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/CAEN")
    (synopsis
     "Category encoding method for selecting feature genes for the classification of single-cell RNA-seq")
    (description
     "With the development of high-throughput techniques, more and more gene
expression analysis tend to replace hybridization-based microarrays with the
revolutionary technology.The novel method encodes the category again by
employing the rank of samples for each gene in each class.  We then consider the
correlation coefficient of gene and class with rank of sample and new rank of
category.  The highest correlation coefficient genes are considered as the
feature genes which are most effective to classify the samples.")
    (license license:gpl2)))

(define-public r-cadra
  (package
    (name "r-cadra")
    (version "1.4.0")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "CaDrA" version))
       (sha256
        (base32 "1vb1rq4bs24swcswxvsid1bhc1lpivrynqsy39lb362d0bmgr211"))))
    (properties `((upstream-name . "CaDrA")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f
      #:phases '(modify-phases %standard-phases
                  (add-after 'unpack 'set-HOME
                    (lambda _
                      (setenv "HOME" "/tmp"))))))
    (propagated-inputs (list r-summarizedexperiment
                             r-reshape2
                             r-r-cache
                             r-ppcor
                             r-plyr
                             r-misc3d
                             r-mass
                             r-knnmi
                             r-gtable
                             r-gplots
                             r-ggplot2
                             r-doparallel))
    (native-inputs (list r-knitr))
    (home-page "https://github.com/montilab/CaDrA/")
    (synopsis "Candidate Driver Analysis")
    (description
     "This package performs both stepwise and backward heuristic search for candidate
(epi)genetic drivers based on a binary multi-omics dataset. @code{CaDrA's} main
objective is to identify features which, together, are significantly skewed or
enriched pertaining to a given vector of continuous scores (e.g. sample-specific
scores representing a phenotypic readout of interest, such as protein
expression, pathway activity, etc.), based on the union occurence (i.e.  logical
OR) of the events.")
    (license (license:fsdg-compatible "GPL-3 + file LICENSE"))))

(define-public r-cadd-v1-6-hg38
  (package
    (name "r-cadd-v1-6-hg38")
    (version "3.18.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cadd.v1.6.hg38" version
                              'annotation))
       (sha256
        (base32 "0088wv3a082ircmgpx23822bvjwqd5jdvilkgvhaypksbnbdkq68"))))
    (properties `((upstream-name . "cadd.v1.6.hg38")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genomicscores r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cadd.v1.6.hg38")
    (synopsis
     "CADD v1.6 Pathogenicity Scores AnnotationHub Resource Metadata for hg38")
    (description
     "Store University of Washington CADD v1.6 hg38 pathogenicity scores
@code{AnnotationHub} Resource Metadata.  Provide provenance and citation
information for University of Washington CADD v1.6 hg38 pathogenicity score
@code{AnnotationHub} resources.  Illustrate in a vignette how to access those
resources.")
    (license license:artistic2.0)))

(define-public r-cadd-v1-6-hg19
  (package
    (name "r-cadd-v1-6-hg19")
    (version "3.18.1")
    (source
     (origin
       (method url-fetch)
       (uri (bioconductor-uri "cadd.v1.6.hg19" version
                              'annotation))
       (sha256
        (base32 "1g8pk1bmq2p6a7r1skfs54a2b8106znasympyz3dq3vahm5ia0dq"))))
    (properties `((upstream-name . "cadd.v1.6.hg19")))
    (build-system r-build-system)
    (arguments
     (list
      #:tests? #f))
    (propagated-inputs (list r-genomicscores r-annotationhub))
    (native-inputs (list r-knitr))
    (home-page "https://bioconductor.org/packages/cadd.v1.6.hg19")
    (synopsis
     "CADD v1.6 Pathogenicity Scores AnnotationHub Resource Metadata for hg19")
    (description
     "Store University of Washington CADD v1.6 hg19 pathogenicity scores
@code{AnnotationHub} Resource Metadata.  Provide provenance and citation
information for University of Washington CADD v1.6 hg19 pathogenicity score
@code{AnnotationHub} resources.  Illustrate in a vignette how to access those
resources.")
    (license license:artistic2.0)))

